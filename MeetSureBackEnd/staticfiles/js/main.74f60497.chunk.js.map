{"version":3,"sources":["assets/img/SidebarHelpImage.png","assets/img/BackgroundCard1.png","assets/img/signInImage.png","assets/img/BgSignUp.png","components/Footer/Footer.js","components/Icons/Icons.js","components/Icons/IconBox.js","components/Scrollbar/Scrollbar.js","components/Separator/Separator.js","components/Sidebar/SidebarHelp.js","components/Sidebar/Sidebar.js","components/Card/Card.js","components/Card/CardBody.js","components/Card/CardHeader.js","components/Charts/BarChart.js","variables/charts.js","components/Charts/LineChart.js","variables/general.js","components/Tables/TablesProjectRow.js","components/Tables/TablesTableRow.js","views/Dashboard/Tables.js","views/Dashboard/Profile.js","views/Pages/SignIn.js","views/Pages/SignUp.js","views/Dashboard/AIChat.js","views/Dashboard/AIWrite.js","views/Dashboard/AITranslate.js","views/Dashboard/MeetSure.js","routes.js","views/Dashboard/Dashboard.js","components/Navbars/AuthNavbar.js","components/Configurator/Configurator.js","components/Menu/ItemContent.js","components/Navbars/SearchBar/SearchBar.js","components/Navbars/AdminNavbarLinks.js","components/Navbars/AdminNavbar.js","components/FixedPlugin/FixedPlugin.js","components/Layout/MainPanel.js","components/Layout/PanelContainer.js","components/Layout/PanelContent.js","components/RTLProvider/RTLProvider.js","theme/styles.js","theme/foundations/breakpoints.js","theme/components/button.js","theme/components/input.js","theme/additions/card/Card.js","theme/additions/layout/MainPanel.js","theme/additions/layout/PanelContent.js","theme/additions/layout/PanelContainer.js","theme/theme.js","theme/components/badge.js","theme/components/link.js","index.js","layouts/Auth.js","layouts/Admin.js","layouts/RTL.js","assets/img/avatars/avatar2.png","assets/img/avatars/avatar3.png","assets/img/avatars/avatar4.png","assets/img/avatars/avatar5.png","assets/img/avatars/avatar1.png","assets/img/avatars/avatar6.png","assets/img/admin-background.png","assets/img/avatars/avatar7.png","assets/img/avatars/avatar8.png","assets/img/avatars/avatar10.png","assets/img/ImageArchitect1.png","assets/img/ImageArchitect2.png","assets/img/ImageArchitect3.png","assets/img/avatars/avatar9.png"],"names":["module","exports","Footer","props","React","createElement","Flex","flexDirection","base","xl","alignItems","justifyContent","px","pb","ChatIcon","createIcon","displayName","path","Fragment","fill","d","pathProps","PenIcon","viewBox","AdobexdLogo","clip-path","AtlassianLogo","CartIcon","ClockIcon","height","width","DocumentIcon","xmlns","version","id","stroke","strokeWidth","fillRule","transform","rx","x1","y1","x2","y2","gradientUnits","stopColor","offset","GlobeIcon","strokeMiterlimit","strokeLinecap","strokeLinejoin","HomeIcon","InvisionLogo","JiraLogo","PersonIcon","cx","cy","r","ProfileIcon","RocketIcon","SettingsIcon","SlackLogo","clipRule","SpotifyLogo","StatsIcon","WalletIcon","ArgonLogoDark","ArgonLogoLight","ChakraLogoDark","ChakraLogoLight","ChakraLogoBlue","IconBox","children","rest","Object","assign","borderRadius","renderTrack","_ref","style","position","maxWidth","transition","opacity","bottom","top","right","renderTrackRTL","_ref2","left","renderThumbDark","_ref3","background","renderThumbLight","_ref4","renderView","_ref5","marginRight","renderViewRTL","_ref6","marginLeft","HSeparator","variant","h","w","bg","SidebarHelp","sidebarVariant","textColor","useColorModeValue","colorMode","useColorMode","Stack","justify","direction","align","spacing","mb","mt","mx","Image","src","SidebarHelpImage","textAlign","Text","fontSize","color","fontWeight","Link","href","minW","Button","window","innerWidth","SidebarResponsive","location","useLocation","logo","routes","hamburgerColor","state","setState","useState","mainPanel","useRef","activeBg","inactiveBg","activeColor","inactiveColor","sidebarActiveShadow","sidebarBackgroundColor","createLinks","map","prop","key","redirect","category","ps","sm","py","document","documentElement","dir","rtlName","name","views","NavLink","to","layout","routeName","pathname","boxSize","boxShadow","_hover","_active","borderColor","_focus","icon","Icon","me","my","links","brand","Box","pt","isOpen","onOpen","onClose","useDisclosure","btnRef","display","ref","HamburgerIcon","onClick","Drawer","placement","finalFocusRef","DrawerOverlay","DrawerContent","maxW","ms","DrawerCloseButton","DrawerBody","Sidebar","sidebarBg","pe","m","filter","Scrollbars","autoHide","renderTrackVertical","renderThumbVertical","Card","styles","useStyleConfig","__css","CardBody","CardHeader","BarChart","Component","constructor","super","this","chartData","chartOptions","componentDidMount","render","Chart","options","series","type","barChartData","data","barChartOptions","chart","toolbar","show","tooltip","theme","xaxis","categories","labels","colors","axisBorder","yaxis","dataLabels","enabled","grid","strokeDashArray","plotOptions","bar","columnWidth","responsive","breakpoint","lineChartData","lineChartOptions","curve","axisTicks","legend","gradient","shade","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","LineChart","ReactApexChart","avatar1","avatar2","avatar3","avatar4","avatar5","avatar10","avatar7","avatar8","avatar9","FaBell","FaHtml5","FaShoppingCart","FaCreditCard","SiDropbox","tablesTableData","email","subdomain","domain","status","date","tablesProjectData","budget","progression","pageVisits","FaFilePdf","FaArrowDown","FaArrowUp","AiOutlineExclamation","pageName","visitors","uniqueUsers","bounceRate","socialTraffic","referral","percentage","DashboardTableRow","isLast","titleColor","Tr","Td","minWidth","pl","borderBottom","flexWrap","as","Progress","colorScheme","size","value","p","FaEllipsisV","cursor","TablesTableRow","bgStatus","Avatar","Badge","Tables","md","overflowX","Table","Thead","Th","Tbody","row","index","arr","TablesProjectRow","length","Profile","iconColor","bgProfile","borderProfileColor","emailColor","lg","maxH","backdropFilter","border","FaCube","IoDocumentsSharp","FaPenFancy","Grid","templateColumns","gap","Switch","noOfLines","FaFacebook","FaInstagram","FaTwitter","alignSelf","avatar6","SignIn","bgForm","colorIcons","bgIcons","bgIconsHover","minH","zIndex","HStack","FaApple","FaGoogle","FormControl","FormLabel","Input","placeholder","htmlFor","bgImage","signInImage","bgSize","SignUp","justifySelf","overflow","bgRepeat","BgSignUp","AIChat","selectedChat","setSelectedChat","chatMessages","setChatMessages","sender","text","inputValue","setInputValue","getIconForChat","option","VStack","leftIcon","alt","flex","overflowY","message","onChange","e","target","handleSendMessage","trim","newMessage","prevMessages","AIWrite","emailContent","setEmailContent","setLength","format","setFormat","tone","setTone","language","setLanguage","copyStatus","setCopyStatus","generateEmail","Textarea","handleCopyToClipboard","content","navigator","clipboard","writeText","then","setTimeout","err","console","error","FiFile","readOnly","resize","AITranslate","inputText","setInputText","translatedText","setTranslatedText","detectedLanguage","setDetectedLanguage","targetLanguage","setTargetLanguage","translateText","Menu","MenuButton","rightIcon","FiChevronDown","MenuList","MenuItem","MeetSure","transcript","speaker","time","copyText","setCopyText","FiPlus","handleCopy","allText","entry","join","FiCopy","backgroundColor","handleDownload","blob","Blob","link","URL","createObjectURL","download","click","FiDownload","css","mr","Tabs","TabList","Tab","TabPanels","TabPanel","dashRoutes","component","iconBlue","iconBoxInside","tableRowColor","textTableColor","SimpleGrid","columns","Stat","StatLabel","textTransform","StatNumber","templateRows","minHeight","FaPlus","ImageArchitect1","AvatarGroup","ImageArchitect2","ImageArchitect3","el","secondaryNavbar","AuthNavbar","logoText","secondary","bgButton","colorButton","lineHeight","fontsize","linksAuth","Configurator","setSidebarVariant","fixed","switched","setSwitched","isChecked","toggleColorMode","secondaryButtonBg","secondaryButtonBorder","secondaryButtonColor","bgDrawer","settingsRef","blockScrollOnMount","DrawerHeader","onSwitch","textDecorationColor","GitHubButton","data-icon","data-show-count","aria-label","alignContent","isExternal","ItemContent","navbarIcon","notificationColor","aName","aSrc","boldInfo","info","SearchBar","searchIconColor","inputBg","InputGroup","InputLeftElement","IconButton","SearchIcon","HeaderLinks","scrolled","navbarIconWhenFixedAndScrolled","navbarIconDefault","menuBg","BellIcon","AdminNavbar","setScrolled","useEffect","addEventListener","changeNavbar","removeEventListener","brandText","gray700orGray200","whiteOrGray200","boxShadowLight","backgroundLight","borderLight","dropShadowDark","mainText","secondaryText","navbarPosition","navbarFilter","navbarBackdrop","navbarShadow","navbarBg","navbarBorder","secondaryMargin","paddingX","scrollY","borderWidth","borderStyle","transitionDelay","transitionDuration","transition-property","transitionTimingFunction","Breadcrumb","BreadcrumbItem","BreadcrumbLink","AdminNavbarLinks","FixedPlugin","fixedDisplay","MainPanel","PanelContainer","PanelContent","rtl","stylisPlugins","ltr","RtlProvider","cache","createCache","CacheProvider","globalStyles","gray","700","navy","50","100","200","300","400","500","600","800","900","global","body","mode","fontFamily","html","breakpoints","createBreakpoints","buttonStyles","components","variants","primary","danger","outlined","dark","light","baseStyle","inputStyles","field","auth","_placeholder","search","CardComponent","wordWrap","backgroundClip","panel","defaultProps","MainPanelComponent","float","maxHeight","transitionProperty","main","PanelContentComponent","PanelContainerComponent","extendTheme","sizes","decoration","textDecoration","ReactDOM","ChakraProvider","resetCss","HashRouter","Route","wrapper","createRef","getActiveNavbar","i","categoryActiveNavbar","indexOf","getRoutes","collapse","navRef","Portal","containerRef","Redirect","from","setFixed","getActiveRoute","collapseActiveRoute","categoryActiveRoute","bgAdmin","onOpaque","onTransparent","getElementById"],"mappings":";2HAAAA,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,mJCI5B,SAASC,EAAOC,GAC7B,OACEC,IAAAC,cAACC,IAAI,CACHC,cAAe,CACbC,KAAM,SACNC,GAAI,OAENC,WAAY,CACVF,KAAM,SACNC,GAAI,SAENE,eAAe,gBACfC,GAAG,OACHC,GAAG,S,2BCbF,MAAMC,EAAWC,YAAW,CACjCC,YAAa,WACbC,KACEb,IAAAC,cAAAD,IAAAc,SAAA,KACEd,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,6MAIRC,UAAW,CACTF,KAAM,kBAIGG,EAAUP,YAAW,CAChCC,YAAa,UACbC,KACEb,IAAAC,cAAAD,IAAAc,SAAA,KACEd,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,+VAIRG,QAAS,cAGEC,EAAcT,YAAW,CACpCC,YAAa,cACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,KAAGoB,YAAU,eACXrB,IAAAC,cAAA,QACEe,EAAE,gJACFD,KAAK,YAEPf,IAAAC,cAAA,QACEe,EAAE,46CACFD,KAAK,eAMAO,EAAgBX,YAAW,CACtCC,YAAa,gBACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,SACED,IAAAC,cAAA,QACEe,EAAE,0JACFD,KAAK,YAEPf,IAAAC,cAAA,QACEe,EAAE,0KACFD,KAAK,eAMAQ,EAAWZ,YAAW,CACjCC,YAAa,WACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,6YAKKQ,EAAYb,YAAW,CAClCC,YAAa,YACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,SACED,IAAAC,cAAA,SACED,IAAAC,cAAA,QAAMc,KAAK,OAAOU,OAAO,KAAKC,MAAM,QAEtC1B,IAAAC,cAAA,SACED,IAAAC,cAAA,SACED,IAAAC,cAAA,SACED,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,sHAqIHW,GA7HkBhB,YAAW,CACxCC,YAAa,kBACbO,QAAS,cACTN,KACEb,IAAAC,cAAA,KACE2B,MAAM,6BACNF,MAAM,OACND,OAAO,OACPI,QAAQ,OACR7B,IAAAC,cAAA,KACE6B,GAAG,0BACHC,OAAO,OACPC,YAAY,IACZjB,KAAK,OACLkB,SAAS,WACTjC,IAAAC,cAAA,KACE6B,GAAG,OACHI,UAAU,kCACVnB,KAAK,eACLkB,SAAS,WACTjC,IAAAC,cAAA,QACEe,EAAE,2pCACFc,GAAG,UAEL9B,IAAAC,cAAA,QACEe,EAAE,kgBACFc,GAAG,SAEL9B,IAAAC,cAAA,QACEe,EAAE,odACFc,GAAG,SAEL9B,IAAAC,cAAA,QACEe,EAAE,skBACFc,GAAG,cAQWnB,YAAW,CACnCC,YAAa,aACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,iVAKqBL,YAAW,CACtCC,YAAa,gBACbO,QAAS,eACTN,KACEb,IAAAC,cAAA,KAAGyB,MAAM,MAAMD,OAAO,MAAMN,QAAQ,cAAcJ,KAAK,QACrDf,IAAAC,cAAA,KAAGoB,YAAU,eACXrB,IAAAC,cAAA,QACEe,EAAE,yZACFD,KAAK,iBAEPf,IAAAC,cAAA,QACEe,EAAE,sQACFD,KAAK,iBAEPf,IAAAC,cAAA,QACEe,EAAE,2rBACFD,KAAK,iBAEPf,IAAAC,cAAA,QACEe,EAAE,+IACFD,KAAK,iBAEPf,IAAAC,cAAA,QACEe,EAAE,yPACFD,KAAK,iBAEPf,IAAAC,cAAA,QACEe,EAAE,wsBACFD,KAAK,iBAEPf,IAAAC,cAAA,QAAMyB,MAAM,MAAMD,OAAO,MAAMU,GAAG,QAAQpB,KAAK,YAC/Cf,IAAAC,cAAA,QACEe,EAAE,iYACFD,KAAK,WAGTf,IAAAC,cAAA,YACED,IAAAC,cAAA,kBACE6B,GAAG,gBACHM,GAAG,QACHC,GAAG,IACHC,GAAG,QACHC,GAAG,MACHC,cAAc,kBACdxC,IAAAC,cAAA,QAAMwC,UAAU,YAChBzC,IAAAC,cAAA,QAAMyC,OAAO,IAAID,UAAU,aAE7BzC,IAAAC,cAAA,YAAU6B,GAAG,SACX9B,IAAAC,cAAA,QAAMyB,MAAM,UAAUD,OAAO,MAAMV,KAAK,eAOhBJ,YAAW,CAC3CC,YAAa,gBACbO,QAAS,eACTN,KACEb,IAAAC,cAAA,KAAGc,KAAK,QACNf,IAAAC,cAAA,QACEe,EAAE,60DACFD,KAAK,SAEPf,IAAAC,cAAA,QACEe,EAAE,8OACFD,KAAK,eAMeJ,YAAW,CACrCC,YAAa,eACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,SACED,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,sNAEJhB,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,gHAMG2B,EAAYhC,YAAW,CAClCC,YAAa,YACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,SACED,IAAAC,cAAA,QACE8B,OAAO,eACPhB,KAAK,cACLC,EAAE,8DACFgB,YAAY,MACZY,iBAAiB,OAEnB5C,IAAAC,cAAA,QACE8B,OAAO,eACPhB,KAAK,cACLC,EAAE,uIACFgB,YAAY,MACZY,iBAAiB,OAEnB5C,IAAAC,cAAA,QACE8B,OAAO,eACPhB,KAAK,cACLC,EAAE,kFAEJhB,IAAAC,cAAA,QACE8B,OAAO,eACPhB,KAAK,cACLC,EAAE,gKACFgB,YAAY,MACZa,cAAc,QACdC,eAAe,UAEjB9C,IAAAC,cAAA,QACE8B,OAAO,eACPhB,KAAK,cACLC,EAAE,uCACFgB,YAAY,MACZY,iBAAiB,UAiBZG,GAXWpC,YAAW,CACjCC,YAAa,WACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,kkBAKgBL,YAAW,CACjCC,YAAa,WACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,SACED,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,0SAEJhB,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,0TAMGgC,EAAerC,YAAW,CACrCC,YAAa,eACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,KAAGoB,YAAU,eACXrB,IAAAC,cAAA,QACEe,EAAE,iJACFD,KAAK,YAEPf,IAAAC,cAAA,QACEe,EAAE,izBACFD,KAAK,YAMAkC,EAAWtC,YAAW,CACjCC,YAAa,WACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,KAAGoB,YAAU,eACXrB,IAAAC,cAAA,QACEe,EAAE,sNACFD,KAAK,YAEPf,IAAAC,cAAA,QACEe,EAAE,0GACFD,KAAK,wBAEPf,IAAAC,cAAA,QACEe,EAAE,8GACFD,KAAK,2BAuCAmC,GAjCiBvC,YAAW,CACvCC,YAAa,iBACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,OACEyB,MAAM,KACND,OAAO,KACPN,QAAQ,YACRJ,KAAK,OACLa,MAAM,8BACN5B,IAAAC,cAAA,UAAQkD,GAAG,UAAUC,GAAG,UAAUC,EAAE,UAAUtC,KAAK,YACnDf,IAAAC,cAAA,UAAQkD,GAAG,UAAUC,GAAG,UAAUC,EAAE,UAAUtC,KAAK,eAK/BJ,YAAW,CACnCC,YAAa,aACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,SACED,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,4PAEJhB,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,uNAMgBL,YAAW,CACnCC,YAAa,aACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,kcAKKsC,EAAc3C,YAAW,CACpCC,YAAa,cACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,SACED,IAAAC,cAAA,QAAMe,EAAE,kBAAkBD,KAAK,gBAC/Bf,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,oJAMGuC,EAAa5C,YAAW,CACnCC,YAAa,aACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,SACED,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,8gBAEJhB,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,8QAMGwC,EAAe7C,YAAW,CACrCC,YAAa,eACbO,QAAS,YAETN,KACEb,IAAAC,cAAA,SACED,IAAAC,cAAA,QAAMe,EAAE,kBAAkBD,KAAK,SAC/Bf,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,k2BAMGyC,EAAY9C,YAAW,CAClCC,YAAa,YACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,KAAGoB,YAAU,cAAcY,SAAS,UAAUyB,SAAS,WACrD1D,IAAAC,cAAA,QACEe,EAAE,kOACFD,KAAK,YAEPf,IAAAC,cAAA,QACEe,EAAE,6NACFD,KAAK,YAEPf,IAAAC,cAAA,QACEe,EAAE,kPACFD,KAAK,YAEPf,IAAAC,cAAA,QACEe,EAAE,sOACFD,KAAK,eAMA4C,EAAchD,YAAW,CACpCC,YAAa,cACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,KAAGoB,YAAU,eACXrB,IAAAC,cAAA,QACEe,EAAE,giBACFD,KAAK,eAkBA6C,GAZcjD,YAAW,CAEpCC,YAAa,YACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,kdAKiBL,YAAW,CAClCC,YAAa,YACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,2mBAKK6C,EAAalD,YAAW,CACnCC,YAAa,aACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,SACED,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,oWAEJhB,IAAAC,cAAA,QACEc,KAAK,eACLC,EAAE,sKA0BG8C,GApBWnD,YAAW,CACjCC,YAAa,WACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,OACEyB,MAAM,KACND,OAAO,KACPN,QAAQ,WACRJ,KAAK,OACLa,MAAM,8BACN5B,IAAAC,cAAA,QACEgC,SAAS,UACTyB,SAAS,UACT1C,EAAE,4mCACFD,KAAK,eAMgBJ,YAAW,CACtCC,YAAa,gBACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,OAAKyB,MAAM,KAAKD,OAAO,KAAKV,KAAK,OAAOa,MAAM,8BAC5C5B,IAAAC,cAAA,QACEgC,SAAS,UACTyB,SAAS,UACT1C,EAAE,oYACFD,KAAK,YAEPf,IAAAC,cAAA,QACEe,EAAE,w0CACFD,KAAK,gBAMAgD,EAAiBpD,YAAW,CACvCC,YAAa,iBACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,OAAKyB,MAAM,KAAKD,OAAO,KAAKV,KAAK,OAAOa,MAAM,8BAC5C5B,IAAAC,cAAA,QACEgC,SAAS,UACTyB,SAAS,UACT1C,EAAE,uYACFD,KAAK,SAEPf,IAAAC,cAAA,QACEe,EAAE,o0CACFD,KAAK,YAMAiD,EAAiBrD,YAAW,CACvCC,YAAa,iBACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,OAAKyB,MAAM,KAAKD,OAAO,KAAKV,KAAK,OAAOa,MAAM,8BAC5C5B,IAAAC,cAAA,QACEe,EAAE,mnDACFD,KAAK,YAEPf,IAAAC,cAAA,QACEe,EAAE,yHACFD,KAAK,mBAEPf,IAAAC,cAAA,QACEe,EAAE,mOACFD,KAAK,SAEPf,IAAAC,cAAA,YACED,IAAAC,cAAA,kBACE6B,GAAG,WACHM,GAAG,SACHC,GAAG,IACHC,GAAG,SACHC,GAAG,KACHC,cAAc,kBACdxC,IAAAC,cAAA,QAAMwC,UAAU,YAChBzC,IAAAC,cAAA,QAAMyC,OAAO,IAAID,UAAU,iBAOxBwB,EAAkBtD,YAAW,CACxCC,YAAa,kBACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,OAAKyB,MAAM,KAAKD,OAAO,KAAKV,KAAK,OAAOa,MAAM,8BAC5C5B,IAAAC,cAAA,QACEe,EAAE,6uDACFD,KAAK,SAEPf,IAAAC,cAAA,QACEe,EAAE,oOACFD,KAAK,eAMAmD,EAAiBvD,YAAW,CACvCC,YAAa,kBACbO,QAAS,YACTN,KACEb,IAAAC,cAAA,OAAKyB,MAAM,KAAKD,OAAO,KAAKV,KAAK,OAAOa,MAAM,8BAC5C5B,IAAAC,cAAA,QACEe,EAAE,0uDACFD,KAAK,SAEPf,IAAAC,cAAA,QACEe,EAAE,mOACFD,KAAK,e,6BCznBE,SAASoD,EAAQpE,GAC9B,MAAM,SAAEqE,KAAaC,GAAStE,EAE9B,OACEC,IAAAC,cAACC,IAAIoE,OAAAC,OAAA,CACHjE,WAAY,SACZC,eAAgB,SAChBiE,aAAc,OACVH,GAEHD,GCXA,MAAMK,EAAcC,IAA0B,IAAzB,MAAEC,KAAU5E,GAAO2E,EAY7C,OAAO1E,IAAAC,cAAA,MAAAqE,OAAAC,OAAA,CAAKI,MAAO,IAAKA,EAVtBC,SAAU,WACVC,SAAU,OACVnD,MAAO,EACPoD,WAAY,wBACZC,QAAS,EACTC,OAAQ,EACRC,IAAK,EACLT,aAAc,EACdU,MAAO,IAE2CnF,KAEzCoF,EAAiBC,IAA0B,IAAzB,MAAET,KAAU5E,GAAOqF,EAYhD,OAAOpF,IAAAC,cAAA,MAAAqE,OAAAC,OAAA,CAAKI,MAAO,IAAKA,EAVtBC,SAAU,WACVlD,MAAO,EACPoD,WAAY,wBACZC,QAAS,EACTC,OAAQ,EACRC,IAAK,EACLT,aAAc,EACdU,MAAO,QACPG,KAAM,IAE4CtF,KAEzCuF,EAAkBC,IAA0B,IAAzB,MAAEZ,KAAU5E,GAAOwF,EAKjD,OAAOvF,IAAAC,cAAA,MAAAqE,OAAAC,OAAA,CAAKI,MAAO,IAAKA,EAHtBH,aAAc,GACdgB,WAAY,4BAEsCzF,KAEzC0F,EAAmBC,IAA0B,IAAzB,MAAEf,KAAU5E,GAAO2F,EAKlD,OAAO1F,IAAAC,cAAA,MAAAqE,OAAAC,OAAA,CAAKI,MAAO,IAAKA,EAHtBH,aAAc,GACdgB,WAAY,yBAEsCzF,KAEzC4F,EAAaC,IAA0B,IAAzB,MAAEjB,KAAU5E,GAAO6F,EAI5C,OAAO5F,IAAAC,cAAA,MAAAqE,OAAAC,OAAA,CAAKI,MAAO,IAAKA,EAFtBkB,aAAc,KAEmC9F,KAExC+F,EAAgBC,IAA0B,IAAzB,MAAEpB,KAAU5E,GAAOgG,EAK/C,OAAO/F,IAAAC,cAAA,MAAAqE,OAAAC,OAAA,CAAKI,MAAO,IAAKA,EAHtBkB,YAAa,QACbG,YAAa,KAEoCjG,KCpD9C,SAASkG,EAAWlG,GACzB,MAAM,QAAEmG,EAAO,SAAE9B,KAAaC,GAAStE,EACvC,OACEC,IAAAC,cAACC,IAAIoE,OAAAC,OAAA,CACH4B,EAAE,MACFC,EAAE,OACFC,GAAG,kGACChC,I,8BCGH,SAASiC,EAAYvG,GAE1B,MAAM,SAAEqE,EAAQ,eAAEmC,KAAmBlC,GAAStE,EACxCyG,EAAYC,YAAkB,WAAY,UAC1C,UAAEC,GAAcC,cACtB,OACE3G,IAAAC,cAAC2G,IAAK,CACJC,QAAQ,SACRC,UAAU,SACVC,MAAM,SACNC,QAAQ,OACRC,GAAG,OACHC,GAAG,OACHC,GAAG,QACHnH,IAAAC,cAACmH,IAAK,CAACC,IAAKC,IAAkBlB,EAAE,QAAQD,EAAE,SAC1CnG,IAAAC,cAACC,IAAI,CAAC4G,UAAU,SAASS,UAAU,UACjCvH,IAAAC,cAACuH,IAAI,CAACC,SAAS,OAAOC,MAAOlB,EAAWmB,WAAW,QAAO,cAG1D3H,IAAAC,cAACuH,IAAI,CAACC,SAAS,OAAOC,MAAM,YAAW,2BAIzC1H,IAAAC,cAAC2H,IAAI,CAACC,KAAK,6DAA6DC,KAAK,QAC3E9H,IAAAC,cAAC8H,IAAM,CAAC7B,QAAQ,UAAU4B,KAAK,QAAO,kBAIxC9H,IAAAC,cAAC2H,IAAI,CAACC,KAAK,kEAAkEC,KAAK,QAE9E9H,IAAAC,cAAC8H,IAAM,CACL7B,QAAuB,UAAdQ,EAAwB,OAAS,OAC1CoB,KAAK,OACLb,GAAIe,OAAOC,YAAc,MAAQ,QAAQ,oB,cC6N9C,SAASC,GAAkBnI,GAEhC,IAAIoI,EAAWC,cACf,MAAM,KAAEC,EAAI,OAAEC,EAAM,UAAE5B,EAAS,eAAE6B,KAAmBlE,GAAStE,GAGtDyI,EAAOC,GAAYzI,IAAM0I,SAAS,IACnCC,EAAY3I,IAAM4I,SAMxB,IAAIC,EAAWpC,YAAkB,QAAS,YACtCqC,EAAarC,YAAkB,QAAS,YACxCsC,EAActC,YAAkB,WAAY,SAC5CuC,EAAgBvC,YAAkB,WAAY,SAC9CwC,EAAsBxC,YACxB,mCACA,QAEEyC,EAAyBzC,YAAkB,QAAS,YAGxD,MAAM0C,EAAeb,GACZA,EAAOc,IAAI,CAACC,EAAMC,KACvB,GAAID,EAAKE,SACP,OAAO,KAET,GAAIF,EAAKG,SAAU,CAGjB,MAFS,GACNH,EAAY,QAAMb,EAAMa,EAAKb,OAE9BxI,IAAAC,cAAAD,IAAAc,SAAA,KACEd,IAAAC,cAACuH,IAAI,CACHE,MAAOqB,EACPpB,WAAW,OACXV,GAAI,CACF5G,GAAI,OAEN8G,GAAG,OACHsC,GAAI,CACFC,GAAI,OACJrJ,GAAI,QAENsJ,GAAG,QAE+B,QAAjCC,SAASC,gBAAgBC,IACtBT,EAAKU,QACLV,EAAKW,MAEVb,EAAYE,EAAKY,QAIxB,OACEjK,IAAAC,cAACiK,IAAO,CAACC,GAAId,EAAKe,OAASf,EAAKxI,KAAMyI,IAAKA,GACC,YAhD7Be,EAgDAhB,EAAKe,OAASf,EAAKxI,KA/C/BsH,EAASmC,WAAaD,EAAY,SAAW,IAgD5CrK,IAAAC,cAAC8H,IAAM,CACLwC,QAAQ,UACRhK,eAAe,aACfD,WAAW,SACX+F,GAAIwC,EACJ2B,UAAWvB,EACXhC,GAAI,CACF5G,GAAI,OAEN8G,GAAI,CACF9G,GAAI,QAENoJ,GAAI,CACFC,GAAI,OACJrJ,GAAI,QAENsJ,GAAG,OACHnF,aAAa,OACbiG,OAAO,OACPrE,EAAE,OACFsE,QAAS,CACPrE,GAAI,UACJnE,UAAW,OACXyI,YAAa,eAEfC,OAAQ,CACNJ,UAAW,SAGbxK,IAAAC,cAACC,IAAI,KACmB,kBAAdmJ,EAAKwB,KACX7K,IAAAC,cAAC6K,KAAI,KAAEzB,EAAKwB,MAEZ7K,IAAAC,cAACkE,EAAO,CACNkC,GAAG,WACHqB,MAAM,QACNvB,EAAE,OACFC,EAAE,OACF2E,GAAG,QAEF1B,EAAKwB,MAGV7K,IAAAC,cAACuH,IAAI,CAACE,MAAOqB,EAAaiC,GAAG,OAAOvD,SAAS,MACT,QAAjCmC,SAASC,gBAAgBC,IACtBT,EAAKU,QACLV,EAAKW,QAKfhK,IAAAC,cAAC8H,IAAM,CACLwC,QAAQ,UACRhK,eAAe,aACfD,WAAW,SACX+F,GAAG,cACHY,GAAI,CACF5G,GAAI,OAEN8G,GAAI,CACF9G,GAAI,QAENsJ,GAAG,OACHF,GAAI,CACFC,GAAI,OACJrJ,GAAI,QAENmE,aAAa,OACbiG,OAAO,OACPrE,EAAE,OACFsE,QAAS,CACPrE,GAAI,UACJnE,UAAW,OACXyI,YAAa,eAEfC,OAAQ,CACNJ,UAAW,SAGbxK,IAAAC,cAACC,IAAI,KACmB,kBAAdmJ,EAAKwB,KACX7K,IAAAC,cAAC6K,KAAI,KAAEzB,EAAKwB,MAEZ7K,IAAAC,cAACkE,EAAO,CACNkC,GAAIyC,EACJpB,MAAM,WACNvB,EAAE,OACFC,EAAE,OACF2E,GAAG,QAEF1B,EAAKwB,MAGV7K,IAAAC,cAACuH,IAAI,CAACE,MAAOsB,EAAegC,GAAG,OAAOvD,SAAS,MACX,QAAjCmC,SAASC,gBAAgBC,IACtBT,EAAKU,QACLV,EAAKW,SAjJJK,QA2JrB,IAAIY,EAAQjL,IAAAC,cAAAD,IAAAc,SAAA,KAAGqI,EAAYb,IAIvB4C,EACFlL,IAAAC,cAACkL,IAAG,CAACC,GAAI,OAAQnE,GAAG,OACjBoB,EACDrI,IAAAC,cAACgG,EAAU,CAAC+E,GAAG,UAKnB,MAAM,OAAEK,EAAM,OAAEC,EAAM,QAAEC,GAAYC,cAC9BC,EAASzL,IAAM4I,SAErB,OACE5I,IAAAC,cAACC,IAAI,CACHwL,QAAS,CAAEhC,GAAI,OAAQrJ,GAAI,QAC3BsL,IAAKhD,EACLrI,WAAW,UAEXN,IAAAC,cAAC2L,IAAa,CACZlE,MAAOa,EACPnC,EAAE,OACFD,EAAE,OACFwF,IAAKF,EACLI,QAASP,IAEXtL,IAAAC,cAAC6L,IAAM,CACLT,OAAQA,EACRE,QAASA,EACTQ,UAA4C,QAAjCnC,SAASC,gBAAgBC,IAAgB,QAAU,OAC9DkC,cAAeP,GAEfzL,IAAAC,cAACgM,IAAa,MACdjM,IAAAC,cAACiM,IAAa,CACZ9F,EAAE,QACF+F,KAAK,QACLC,GAAI,CACF1C,GAAI,QAENsB,GAAI,CACFtB,GAAI,QAENlF,aAAa,OACb6B,GAAI6C,GAEJlJ,IAAAC,cAACoM,IAAiB,CAChBzB,OAAQ,CAAEJ,UAAW,QACrBC,OAAQ,CAAED,UAAW,UAEvBxK,IAAAC,cAACqM,IAAU,CAACH,KAAK,QAAQ3L,GAAG,QAC1BR,IAAAC,cAACkL,IAAG,CAACgB,KAAK,OAAOhG,EAAE,SACjBnG,IAAAC,cAACkL,IAAG,KAAED,GACNlL,IAAAC,cAAC2G,IAAK,CAACE,UAAU,SAASG,GAAG,QAC3BjH,IAAAC,cAACkL,IAAG,KAAEF,IAERjL,IAAAC,cAACqG,EAAW,WASXiG,OA5cf,SAAiBxM,GAEf,IAAIoI,EAAWC,cAEf,MAAOI,EAAOC,GAAYzI,IAAM0I,SAAS,IACnCC,EAAY3I,IAAM4I,UAMlB,UAAElC,GAAcC,KAEhB,eAAEJ,GAAmBxG,EACrBoJ,EAAeb,IAEnB,IAAIO,EAAWpC,YAAkB,QAAS,YACtCqC,EAAarC,YAAkB,QAAS,YACxCsC,EAActC,YAAkB,WAAY,SAC5CuC,EAAgBvC,YAAkB,WAAY,YAElD,OAAO6B,EAAOc,IAAI,CAACC,EAAMC,KACvB,GAAID,EAAKE,SACP,OAAO,KAET,GAAIF,EAAKG,SAAU,CAGjB,MAFS,GACNH,EAAY,QAAMb,EAAMa,EAAKb,OAE9BxI,IAAAC,cAAAD,IAAAc,SAAA,KACEd,IAAAC,cAACuH,IAAI,CACHE,MAAOqB,EACPpB,WAAW,OACXV,GAAI,CACF5G,GAAI,OAEN8G,GAAG,OACHsC,GAAI,CACFC,GAAI,OACJrJ,GAAI,QAENsJ,GAAG,QAE+B,QAAjCC,SAASC,gBAAgBC,IACtBT,EAAKU,QACLV,EAAKW,MAEVb,EAAYE,EAAKY,QAIxB,OACEjK,IAAAC,cAACiK,IAAO,CAACC,GAAId,EAAKe,OAASf,EAAKxI,KAAMyI,IAAKA,GACC,YA7C7Be,EA6CAhB,EAAKe,OAASf,EAAKxI,KA5C/BsH,EAASmC,WAAaD,EAAY,SAAW,IA6C5CrK,IAAAC,cAAC8H,IAAM,CACLwC,QAAQ,UACRhK,eAAe,aACfD,WAAW,SACXkK,UAtCgB,mCAuChBnE,GAAIwC,EACJ/D,WAtDQ,cAuDRmC,GAAI,CACF5G,GAAI,OAEN8G,GAAI,CACF9G,GAAI,QAENoJ,GAAI,CACFC,GAAI,OACJrJ,GAAI,QAENsJ,GAAG,OACHnF,aAAa,OACbiG,OAAO,OACPrE,EAAE,OACFsE,QAAS,CACPrE,GAAI,UACJnE,UAAW,OACXyI,YAAa,eAEfC,OAAQ,CACNJ,UAAW,qCAGbxK,IAAAC,cAACC,IAAI,KACmB,kBAAdmJ,EAAKwB,KACX7K,IAAAC,cAAC6K,KAAI,KAAEzB,EAAKwB,MAEZ7K,IAAAC,cAACkE,EAAO,CACNkC,GAAG,WACHqB,MAAM,QACNvB,EAAE,OACFC,EAAE,OACF2E,GAAG,OACHjG,WAxFE,eA0FDuE,EAAKwB,MAGV7K,IAAAC,cAACuH,IAAI,CAACE,MAAOqB,EAAaiC,GAAG,OAAOvD,SAAS,MACT,QAAjCmC,SAASC,gBAAgBC,IACtBT,EAAKU,QACLV,EAAKW,QAKfhK,IAAAC,cAAC8H,IAAM,CACLwC,QAAQ,UACRhK,eAAe,aACfD,WAAW,SACX+F,GAAG,cACHY,GAAI,CACF5G,GAAI,OAEN8G,GAAI,CACF9G,GAAI,QAENsJ,GAAG,OACHF,GAAI,CACFC,GAAI,OACJrJ,GAAI,QAENmE,aAAa,OACbiG,OAAO,OACPrE,EAAE,OACFsE,QAAS,CACPrE,GAAI,UACJnE,UAAW,OACXyI,YAAa,eAEfC,OAAQ,CACNJ,UAAW,SAGbxK,IAAAC,cAACC,IAAI,KACmB,kBAAdmJ,EAAKwB,KACX7K,IAAAC,cAAC6K,KAAI,KAAEzB,EAAKwB,MAEZ7K,IAAAC,cAACkE,EAAO,CACNkC,GAAIyC,EACJpB,MAAM,WACNvB,EAAE,OACFC,EAAE,OACF2E,GAAG,OACHjG,WA3IE,eA6IDuE,EAAKwB,MAGV7K,IAAAC,cAACuH,IAAI,CAACE,MAAOsB,EAAegC,GAAG,OAAOvD,SAAS,MACX,QAAjCmC,SAASC,gBAAgBC,IACtBT,EAAKU,QACLV,EAAKW,SAjJJK,UA0Jf,KAAEhC,EAAI,OAAEC,GAAWvI,EAEzB,IAAIkL,EAAQjL,IAAAC,cAAAD,IAAAc,SAAA,KAAGqI,EAAYb,IAG3B,IAAIkE,EAAY/F,YAAkB,QAAS,YAG3C,IAAIyE,EACFlL,IAAAC,cAACkL,IAAG,CAACC,GAAI,OAAQnE,GAAG,QACjBoB,EACDrI,IAAAC,cAACgG,EAAU,CAAC+E,GAAG,UAKnB,OACEhL,IAAAC,cAACkL,IAAG,CAACQ,IAAKhD,GACR3I,IAAAC,cAACkL,IAAG,CAACO,QAAS,CAAEhC,GAAI,OAAQrJ,GAAI,SAAWuE,SAAS,SAClD5E,IAAAC,cAACkL,IAAG,CACF9E,GAAImG,EACJ1H,WAjLY,cAkLZsB,EAAE,QACF+F,KAAK,QACLC,GAAI,CACF1C,GAAI,QAENsB,GAAI,CACFtB,GAAI,QAENvD,EAAE,qBACFsD,GAAG,OACHgD,GAAG,OACHC,EA1Ba,MA2BbC,OAAO,gDACPnI,aA7BY,QA+BZxE,IAAAC,cAAC2M,cAAU,CACTC,UAAQ,EACRC,oBACmC,QAAjClD,SAASC,gBAAgBC,IACrB3E,EACAV,EAENsI,oBAAqBtG,YACnBhB,EACAH,GAEFK,WACmC,QAAjCiE,SAASC,gBAAgBC,IACrBhE,EACAH,GAGN3F,IAAAC,cAACkL,IAAG,KAAED,GACNlL,IAAAC,cAAC2G,IAAK,CAACE,UAAU,SAASG,GAAG,QAC3BjH,IAAAC,cAACkL,IAAG,KAAEF,IAERjL,IAAAC,cAACqG,EAAW,CAACC,eAAgBA,S,4CCpP1ByG,OAXf,SAAcjN,GACZ,MAAM,QAAEmG,EAAO,SAAE9B,KAAaC,GAAStE,EACjCkN,EAASC,aAAe,OAAQ,CAAEhH,YAExC,OACElG,IAAAC,cAACkL,IAAG7G,OAAAC,OAAA,CAAC4I,MAAOF,GAAY5I,GACrBD,ICKQgJ,OAXf,SAAkBrN,GAChB,MAAM,QAAEmG,EAAO,SAAE9B,KAAaC,GAAStE,EACjCkN,EAASC,aAAe,WAAY,CAAEhH,YAE5C,OACElG,IAAAC,cAACkL,IAAG7G,OAAAC,OAAA,CAAC4I,MAAOF,GAAY5I,GACrBD,ICKQiJ,OAXf,SAAoBtN,GAClB,MAAM,QAAEmG,EAAO,SAAE9B,KAAaC,GAAStE,EACjCkN,EAASC,aAAe,aAAc,CAAEhH,YAE9C,OACElG,IAAAC,cAACkL,IAAG7G,OAAAC,OAAA,CAAC4I,MAAOF,GAAY5I,GACrBD,I,oBCLP,MAAMkJ,WAAiBC,YACrBC,YAAYzN,GACV0N,MAAM1N,GACN2N,KAAKlF,MAAQ,CACXmF,UAAW,GACXC,aAAc,IAIlBC,oBACEH,KAAKjF,SAAS,CACZkF,UAAWD,KAAK3N,MAAM4N,UACtBC,aAAcF,KAAK3N,MAAM6N,eAI7BE,SACE,OACI9N,IAAAC,cAAC8N,KAAK,CACJC,QAASN,KAAKlF,MAAMoF,aACpBK,OAAQP,KAAKlF,MAAMmF,UACnBO,KAAK,MACLxM,MAAM,OACND,OAAO,UAMF6L,UChCR,MAAMa,GAAe,CAC1B,CACEnE,KAAM,QACNoE,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,MAIlBC,GAAkB,CAC7BC,MAAO,CACLC,QAAS,CACPC,MAAM,IAGVC,QAAS,CACPC,MAAO,QAETC,MAAO,CACLC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAChDC,OAAQ,CACNlK,MAAO,CACLmK,OAAQ,UACRrH,SAAU,SAGd+G,MAAM,EACNO,WAAY,CACVP,MAAM,IAIVQ,MAAO,CACLR,MAAM,EACN9G,MAAO,UACPmH,OAAQ,CACNL,MAAM,EACN7J,MAAO,CACLmK,OAAQ,UACRrH,SAAU,UAIhB1G,KAAM,CACJ+N,OAAQ,WAEVG,WAAY,CACVC,SAAS,GAEXC,KAAM,CACJC,gBAAiB,GAEnBC,YAAa,CACXC,IAAK,CACH9K,aAAc,GACd+K,YAAa,SAGjBC,WAAY,CACV,CACEC,WAAY,IACZzB,QAAS,CACPqB,YAAa,CACXC,IAAK,CACH9K,aAAc,QAQbkL,GAAgB,CAC3B,CACE1F,KAAM,cACNoE,KAAM,CAAC,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAE/C,CACEpE,KAAM,WACNoE,KAAM,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,OAInCuB,GAAmB,CAC9BrB,MAAO,CACLC,QAAS,CACPC,MAAM,IAGVC,QAAS,CACPC,MAAO,QAETO,WAAY,CACVC,SAAS,GAEXnN,OAAQ,CACN6N,MAAO,UAETjB,MAAO,CACLT,KAAM,WACNU,WAAY,CACV,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFiB,UAAW,CACTrB,MAAM,GAERO,WAAY,CACVP,MAAM,GAERK,OAAQ,CACNlK,MAAO,CACLmK,OAAQ,OACRrH,SAAU,UAIhBuH,MAAO,CACLH,OAAQ,CACNlK,MAAO,CACLmK,OAAQ,OACRrH,SAAU,UAIhBqI,OAAQ,CACNtB,MAAM,GAERW,KAAM,CACJC,gBAAiB,GAEnBrO,KAAM,CACJmN,KAAM,WACN6B,SAAU,CACRC,MAAO,QACP9B,KAAM,WACN+B,eAAgB,GAChBC,eAAe,EACfC,YAAa,GACbC,UAAW,EACXC,MAAO,IAETvB,OAAQ,CAAC,OAAQ,YAEnBA,OAAQ,CAAC,OAAQ,YCpJnB,MAAMwB,WAAkBtQ,IAAMuN,UAC5BC,YAAYzN,GACV0N,MAAM1N,GAEN2N,KAAKlF,MAAQ,CACXmF,UAAW,GACXC,aAAc,IAIlBC,oBACEH,KAAKjF,SAAS,CACZkF,UAAW+B,GACX9B,aAAc+B,KAIlB7B,SACE,OACE9N,IAAAC,cAACsQ,KAAc,CACbvC,QAASN,KAAKlF,MAAMoF,aACpBK,OAAQP,KAAKlF,MAAMmF,UACnBO,KAAK,OACLxM,MAAM,OACND,OAAO,UAMA6O,U,+MCCDE,KAASC,KAASC,KAASC,KAASC,KAOpCF,KAASD,KAOTI,KAAUF,KAOVF,KAASC,KAASI,KAASC,KAO3BF,KAAUH,KAASI,KAASL,KAASM,KAOrCC,KAASN,KAASD,KAQtBQ,KAMAC,KAMAC,KAMAC,KAMAC,KAeIb,KAASC,KAASC,KAASC,KAASC,KAOpCF,KAASD,KAOTI,KAAUF,KAOVF,KAASC,KAASI,KAASC,KAO3BF,KAAUH,KAASI,KAASL,KAASM,KAOrCC,KAASN,KAASD,KAQtBQ,KAMAC,KAMAC,KAMAC,KAMAC,KAzJH,MAqKMC,GAAkB,CAC7B,CACEjJ,KAAMmI,KACNxG,KAAM,kBACNuH,MAAO,qBACPC,UAAW,UACXC,OAAQ,eACRC,OAAQ,SACRC,KAAM,YAER,CACEtJ,KAAMoI,KACNzG,KAAM,cACNuH,MAAO,uBACPC,UAAW,aACXC,OAAQ,YACRC,OAAQ,UACRC,KAAM,YAER,CACEtJ,KAAMqI,KACN1G,KAAM,kBACNuH,MAAO,uBACPC,UAAW,YACXC,OAAQ,WACRC,OAAQ,SACRC,KAAM,YAER,CACEtJ,KAAMsI,KACN3G,KAAM,iBACNuH,MAAO,yBACPC,UAAW,UACXC,OAAQ,eACRC,OAAQ,SACRC,KAAM,YAER,CACEtJ,KAAMuI,KACN5G,KAAM,gBACNuH,MAAO,sBACPC,UAAW,aACXC,OAAQ,YACRC,OAAQ,UACRC,KAAM,YAER,CACEtJ,KAAMyI,KACN9G,KAAM,cACNuH,MAAO,oBACPC,UAAW,WACXC,OAAQ,eACRC,OAAQ,UACRC,KAAM,aAIGC,GAAoB,CAC/B,CACEvJ,KAAMjH,EACN4I,KAAM,oBACN6H,OAAQ,UACRH,OAAQ,UACRI,YAAa,IAEf,CACEzJ,KAAM/G,EACN0I,KAAM,qBACN6H,OAAQ,SACRH,OAAQ,WACRI,YAAa,IAEf,CACEzJ,KAAM5E,EACNuG,KAAM,sBACN6H,OAAQ,UACRH,OAAQ,OACRI,YAAa,KAEf,CACEzJ,KAAM1E,EACNqG,KAAM,wBACN6H,OAAQ,UACRH,OAAQ,OACRI,YAAa,KAEf,CACEzJ,KAAMpF,EACN+G,KAAM,2BACN6H,OAAQ,OACRH,OAAQ,UACRI,YAAa,KAyGJC,IAhGHC,KAOAA,KAOAA,KAOAA,KAOAA,KA+BAC,KAMAC,KASAA,KAMAA,KAMAC,KAMAF,KAIgB,CACxB,CACEG,SAAU,UACVC,SAAU,QACVC,YAAa,IACbC,WAAY,UAEd,CACEH,SAAU,oBACVC,SAAU,QACVC,YAAa,IACbC,WAAY,UAEd,CACEH,SAAU,qBACVC,SAAU,QACVC,YAAa,IACbC,WAAY,UAEd,CACEH,SAAU,qBACVC,SAAU,QACVC,YAAa,IACbC,WAAY,UAEd,CACEH,SAAU,sBACVC,SAAU,QACVC,YAAa,IACbC,WAAY,YAIHC,GAAgB,CAC3B,CACEC,SAAU,WACVJ,SAAU,QACVK,WAAY,GACZhL,MAAO,UAET,CACE+K,SAAU,WACVJ,SAAU,QACVK,WAAY,GACZhL,MAAO,UAET,CACE+K,SAAU,SACVJ,SAAU,QACVK,WAAY,GACZhL,MAAO,QAET,CACE+K,SAAU,YACVJ,SAAU,QACVK,WAAY,GACZhL,MAAO,QAET,CACE+K,SAAU,UACVJ,SAAU,QACVK,WAAY,GACZhL,MAAO,W,oFCjYIiL,OAxDf,SAA2B5S,GACzB,MAAM,KAAEsI,EAAI,KAAE2B,EAAI,OAAE0H,EAAM,OAAEG,EAAM,YAAEC,EAAW,OAAEc,GAAW7S,EACtDyG,EAAYC,YAAkB,WAAY,SAC1CoM,EAAapM,YAAkB,WAAY,SAC3CkE,EAAclE,YAAkB,WAAY,YAElD,OACEzG,IAAAC,cAAC6S,KAAE,KACD9S,IAAAC,cAAC8S,KAAE,CAACC,SAAU,CAAEtJ,GAAI,SAAWuJ,GAAG,MAAMtI,YAAaA,EAAauI,aAAcN,EAAS,OAAS,MAChG5S,IAAAC,cAACC,IAAI,CAACI,WAAW,SAASqJ,GAAG,QAAQqJ,SAAS,OAAOG,SAAS,UAC5DnT,IAAAC,cAAC6K,IAAI,CAACsI,GAAI/K,EAAMlC,EAAG,OAAQC,EAAG,OAAQ2E,GAAG,SACzC/K,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAOmL,EACPlL,WAAW,OACXqL,SAAS,QAERhJ,KAIPhK,IAAAC,cAAC8S,KAAE,CAACG,aAAcN,EAAS,OAAS,KAAMjI,YAAaA,GACrD3K,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,OAAOlH,GAAG,SACxDoR,IAGL7R,IAAAC,cAAC8S,KAAE,CAACG,aAAcN,EAAS,OAAS,KAAMjI,YAAaA,GACrD3K,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,OAAOlH,GAAG,SACxDiR,IAGL1R,IAAAC,cAAC8S,KAAE,CAACG,aAAcN,EAAS,OAAS,KAAMjI,YAAaA,GACrD3K,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAM,WACNC,WAAW,OACXlH,GAAG,SACAqR,EAAH,KACF9R,IAAAC,cAACoT,KAAQ,CACPC,YAAY,OACZC,KAAK,KACLC,MAAO1B,EACPtN,aAAa,WAInBxE,IAAAC,cAAC8S,KAAE,CAACG,aAAcN,EAAS,OAAS,KAAMjI,YAAaA,GACrD3K,IAAAC,cAAC8H,IAAM,CAAC0L,EAAE,MAAMpN,GAAG,cAAcH,QAAQ,cACvClG,IAAAC,cAAC6K,IAAI,CAACsI,GAAIM,KAAahM,MAAM,WAAWiM,OAAO,gBCyB1CC,OA3Ef,SAAwB7T,GACtB,MAAM,KAAEsI,EAAI,KAAE2B,EAAI,MAAEuH,EAAK,UAAEC,EAAS,OAAEC,EAAM,OAAEC,EAAM,KAAEC,EAAI,OAAEiB,GAAW7S,EACjEyG,EAAYC,YAAkB,WAAY,SAC1CoM,EAAapM,YAAkB,WAAY,SAC3CoN,EAAWpN,YAAkB,WAAY,YACzCkE,EAAclE,YAAkB,WAAY,YAElD,OACEzG,IAAAC,cAAC6S,KAAE,KACD9S,IAAAC,cAAC8S,KAAE,CACDC,SAAU,CAAEtJ,GAAI,SAChBuJ,GAAG,MACHtI,YAAaA,EACbuI,aAAcN,EAAS,OAAS,MAEhC5S,IAAAC,cAACC,IAAI,CAAC6G,MAAM,SAAS4C,GAAG,QAAQqJ,SAAS,OAAOG,SAAS,UACvDnT,IAAAC,cAAC6T,KAAM,CAACzM,IAAKgB,EAAMjC,EAAE,OAAO5B,aAAa,OAAOuG,GAAG,SACnD/K,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAOmL,EACPlL,WAAW,OACXqL,SAAS,QAERhJ,GAEHhK,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,UAC7C4J,MAMTvR,IAAAC,cAAC8S,KAAE,CAACpI,YAAaA,EAAauI,aAAcN,EAAS,OAAS,MAC5D5S,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAC9C8J,GAEHzR,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,UAC7C6J,KAIPxR,IAAAC,cAAC8S,KAAE,CAACpI,YAAaA,EAAauI,aAAcN,EAAS,OAAS,MAC5D5S,IAAAC,cAAC8T,IAAK,CACJ1N,GAAe,WAAXqL,EAAsB,YAAcmC,EACxCnM,MAA6B,QAC7BD,SAAS,OACTgM,EAAE,WACFjP,aAAa,OAEZkN,IAGL1R,IAAAC,cAAC8S,KAAE,CAACpI,YAAaA,EAAauI,aAAcN,EAAS,OAAS,MAC5D5S,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,OAAOlH,GAAG,SACxDkR,IAGL3R,IAAAC,cAAC8S,KAAE,CAACpI,YAAaA,EAAauI,aAAcN,EAAS,OAAS,MAC5D5S,IAAAC,cAAC8H,IAAM,CAAC0L,EAAE,MAAMpN,GAAG,cAAcH,QAAQ,cACvClG,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAM,WACNC,WAAW,OACXgM,OAAO,WACR,YCkCIK,OA5Ff,WACE,MAAMxN,EAAYC,YAAkB,WAAY,SAC1CkE,EAAclE,YAAkB,WAAY,YAElD,OACEzG,IAAAC,cAACC,IAAI,CAAC4G,UAAU,SAASsE,GAAI,CAAEhL,KAAM,QAAS6T,GAAI,SAChDjU,IAAAC,cAAC+M,GAAI,CACHhC,GAAG,OACHkJ,UAAW,CAAExK,GAAI,SAAUrJ,GAAI,UAC/BI,GAAG,OAEHT,IAAAC,cAACoN,GAAU,CAACoG,EAAE,oBACZzT,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,OAAOlH,GAAG,SAAQ,oBAKvET,IAAAC,cAACmN,GAAQ,KACPpN,IAAAC,cAACkU,KAAK,CAACjO,QAAQ,SAASwB,MAAOlB,GAC7BxG,IAAAC,cAACmU,KAAK,KACJpU,IAAAC,cAAC6S,KAAE,CAAC9H,GAAG,QAAQiI,GAAG,OAChBjT,IAAAC,cAACoU,KAAE,CAACpB,GAAG,MAAMvL,MAAM,WAAWiD,YAAaA,GAAa,aAGxD3K,IAAAC,cAACoU,KAAE,CAAC3M,MAAM,WAAWiD,YAAaA,GAAa,UAC/C3K,IAAAC,cAACoU,KAAE,CAAC3M,MAAM,WAAWiD,YAAaA,GAAa,UAC/C3K,IAAAC,cAACoU,KAAE,CAAC3M,MAAM,WAAWiD,YAAaA,GAAa,cAC/C3K,IAAAC,cAACoU,KAAE,QAGPrU,IAAAC,cAACqU,KAAK,KACH1C,GAAkBxI,IAAI,CAACmL,EAAKC,EAAOC,IAEhCzU,IAAAC,cAACyU,GAAgB,CACf1K,KAAMuK,EAAIvK,KACV3B,KAAMkM,EAAIlM,KACVqJ,OAAQ6C,EAAI7C,OACZG,OAAQ0C,EAAI1C,OACZC,YAAayC,EAAIzC,YACjBc,OAAQ4B,IAAUC,EAAIE,OAAS,EAC/BrL,IAAKkL,SAQnBxU,IAAAC,cAAC+M,GAAI,CAACkH,UAAW,CAAExK,GAAI,SAAUrJ,GAAI,UAAYI,GAAG,OAClDT,IAAAC,cAACoN,GAAU,CAACoG,EAAE,oBACZzT,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,kBAI1D3H,IAAAC,cAACmN,GAAQ,KACPpN,IAAAC,cAACkU,KAAK,CAACjO,QAAQ,SAASwB,MAAOlB,GAC7BxG,IAAAC,cAACmU,KAAK,KACJpU,IAAAC,cAAC6S,KAAE,CAAC9H,GAAG,QAAQiI,GAAG,MAAMvL,MAAM,YAC5B1H,IAAAC,cAACoU,KAAE,CAACpB,GAAG,MAAMtI,YAAaA,EAAajD,MAAM,YAAY,UAGzD1H,IAAAC,cAACoU,KAAE,CAAC1J,YAAaA,EAAajD,MAAM,YAAY,YAChD1H,IAAAC,cAACoU,KAAE,CAAC1J,YAAaA,EAAajD,MAAM,YAAY,UAChD1H,IAAAC,cAACoU,KAAE,CAAC1J,YAAaA,EAAajD,MAAM,YAAY,YAChD1H,IAAAC,cAACoU,KAAE,CAAC1J,YAAaA,MAGrB3K,IAAAC,cAACqU,KAAK,KACHhD,GAAgBlI,IAAI,CAACmL,EAAKC,EAAOC,IAE9BzU,IAAAC,cAAC2T,GAAc,CACb5J,KAAMuK,EAAIvK,KACV3B,KAAMkM,EAAIlM,KACVkJ,MAAOgD,EAAIhD,MACXC,UAAW+C,EAAI/C,UACfC,OAAQ8C,EAAI9C,OACZC,OAAQ6C,EAAI7C,OACZC,KAAM4C,EAAI5C,KACViB,OAAQ4B,IAAUC,EAAIE,OAAS,EAC/BrL,IAAKkL,W,oCCiYVI,OA3bf,WACE,MAAM,UAAElO,GAAcC,cAGhBH,EAAYC,YAAkB,WAAY,SAC1CoO,EAAYpO,YAAkB,WAAY,SAC1CqO,EAAYrO,YAAkB,qBAAsB,YACpDsO,EAAqBtO,YAAkB,QAAS,eAChDuO,EAAavO,YAAkB,WAAY,YAEjD,OACEzG,IAAAC,cAACC,IAAI,CAAC4G,UAAU,SAASsE,GAAI,CAAEhL,KAAM,QAAS6T,GAAI,OAAQgB,GAAI,UAC5DjV,IAAAC,cAACC,IAAI,CACH4G,UAAW,CAAE4C,GAAI,SAAUuK,GAAI,OAC/BhN,GAAG,OACHiO,KAAK,QACL3U,eAAgB,CAAEmJ,GAAI,SAAUuK,GAAI,iBACpClN,MAAM,SACNoO,eAAe,aACf3K,UAAU,oCACV4K,OAAO,cACPzK,YAAaoK,EACb1O,GAAIyO,EACJrB,EAAE,OACFjP,aAAa,QACbxE,IAAAC,cAACC,IAAI,CACH6G,MAAM,SACNE,GAAI,CAAEyC,GAAI,OAAQuK,GAAI,OACtBnN,UAAW,CAAE4C,GAAI,SAAUuK,GAAI,OAC/B7N,EAAG,CAAEsD,GAAI,QACTnC,UAAW,CAAEmC,GAAI,SAAUuK,GAAI,UAC/BjU,IAAAC,cAAC6T,KAAM,CACL/I,GAAI,CAAEkJ,GAAI,QACV5M,IAAKuJ,KACLxK,EAAE,OACFD,EAAE,OACF3B,aAAa,SAEfxE,IAAAC,cAACC,IAAI,CAAC4G,UAAU,SAASjC,SAAS,OAAOmG,GAAI,CAAEtB,GAAI,SACjD1J,IAAAC,cAACuH,IAAI,CACHC,SAAU,CAAEiC,GAAI,KAAMuL,GAAI,MAC1BvN,MAAOlB,EACPmB,WAAW,OACXyE,GAAI,CAAE1C,GAAI,MAAOuK,GAAI,QAAS,iBAGhCjU,IAAAC,cAACuH,IAAI,CACHC,SAAU,CAAEiC,GAAI,KAAMuK,GAAI,MAC1BvM,MAAOsN,EACPrN,WAAW,YAAW,uBAK5B3H,IAAAC,cAACC,IAAI,CACH4G,UAAW,CAAE4C,GAAI,SAAUuL,GAAI,OAC/B7O,EAAG,CAAEsD,GAAI,OAAQuK,GAAI,MAAOgB,GAAI,SAChCjV,IAAAC,cAAC8H,IAAM,CAAC0L,EAAE,MAAMpN,GAAG,cAAcH,QAAQ,cACvClG,IAAAC,cAACC,IAAI,CACH6G,MAAM,SACNX,EAAG,CAAEsD,GAAI,OAAQuL,GAAI,SACrB5O,GAAkB,SAAdK,EAAuB,WAAa,OACxClC,aAAa,MACbjE,eAAe,SACfoJ,GAAG,OACHa,UAAU,oCACVmJ,OAAO,WACP3T,IAAAC,cAAC6K,IAAI,CAACpD,MAAOlB,EAAW4M,GAAIiC,KAAQtK,GAAG,QACvC/K,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,cAK5D3H,IAAAC,cAAC8H,IAAM,CAAC0L,EAAE,MAAMpN,GAAG,cAAcH,QAAQ,cACvClG,IAAAC,cAACC,IAAI,CACH6G,MAAM,SACNX,EAAG,CAAE6O,GAAI,SACTzQ,aAAa,OACbjE,eAAe,SACfoJ,GAAG,OACHxC,GAAI,CAAE8N,GAAI,QACVtB,OAAO,WACP3T,IAAAC,cAAC6K,IAAI,CAACpD,MAAOlB,EAAW4M,GAAIkC,KAAkBvK,GAAG,QACjD/K,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,WAK5D3H,IAAAC,cAAC8H,IAAM,CAAC0L,EAAE,MAAMpN,GAAG,cAAcH,QAAQ,cACvClG,IAAAC,cAACC,IAAI,CACH6G,MAAM,SACNX,EAAG,CAAE6O,GAAI,SACTzQ,aAAa,OACbjE,eAAe,SACfoJ,GAAG,OACHgK,OAAO,WACP3T,IAAAC,cAAC6K,IAAI,CAACpD,MAAOlB,EAAW4M,GAAImC,KAAYxK,GAAG,QAC3C/K,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,gBAQhE3H,IAAAC,cAACuV,IAAI,CAACC,gBAAiB,CAAE/L,GAAI,MAAOrJ,GAAI,kBAAoBqV,IAAI,QAC9D1V,IAAAC,cAAC+M,GAAI,CAACyG,EAAE,QACNzT,IAAAC,cAACoN,GAAU,CAACoG,EAAE,WAAWxM,GAAG,QAC1BjH,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,sBAI1D3H,IAAAC,cAACmN,GAAQ,CAAC5M,GAAG,OACXR,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,MAAMV,GAAG,QAAO,WAGhEjH,IAAAC,cAACC,IAAI,CAAC6G,MAAM,SAASE,GAAG,QACtBjH,IAAAC,cAAC0V,KAAM,CAACrC,YAAY,OAAOvI,GAAG,SAC9B/K,IAAAC,cAACuH,IAAI,CACHoO,UAAW,EACXnO,SAAS,KACTC,MAAM,WACNC,WAAW,OAAM,qCAIrB3H,IAAAC,cAACC,IAAI,CAAC6G,MAAM,SAASE,GAAG,QACtBjH,IAAAC,cAAC0V,KAAM,CAACrC,YAAY,OAAOvI,GAAG,SAC9B/K,IAAAC,cAACuH,IAAI,CACHoO,UAAW,EACXnO,SAAS,KACTC,MAAM,WACNC,WAAW,OAAM,6CAIrB3H,IAAAC,cAACC,IAAI,CAAC6G,MAAM,SAASE,GAAG,QACtBjH,IAAAC,cAAC0V,KAAM,CAACrC,YAAY,OAAOvI,GAAG,SAC9B/K,IAAAC,cAACuH,IAAI,CACHoO,UAAW,EACXnO,SAAS,KACTC,MAAM,WACNC,WAAW,OAAM,sCAIrB3H,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAM,WACNC,WAAW,MACX+E,EAAE,oBAAmB,eAGvB1M,IAAAC,cAACC,IAAI,CAAC6G,MAAM,SAASE,GAAG,QACtBjH,IAAAC,cAAC0V,KAAM,CAACrC,YAAY,OAAOvI,GAAG,SAC9B/K,IAAAC,cAACuH,IAAI,CACHoO,UAAW,EACXnO,SAAS,KACTC,MAAM,WACNC,WAAW,OAAM,8BAIrB3H,IAAAC,cAACC,IAAI,CAAC6G,MAAM,SAASE,GAAG,QACtBjH,IAAAC,cAAC0V,KAAM,CAACrC,YAAY,OAAOvI,GAAG,SAC9B/K,IAAAC,cAACuH,IAAI,CACHoO,UAAW,EACXnO,SAAS,KACTC,MAAM,WACNC,WAAW,OAAM,4BAIrB3H,IAAAC,cAACC,IAAI,CAAC6G,MAAM,SAASE,GAAG,QACtBjH,IAAAC,cAAC0V,KAAM,CAACrC,YAAY,OAAOvI,GAAG,SAC9B/K,IAAAC,cAACuH,IAAI,CACHoO,UAAW,EACXnO,SAAS,KACTC,MAAM,WACNC,WAAW,OAAM,+BAO3B3H,IAAAC,cAAC+M,GAAI,CAACyG,EAAE,OAAOzI,GAAI,CAAEtB,GAAI,OAAQrJ,GAAI,QACnCL,IAAAC,cAACoN,GAAU,CAACoG,EAAE,WAAWxM,GAAG,QAC1BjH,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,wBAI1D3H,IAAAC,cAACmN,GAAQ,CAAC5M,GAAG,OACXR,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,MAAMV,GAAG,QAAO,4NAMhEjH,IAAAC,cAACC,IAAI,CAAC6G,MAAM,SAASE,GAAG,QACtBjH,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAOlB,EACPmB,WAAW,OACXoD,GAAG,QAAO,aACC,KAEb/K,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,OAAM,oBAIxD3H,IAAAC,cAACC,IAAI,CAAC6G,MAAM,SAASE,GAAG,QACtBjH,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAOlB,EACPmB,WAAW,OACXoD,GAAG,QAAO,UACF,KAEV/K,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,OAAM,sBAIxD3H,IAAAC,cAACC,IAAI,CAAC6G,MAAM,SAASE,GAAG,QACtBjH,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAOlB,EACPmB,WAAW,OACXoD,GAAG,QAAO,SACH,KAET/K,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,OAAM,yBAIxD3H,IAAAC,cAACC,IAAI,CAAC6G,MAAM,SAASE,GAAG,QACtBjH,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAOlB,EACPmB,WAAW,OACXoD,GAAG,QAAO,YACA,KAEZ/K,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,OAAM,kBAIxD3H,IAAAC,cAACC,IAAI,CAAC6G,MAAM,SAASE,GAAG,QACtBjH,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAOlB,EACPmB,WAAW,OACXoD,GAAG,QAAO,gBACI,KAEhB/K,IAAAC,cAACC,IAAI,KACHF,IAAAC,cAAC2H,IAAI,CACHC,KAAK,IACLH,MAAOmN,EACPpN,SAAS,KACTsD,GAAG,OACHN,OAAQ,CAAE/C,MAAO,aACjB1H,IAAAC,cAAC6K,IAAI,CAACsI,GAAIyC,QAEZ7V,IAAAC,cAAC2H,IAAI,CACHC,KAAK,IACLH,MAAOmN,EACPpN,SAAS,KACTsD,GAAG,OACHN,OAAQ,CAAE/C,MAAO,aACjB1H,IAAAC,cAAC6K,IAAI,CAACsI,GAAI0C,QAEZ9V,IAAAC,cAAC2H,IAAI,CACHC,KAAK,IACLH,MAAOmN,EACPpN,SAAS,KACTsD,GAAG,OACHN,OAAQ,CAAE/C,MAAO,aACjB1H,IAAAC,cAAC6K,IAAI,CAACsI,GAAI2C,aAOtB/V,IAAAC,cAAC+M,GAAI,CAACyG,EAAE,QACNzT,IAAAC,cAACoN,GAAU,CAACoG,EAAE,WAAWxM,GAAG,QAC1BjH,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,kBAI1D3H,IAAAC,cAACmN,GAAQ,CAAC5M,GAAG,OACXR,IAAAC,cAACC,IAAI,CAAC4G,UAAU,SAASV,EAAE,QACzBpG,IAAAC,cAACC,IAAI,CAACK,eAAe,gBAAgB0G,GAAG,QACtCjH,IAAAC,cAACC,IAAI,CAAC6G,MAAM,UACV/G,IAAAC,cAAC6T,KAAM,CACLzM,IAAKoJ,KACLrK,EAAE,OACFD,EAAE,OACF3B,aAAa,OACbuG,GAAG,SAEL/K,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,YAC5C,KAEZ3H,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,OAAM,oCAK1D3H,IAAAC,cAAC8H,IAAM,CAAC0L,EAAE,MAAMpN,GAAG,cAAcH,QAAQ,cACvClG,IAAAC,cAACuH,IAAI,CACHC,SAAS,OACTE,WAAW,MACXD,MAAOmN,EACPmB,UAAU,UAAS,WAKzBhW,IAAAC,cAACC,IAAI,CAACK,eAAe,gBAAgB0G,GAAG,QACtCjH,IAAAC,cAACC,IAAI,CAAC6G,MAAM,UACV/G,IAAAC,cAAC6T,KAAM,CACLzM,IAAKqJ,KACLtK,EAAE,OACFD,EAAE,OACF3B,aAAa,OACbuG,GAAG,SAEL/K,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,YAC5C,KAEZ3H,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,OAAM,qCAK1D3H,IAAAC,cAAC8H,IAAM,CAAC0L,EAAE,MAAMpN,GAAG,cAAcH,QAAQ,cACvClG,IAAAC,cAACuH,IAAI,CACHC,SAAS,OACTE,WAAW,MACXD,MAAOmN,EACPmB,UAAU,UAAS,WAKzBhW,IAAAC,cAACC,IAAI,CAACK,eAAe,gBAAgB0G,GAAG,QACtCjH,IAAAC,cAACC,IAAI,CAAC6G,MAAM,UACV/G,IAAAC,cAAC6T,KAAM,CACLzM,IAAKsJ,KACLvK,EAAE,OACFD,EAAE,OACF3B,aAAa,OACbuG,GAAG,SAEL/K,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,YAC5C,KAEZ3H,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,OAAM,+BAK1D3H,IAAAC,cAAC8H,IAAM,CAAC0L,EAAE,MAAMpN,GAAG,cAAcH,QAAQ,cACvClG,IAAAC,cAACuH,IAAI,CACHC,SAAS,OACTE,WAAW,MACXD,MAAOmN,EACPmB,UAAU,UAAS,WAKzBhW,IAAAC,cAACC,IAAI,CAACK,eAAe,gBAAgB0G,GAAG,QACtCjH,IAAAC,cAACC,IAAI,CAAC6G,MAAM,UACV/G,IAAAC,cAAC6T,KAAM,CACLzM,IAAKuJ,KACLxK,EAAE,OACFD,EAAE,OACF3B,aAAa,OACbuG,GAAG,SAEL/K,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,YAC5C,KAEZ3H,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,OAAM,0BAK1D3H,IAAAC,cAAC8H,IAAM,CAAC0L,EAAE,MAAMpN,GAAG,cAAcH,QAAQ,cACvClG,IAAAC,cAACuH,IAAI,CACHC,SAAS,OACTE,WAAW,MACXD,MAAOmN,EACPmB,UAAU,UAAS,WAKzBhW,IAAAC,cAACC,IAAI,CAACK,eAAe,gBAAgB0G,GAAG,QACtCjH,IAAAC,cAACC,IAAI,CAAC6G,MAAM,UACV/G,IAAAC,cAAC6T,KAAM,CACLzM,IAAK4O,KACL7P,EAAE,OACFD,EAAE,OACF3B,aAAa,OACbuG,GAAG,SAEL/K,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,YAC5C,KAEZ3H,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,OAAM,0BAK1D3H,IAAAC,cAAC8H,IAAM,CAAC0L,EAAE,MAAMpN,GAAG,cAAcH,QAAQ,cACvClG,IAAAC,cAACuH,IAAI,CACHC,SAAS,OACTE,WAAW,MACXD,MAAOmN,EACPmB,UAAU,UAAS,iB,wCC9PxBE,OAtMf,WAEE,MAAM1P,EAAYC,YAAkB,WAAY,SAC1C0P,EAAS1P,YAAkB,QAAS,YACpCoM,EAAapM,YAAkB,WAAY,YAC3C2P,EAAa3P,YAAkB,WAAY,SAC3C4P,EAAU5P,YAAkB,cAAe,YAC3C6P,EAAe7P,YAAkB,UAAW,kBAClD,OACEzG,IAAAC,cAACC,IAAI,CAAC0E,SAAS,WAAWqC,GAAG,QAC3BjH,IAAAC,cAACC,IAAI,CACHqW,KAAM,CAAEtC,GAAI,UACZ9N,EAAG,CAAEuD,GAAI,UAAWuK,GAAI,OAAQgB,GAAI,QACpC7O,EAAE,OACF+F,KAAK,SACLhF,GAAG,OACH5G,eAAe,gBACf0G,GAAG,OACHmE,GAAI,CAAE6I,GAAI,QACVjU,IAAAC,cAACC,IAAI,CACHkG,EAAE,OACFD,EAAE,OACF7F,WAAW,SACXC,eAAe,SACf0G,GAAG,OACHC,GAAI,CAAE9G,KAAM,OAAQ6T,GAAI,SACxBjU,IAAAC,cAACC,IAAI,CACHsW,OAAO,IACP1P,UAAU,SACVV,EAAE,QACFZ,WAAW,cACXhB,aAAa,OACbiP,EAAE,OACFtM,GAAI,CAAE/G,KAAM,SACZsM,EAAG,CAAEtM,KAAM,OAAQ6T,GAAI,QACvB5N,GAAI8P,EACJ3L,UAAW/D,YACT,mCACA,UAEFzG,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAOlB,EACPmB,WAAW,OACXJ,UAAU,SACVN,GAAG,QAAO,iBAGZjH,IAAAC,cAACwW,IAAM,CAACzP,QAAQ,OAAOH,QAAQ,SAASI,GAAG,QACzCjH,IAAAC,cAACC,IAAI,CACH2G,QAAQ,SACRE,MAAM,SACNX,EAAE,OACFD,EAAE,OACF3B,aAAa,MACb4Q,OAAQ3O,YAAkB,YAAa,OACvCkE,YAAY,WACZgJ,OAAO,UACP7O,WAAW,gBACXuB,GAAIgQ,EACJ5L,OAAQ,CAAEpE,GAAIiQ,IACdtW,IAAAC,cAAC2H,IAAI,CAACC,KAAK,KACT7H,IAAAC,cAAC6K,IAAI,CAACsI,GAAIyC,KAAYnO,MAAO0O,EAAYhQ,EAAE,OAAOD,EAAE,WAGxDnG,IAAAC,cAACC,IAAI,CACH2G,QAAQ,SACRE,MAAM,SACNX,EAAE,OACFD,EAAE,OACF3B,aAAa,MACb4Q,OAAQ3O,YAAkB,YAAa,OACvCkE,YAAY,WACZgJ,OAAO,UACP7O,WAAW,gBACXuB,GAAIgQ,EACJ5L,OAAQ,CAAEpE,GAAIiQ,IACdtW,IAAAC,cAAC2H,IAAI,CAACC,KAAK,KACT7H,IAAAC,cAAC6K,IAAI,CACHsI,GAAIsD,KACJhP,MAAO0O,EACPhQ,EAAE,OACFD,EAAE,OACFsE,OAAQ,CAAEkC,OAAQ,wBAIxB3M,IAAAC,cAACC,IAAI,CACH2G,QAAQ,SACRE,MAAM,SACNX,EAAE,OACFD,EAAE,OACF3B,aAAa,MACb4Q,OAAQ3O,YAAkB,YAAa,OACvCkE,YAAY,WACZgJ,OAAO,UACP7O,WAAW,gBACXuB,GAAIgQ,EACJ5L,OAAQ,CAAEpE,GAAIiQ,IACdtW,IAAAC,cAAC2H,IAAI,CAACC,KAAK,KACT7H,IAAAC,cAAC6K,IAAI,CACHsI,GAAIuD,KACJjP,MAAO0O,EACPhQ,EAAE,OACFD,EAAE,OACFsE,OAAQ,CAAEkC,OAAQ,yBAK1B3M,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAM,WACNC,WAAW,OACXJ,UAAU,SACVN,GAAG,QAAO,MAGZjH,IAAAC,cAAC2W,KAAW,KACV5W,IAAAC,cAAC4W,KAAS,CAACzK,GAAG,MAAM3E,SAAS,KAAKE,WAAW,UAAS,QAGtD3H,IAAAC,cAAC6W,KAAK,CACJ5Q,QAAQ,OACRuB,SAAS,KACT2E,GAAG,MACH8B,KAAK,OACL6I,YAAY,iBACZ9P,GAAG,OACHsM,KAAK,OAEPvT,IAAAC,cAAC4W,KAAS,CAACzK,GAAG,MAAM3E,SAAS,KAAKE,WAAW,UAAS,YAGtD3H,IAAAC,cAAC6W,KAAK,CACJ5Q,QAAQ,OACRuB,SAAS,KACT2E,GAAG,MACH8B,KAAK,WACL6I,YAAY,gBACZ9P,GAAG,OACHsM,KAAK,OAEPvT,IAAAC,cAAC2W,KAAW,CAAClL,QAAQ,OAAOpL,WAAW,SAAS2G,GAAG,QACjDjH,IAAAC,cAAC0V,KAAM,CAAC7T,GAAG,iBAAiBwR,YAAY,OAAOvI,GAAG,SAClD/K,IAAAC,cAAC4W,KAAS,CAACG,QAAQ,iBAAiB/P,GAAG,IAAIU,WAAW,UAAS,gBAIjE3H,IAAAC,cAAC8H,IAAM,CACLN,SAAS,OACTvB,QAAQ,OACRyB,WAAW,OACXvB,EAAE,OACFD,EAAE,KACFc,GAAG,QAAO,YAIdjH,IAAAC,cAACC,IAAI,CACHC,cAAc,SACdI,eAAe,SACfD,WAAW,SACX6L,KAAK,OACLjF,GAAG,OACHlH,IAAAC,cAACuH,IAAI,CAACE,MAAOlB,EAAWmB,WAAW,UAAS,2BAE1C3H,IAAAC,cAAC2H,IAAI,CACHF,MAAOmL,EACPO,GAAG,OACHhH,GAAG,MACHvE,KAAK,IACLF,WAAW,QAAO,eAO5B3H,IAAAC,cAACkL,IAAG,CACF+I,UAAU,SACV/N,EAAE,OACFC,EAAE,OACFf,KAAK,MACLT,SAAS,WACTqS,QAASC,MACTlX,IAAAC,cAACkL,IAAG,CACF/E,EAAE,OACFD,EAAE,OACFgR,OAAO,QACP9Q,GAAG,WACHtB,QAAQ,Y,qBC+BLqS,OA7Nf,WACE,MAAMjB,EAAS1P,YAAkB,QAAS,YACpCoM,EAAapM,YAAkB,WAAY,YAC3CD,EAAYC,YAAkB,WAAY,SAC1C2P,EAAa3P,YAAkB,WAAY,SAC3C4P,EAAU5P,YAAkB,cAAe,YAC3C6P,EAAe7P,YAAkB,UAAW,kBAClD,OACEzG,IAAAC,cAACC,IAAI,CACH4G,UAAU,SACVkP,UAAU,SACVqB,YAAY,SACZC,SAAS,UACTtX,IAAAC,cAACkL,IAAG,CACFvG,SAAS,WACT2R,KAAM,CAAEnW,KAAM,OAAQ6T,GAAI,QAC1BiB,KAAM,CAAE9U,KAAM,OAAQ6T,GAAI,QAC1B7N,EAAG,CAAE6N,GAAI,sBACT9H,KAAM,CAAE8H,GAAI,sBACZ5O,KAAK,IACLH,MAAM,IACNqS,SAAS,YACTD,SAAS,SACTd,OAAO,KACPvR,IAAI,IACJgS,QAASO,KACTL,OAAO,QACPhQ,GAAI,CAAE8M,GAAI,QACV/M,GAAI,CAAE+M,GAAI,QACVzP,aAAc,CAAEpE,KAAM,MAAO6T,GAAI,SACjCjU,IAAAC,cAACkL,IAAG,CAAC/E,EAAE,QAAQD,EAAE,QAAQE,GAAG,WAAWtB,QAAQ,SAEjD/E,IAAAC,cAACC,IAAI,CACH4G,UAAU,SACVS,UAAU,SACVhH,eAAe,SACfwG,MAAM,SACNG,GAAG,QACHD,GAAG,QACHjH,IAAAC,cAACuH,IAAI,CAACC,SAAS,MAAMC,MAAM,QAAQC,WAAW,QAAO,YAGrD3H,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAM,QACNC,WAAW,SACXT,GAAG,OACHD,GAAG,OACHb,EAAG,CAAEhG,KAAM,MAAOsJ,GAAI,MAAOuL,GAAI,MAAO5U,GAAI,UAAW,qFAK3DL,IAAAC,cAACC,IAAI,CAACI,WAAW,SAASC,eAAe,SAAS0G,GAAG,OAAOC,GAAG,QAC7DlH,IAAAC,cAACC,IAAI,CACH4G,UAAU,SACVV,EAAE,QACFZ,WAAW,cACXhB,aAAa,OACbiP,EAAE,OACFtM,GAAI,CAAE/G,KAAM,SACZiG,GAAI8P,EACJ3L,UAAW/D,YACT,mCACA,UAEFzG,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAOlB,EACPmB,WAAW,OACXJ,UAAU,SACVN,GAAG,QAAO,iBAGZjH,IAAAC,cAACwW,IAAM,CAACzP,QAAQ,OAAOH,QAAQ,SAASI,GAAG,QACzCjH,IAAAC,cAACC,IAAI,CACH2G,QAAQ,SACRE,MAAM,SACNX,EAAE,OACFD,EAAE,OACF3B,aAAa,MACb4Q,OAAQ3O,YAAkB,YAAa,OACvCkE,YAAY,WACZgJ,OAAO,UACP7O,WAAW,gBACXuB,GAAIgQ,EACJ5L,OAAQ,CAAEpE,GAAIiQ,IACdtW,IAAAC,cAAC2H,IAAI,CAACC,KAAK,KACT7H,IAAAC,cAAC6K,IAAI,CAACsI,GAAIyC,KAAYnO,MAAO0O,EAAYhQ,EAAE,OAAOD,EAAE,WAGxDnG,IAAAC,cAACC,IAAI,CACH2G,QAAQ,SACRE,MAAM,SACNX,EAAE,OACFD,EAAE,OACF3B,aAAa,MACb4Q,OAAQ3O,YAAkB,YAAa,OACvCkE,YAAY,WACZgJ,OAAO,UACP7O,WAAW,gBACXuB,GAAIgQ,EACJ5L,OAAQ,CAAEpE,GAAIiQ,IACdtW,IAAAC,cAAC2H,IAAI,CAACC,KAAK,KACT7H,IAAAC,cAAC6K,IAAI,CACHsI,GAAIsD,KACJhP,MAAO0O,EACPhQ,EAAE,OACFD,EAAE,OACFsE,OAAQ,CAAEkC,OAAQ,wBAIxB3M,IAAAC,cAACC,IAAI,CACH2G,QAAQ,SACRE,MAAM,SACNX,EAAE,OACFD,EAAE,OACF3B,aAAa,MACb4Q,OAAQ3O,YAAkB,YAAa,OACvCkE,YAAY,WACZgJ,OAAO,UACP7O,WAAW,gBACXuB,GAAIgQ,EACJ5L,OAAQ,CAAEpE,GAAIiQ,IACdtW,IAAAC,cAAC2H,IAAI,CAACC,KAAK,KACT7H,IAAAC,cAAC6K,IAAI,CACHsI,GAAIuD,KACJjP,MAAO0O,EACPhQ,EAAE,OACFD,EAAE,OACFsE,OAAQ,CAAEkC,OAAQ,yBAK1B3M,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAM,WACNC,WAAW,OACXJ,UAAU,SACVN,GAAG,QAAO,MAGZjH,IAAAC,cAAC2W,KAAW,KACV5W,IAAAC,cAAC4W,KAAS,CAACzK,GAAG,MAAM3E,SAAS,KAAKE,WAAW,UAAS,QAGtD3H,IAAAC,cAAC6W,KAAK,CACJ5Q,QAAQ,OACRuB,SAAS,KACT2E,GAAG,MACH8B,KAAK,OACL6I,YAAY,iBACZ9P,GAAG,OACHsM,KAAK,OAEPvT,IAAAC,cAAC4W,KAAS,CAACzK,GAAG,MAAM3E,SAAS,KAAKE,WAAW,UAAS,SAGtD3H,IAAAC,cAAC6W,KAAK,CACJ5Q,QAAQ,OACRuB,SAAS,KACT2E,GAAG,MACH8B,KAAK,QACL6I,YAAY,qBACZ9P,GAAG,OACHsM,KAAK,OAEPvT,IAAAC,cAAC4W,KAAS,CAACzK,GAAG,MAAM3E,SAAS,KAAKE,WAAW,UAAS,YAGtD3H,IAAAC,cAAC6W,KAAK,CACJ5Q,QAAQ,OACRuB,SAAS,KACT2E,GAAG,MACH8B,KAAK,WACL6I,YAAY,gBACZ9P,GAAG,OACHsM,KAAK,OAEPvT,IAAAC,cAAC2W,KAAW,CAAClL,QAAQ,OAAOpL,WAAW,SAAS2G,GAAG,QACjDjH,IAAAC,cAAC0V,KAAM,CAAC7T,GAAG,iBAAiBwR,YAAY,OAAOvI,GAAG,SAClD/K,IAAAC,cAAC4W,KAAS,CAACG,QAAQ,iBAAiB/P,GAAG,IAAIU,WAAW,UAAS,gBAIjE3H,IAAAC,cAAC8H,IAAM,CACLN,SAAS,OACTvB,QAAQ,OACRyB,WAAW,OACXvB,EAAE,OACFD,EAAE,KACFc,GAAG,QAAO,YAIdjH,IAAAC,cAACC,IAAI,CACHC,cAAc,SACdI,eAAe,SACfD,WAAW,SACX6L,KAAK,OACLjF,GAAG,OACHlH,IAAAC,cAACuH,IAAI,CAACE,MAAOlB,EAAWmB,WAAW,UAAS,2BAE1C3H,IAAAC,cAAC2H,IAAI,CACHF,MAAOmL,EACPO,GAAG,OACHhH,GAAG,MACHvE,KAAK,IACLF,WAAW,QAAO,iBC9EnB8P,OAvIf,WACI,MAAMjR,EAAYC,YAAkB,WAAY,SAC1CkE,EAAclE,YAAkB,WAAY,aAG3CiR,EAAcC,GAAmBjP,mBAAS,eAI1CkP,EAAcC,GAAmBnP,mBAAS,CAC7C,aAAc,CAAC,CAAEoP,OAAQ,KAAMC,KAAM,iEACrC,kBAAmB,CAAC,CAAED,OAAQ,KAAMC,KAAM,yEAGvCC,EAAYC,GAAiBvP,mBAAS,IAiBvCwP,EAAkBC,GACL,eAAXA,EACO,aACW,oBAAXA,EACA,eAEJ,GAGX,OACInY,IAAAC,cAACC,IAAI,CAAC4G,UAAU,MAAMsE,GAAI,CAAEhL,KAAM,QAAS6T,GAAI,QAAUyB,IAAI,QAEzD1V,IAAAC,cAAC+M,GAAI,CAAC5G,EAAE,MAAM8N,UAAW,CAAExK,GAAI,SAAUrJ,GAAI,WACzCL,IAAAC,cAACoN,GAAU,CAACoG,EAAE,oBACVzT,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,cAI5D3H,IAAAC,cAACmN,GAAQ,KACLpN,IAAAC,cAACmY,IAAM,CAACrR,MAAM,SA5CV,CAAC,aAAc,mBA6CFqC,IAAK+O,GACdnY,IAAAC,cAAC8H,IAAM,CACHuB,IAAK6O,EACL/R,EAAE,OACFkN,YAAaoE,IAAiBS,EAAS,OAAS,OAChDtM,QAASA,IAAM8L,EAAgBQ,GAC/BE,SACIrY,IAAAC,cAACmH,IAAK,CACFC,IAAK6Q,EAAeC,GACpB5N,QAAQ,OACR+N,IAAQH,EAAH,WAIZA,OAQrBnY,IAAAC,cAAC+M,GAAI,CAAC5G,EAAE,MAAM8N,UAAW,CAAExK,GAAI,SAAUrJ,GAAI,UAAY8F,EAAE,QACvDnG,IAAAC,cAACoN,GAAU,CAACoG,EAAE,oBACVzT,IAAAC,cAACwW,IAAM,KACHzW,IAAAC,cAACmH,IAAK,CACFC,IAAK6Q,EAAeR,GACpBnN,QAAQ,OACR+N,IAAQZ,EAAH,UAET1X,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAC5C+P,EAAa,yBAI1B1X,IAAAC,cAACmN,GAAQ,CAACjH,EAAE,QACRnG,IAAAC,cAACC,IAAI,CAAC4G,UAAU,SAASvG,eAAe,gBAAgB4F,EAAE,QAEtDnG,IAAAC,cAACkL,IAAG,CACAiK,OAAO,MACPzK,YAAaA,EACbnG,aAAa,KACbiP,EAAE,IACFxM,GAAG,IACHsR,KAAK,IACLC,UAAU,QAEVxY,IAAAC,cAACmY,IAAM,CAACrR,MAAM,QAAQC,QAAS,GAC1B4Q,EAAaF,GAActO,IAAI,CAACqP,EAASjE,IACtCxU,IAAAC,cAACkL,IAAG,CACA7B,IAAKkL,EACLwB,UAA8B,QAAnByC,EAAQX,OAAmB,WAAa,aACnDzR,GAAuB,QAAnBoS,EAAQX,OAAmB,WAAa,WAC5CpQ,MAA0B,QAAnB+Q,EAAQX,OAAmB,QAAU,QAC5CrE,EAAE,IACFjP,aAAa,KACb2H,KAAK,OAELnM,IAAAC,cAACuH,IAAI,CAACG,WAAW,QAAQ8Q,EAAQX,QACjC9X,IAAAC,cAACuH,IAAI,KAAEiR,EAAQV,UAO/B/X,IAAAC,cAACwW,IAAM,KACHzW,IAAAC,cAAC6W,KAAK,CACFC,YAAY,8BACZvD,MAAOwE,EACPU,SAAWC,GAAMV,EAAcU,EAAEC,OAAOpF,OACxC7I,YAAaA,IAEjB3K,IAAAC,cAAC8H,IAAM,CAACuL,YAAY,OAAOzH,QA3GzBgN,KACtB,GAA0B,KAAtBb,EAAWc,OAAe,OAE9B,MAAMC,EAAa,CAAEjB,OAAQ,MAAOC,KAAMC,GAG1CH,EAAiBmB,IAAY,IACtBA,EACH,CAACtB,GAAe,IAAIsB,EAAatB,GAAeqB,MAEpDd,EAAc,MAiG6D,sB,mBCuBpEgB,OAlJf,WACI,MAAMzS,EAAYC,YAAkB,WAAY,SAC1CkE,EAAclE,YAAkB,WAAY,aAG3CyS,EAAcC,GAAmBzQ,mBAAS,KAC1CiM,EAAQyE,GAAa1Q,mBAAS,WAC9B2Q,EAAQC,GAAa5Q,mBAAS,6BAC9B6Q,EAAMC,GAAW9Q,mBAAS,iBAC1B+Q,EAAUC,GAAehR,mBAAS,iBAClCiR,EAAYC,GAAiBlR,mBAAS,4BAGvCmR,EAAgBA,IAEE,iBAAbJ,EADgB,2BAAOJ,sBAAYE,sBAAU5E,gCAAiBuE,IACvB,aAAeG,EAAS,WAAaE,EAAO,aAAe5E,EAAS,eAAiBuE,EAcvI,OACIlZ,IAAAC,cAACC,IAAI,CAAC4G,UAAU,SAASsE,GAAI,CAAEhL,KAAM,QAAS6T,GAAI,SAC9CjU,IAAAC,cAACuV,IAAI,CAACC,gBAAiB,CAAE/L,GAAI,MAAOuL,GAAI,WAAaS,IAAI,QAErD1V,IAAAC,cAAC+M,GAAI,KACDhN,IAAAC,cAACoN,GAAU,CAACoG,EAAE,oBACVzT,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,6BAI5D3H,IAAAC,cAACmN,GAAQ,KAELpN,IAAAC,cAAC6Z,KAAQ,CACL/C,YAAY,4DACZvD,MAAO0F,EACPR,SAAWC,GAAMQ,EAAgBR,EAAEC,OAAOpF,OAC1C7I,YAAaA,EACb1D,GAAG,IACHsP,KAAK,UAITvW,IAAAC,cAACuH,IAAI,CAACG,WAAW,OAAOV,GAAG,KAAI,4BAC/BjH,IAAAC,cAAC2G,IAAK,CAACE,UAAU,MAAME,QAAS,EAAGC,GAAG,KACjC,CAAC,SAAK,eAAM,UAAKmC,IAAK+O,GACnBnY,IAAAC,cAAC8H,IAAM,CACHuB,IAAK6O,EACL7E,YAAaqB,IAAWwD,EAAS,OAAS,OAC1CtM,QAASA,IAAMuN,EAAUjB,IAExBA,KAMbnY,IAAAC,cAACuH,IAAI,CAACG,WAAW,OAAOV,GAAG,KAAI,4BAC/BjH,IAAAC,cAAC2G,IAAK,CAACE,UAAU,MAAME,QAAS,EAAGC,GAAG,KACjC,CAAC,2BAAQ,eAAM,eAAM,eAAM,gBAAMmC,IAAK+O,GACnCnY,IAAAC,cAAC8H,IAAM,CACHuB,IAAK6O,EACL7E,YAAa+F,IAAWlB,EAAS,OAAS,OAC1CtM,QAASA,IAAMyN,EAAUnB,IAExBA,KAMbnY,IAAAC,cAACuH,IAAI,CAACG,WAAW,OAAOV,GAAG,KAAI,gBAC/BjH,IAAAC,cAAC2G,IAAK,CAACE,UAAU,MAAME,QAAS,EAAGC,GAAG,KACjC,CAAC,eAAM,eAAM,eAAM,gBAAMmC,IAAK+O,GAC3BnY,IAAAC,cAAC8H,IAAM,CACHuB,IAAK6O,EACL7E,YAAaiG,IAASpB,EAAS,OAAS,OACxCtM,QAASA,IAAM2N,EAAQrB,IAEtBA,KAMbnY,IAAAC,cAACuH,IAAI,CAACG,WAAW,OAAOV,GAAG,KAAI,4BAC/BjH,IAAAC,cAAC2G,IAAK,CAACE,UAAU,MAAME,QAAS,EAAGC,GAAG,KACjC,CAAC,eAAM,gBAAMmC,IAAK+O,GACfnY,IAAAC,cAAC8H,IAAM,CACHuB,IAAK6O,EACL7E,YAAamG,IAAatB,EAAS,OAAS,OAC5CtM,QAASA,IAAM6N,EAAYvB,IAE1BA,KAMbnY,IAAAC,cAACC,IAAI,CAAC2G,QAAQ,YACV7G,IAAAC,cAAC8H,IAAM,CAACuL,YAAY,OAAOzH,QAASgO,GAAe,+BAQ/D7Z,IAAAC,cAAC+M,GAAI,KACDhN,IAAAC,cAACoN,GAAU,CAACoG,EAAE,mBAAmB/H,QAAQ,OAAOnL,eAAe,gBAAgBD,WAAW,UACtFN,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,4BAIxD3H,IAAAC,cAAC8H,IAAM,CACHuL,YAAY,OACZzH,QAzGMkO,KAC1B,MAAMC,EAAUH,IAChBI,UAAUC,UAAUC,UAAUH,GAASI,KAAK,KACxCR,EAAc,4BACdS,WAAW,IAAMT,EAAc,4BAAS,MACxCU,IACAC,QAAQC,MAAM,4BAASF,MAoGPjC,SAAUrY,IAAAC,cAAC6K,IAAI,CAACsI,GAAIqH,QAEnBd,EAAW,MAGpB3Z,IAAAC,cAACmN,GAAQ,KACLpN,IAAAC,cAAC6Z,KAAQ,CACLtG,MAAOqG,IACPa,UAAQ,EACR/P,YAAaA,EACb4L,KAAK,QACLoE,OAAO,WACPnC,UAAU,c,UCQvBoC,OA5If,WACI,MAAMpU,EAAYC,YAAkB,WAAY,SAC1CkE,EAAclE,YAAkB,WAAY,aAG3CoU,EAAWC,GAAgBpS,mBAAS,KACpCqS,EAAgBC,GAAqBtS,mBAAS,KAC9CuS,EAAkBC,GAAuBxS,mBAAS,iBAClDyS,EAAgBC,GAAqB1S,mBAAS,iBAC9CiR,EAAYC,GAAiBlR,mBAAS,4BAqB7C,OACI1I,IAAAC,cAACC,IAAI,CAAC4G,UAAU,SAASsE,GAAI,CAAEhL,KAAM,QAAS6T,GAAI,SAC9CjU,IAAAC,cAACuV,IAAI,CAACC,gBAAiB,CAAE/L,GAAI,MAAOuL,GAAI,WAAaS,IAAI,QAErD1V,IAAAC,cAAC+M,GAAI,KACDhN,IAAAC,cAACoN,GAAU,CAACoG,EAAE,oBACVzT,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,kCAI5D3H,IAAAC,cAACmN,GAAQ,KAELpN,IAAAC,cAAC2G,IAAK,CAACE,UAAU,MAAME,QAAS,EAAGC,GAAG,KACjC,CAAC,2BAAQ,eAAM,gBAAMmC,IAAK+O,GACvBnY,IAAAC,cAAC8H,IAAM,CACHuB,IAAK6O,EACL7E,YAAa2H,IAAqB9C,EAAS,OAAS,OACpDtM,QAASA,IAAMqP,EAAoB/C,GACnC3T,aAAyB,6BAAX2T,EAAoB,cAA2B,iBAAXA,EAAkB,cAAgB,KAEnFA,KAMbnY,IAAAC,cAAC6Z,KAAQ,CACL/C,YAAY,gDACZvD,MAAOqH,EACPnC,SAAWC,GAAMmC,EAAanC,EAAEC,OAAOpF,OACvC7I,YAAaA,EACb1D,GAAG,IACHsP,KAAK,UAITvW,IAAAC,cAACC,IAAI,CAAC2G,QAAQ,YACV7G,IAAAC,cAAC8H,IAAM,CAACuL,YAAY,OAAOzH,QAvD7BwP,KAElBL,EADoB,iCAAQH,gBAAcI,sBAAsBE,aAsDO,mBAQ/Dnb,IAAAC,cAAC+M,GAAI,KACDhN,IAAAC,cAACoN,GAAU,CAACoG,EAAE,oBACVzT,IAAAC,cAACC,IAAI,CAAC2G,QAAQ,gBAAgBvG,WAAW,UACrCN,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,iCAIxD3H,IAAAC,cAAC8H,IAAM,CACHuL,YAAY,OACZzH,QAlEEkO,KAC1BE,UAAUC,UAAUC,UAAUY,GAAgBX,KAAK,KAC/CR,EAAc,4BACdS,WAAW,IAAMT,EAAc,4BAAS,MACxCU,IACAC,QAAQC,MAAM,4BAASF,MA8DHjC,SAAUrY,IAAAC,cAAC6K,IAAI,CAACsI,GAAIqH,OACpBjW,aAAa,OAEZmV,EAAW,OAIxB3Z,IAAAC,cAACmN,GAAQ,KAELpN,IAAAC,cAAC2G,IAAK,CAACE,UAAU,MAAME,QAAS,EAAGC,GAAG,KACjC,CAAC,eAAM,gBAAMmC,IAAK+O,GACfnY,IAAAC,cAAC8H,IAAM,CACHuB,IAAK6O,EACL7E,YAAa6H,IAAmBhD,EAAS,OAAS,OAClDtM,QAASA,IAAMuP,EAAkBjD,GACjC3T,aAAyB,iBAAX2T,EAAkB,cAAgB,KAE/CA,IAITnY,IAAAC,cAACqb,KAAI,KACDtb,IAAAC,cAACsb,KAAU,CACPnI,GAAIrL,IACJyT,UAAWxb,IAAAC,cAAC6K,IAAI,CAACsI,GAAIqI,OACrBnI,YAAY,OACZ9O,aAAa,eAChB,4BAGDxE,IAAAC,cAACyb,KAAQ,KAvFb,CAAC,eAAM,eAAM,2BAAQ,eAAM,gBAwFFtS,IAAKqQ,GAClBzZ,IAAAC,cAAC0b,KAAQ,CAACrS,IAAKmQ,EAAU5N,QAASA,IAAMuP,EAAkB3B,IACrDA,OAQrBzZ,IAAAC,cAAC6Z,KAAQ,CACLtG,MAAOuH,EACPL,UAAQ,EACR/P,YAAaA,EACb4L,KAAK,QACLiC,UAAU,c,UC8DvBoD,OApMf,WACI,MAAMpV,EAAYC,YAAkB,WAAY,SAC1CkE,EAAclE,YAAkB,WAAY,YAG5CoV,EAAa,CACf,CAAEC,QAAS,sBAAQ/D,KAAM,kSAAwDgE,KAAM,SACvF,CAAED,QAAS,sBAAQ/D,KAAM,6PAAiDgE,KAAM,SAChF,CAAED,QAAS,sBAAQ/D,KAAM,mNAA0CgE,KAAM,SACzE,CAAED,QAAS,sBAAQ/D,KAAM,wNAA0CgE,KAAM,SACzE,CAAED,QAAS,sBAAQ/D,KAAM,0LAAqCgE,KAAM,SACpE,CAAED,QAAS,sBAAQ/D,KAAM,2LAAsCgE,KAAM,SACrE,CAAED,QAAS,sBAAQ/D,KAAM,2KAAgCgE,KAAM,SAC/D,CAAED,QAAS,sBAAQ/D,KAAM,gMAAsCgE,KAAM,SACrE,CAAED,QAAS,sBAAQ/D,KAAM,4JAAgCgE,KAAM,SAC/D,CAAED,QAAS,sBAAQ/D,KAAM,iJAA+BgE,KAAM,WAI3DC,EAAUC,GAAevT,mBAAS,4BAoBzC,OACI1I,IAAAC,cAACC,IAAI,CAAC4G,UAAU,SAASsE,GAAI,CAAEhL,KAAM,QAAS6T,GAAI,SAE9CjU,IAAAC,cAACuV,IAAI,CAACC,gBAAgB,MAAMC,IAAI,OAAOzO,GAAG,QACtCjH,IAAAC,cAAC+M,GAAI,KACDhN,IAAAC,cAACoN,GAAU,CAACoG,EAAE,oBACVzT,IAAAC,cAACC,IAAI,CAAC2G,QAAQ,gBAAgBvG,WAAW,UACrCN,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,oDAIxD3H,IAAAC,cAAC8H,IAAM,CAACuL,YAAY,OAAO+E,SAAUrY,IAAAC,cAAC6K,IAAI,CAACsI,GAAI8I,QAAY,8BAKnElc,IAAAC,cAACmN,GAAQ,KACLpN,IAAAC,cAACuH,IAAI,KAAC,iGAMlBxH,IAAAC,cAACuV,IAAI,CAACC,gBAAiB,CAAE/L,GAAI,MAAOuL,GAAI,WAAaS,IAAI,QAErD1V,IAAAC,cAAC+M,GAAI,KACDhN,IAAAC,cAACoN,GAAU,CAACoG,EAAE,oBACVzT,IAAAC,cAACC,IAAI,CAAC2G,QAAQ,gBAAgBvG,WAAW,UACrCN,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,sBAIxD3H,IAAAC,cAAC2G,IAAK,CAACE,UAAU,MAAME,QAAS,GAC5BhH,IAAAC,cAAC8H,IAAM,CACH8D,QAnDbsQ,KACf,MAAMC,EAAUP,EAAWzS,IAAIiT,GAAS,GAAGA,EAAMP,YAAYO,EAAMtE,SAASsE,EAAMN,SAASO,KAAK,MAChGrC,UAAUC,UAAUC,UAAUiC,GAC9BH,EAAY,4BACZ5B,WAAW,IAAM4B,EAAY,4BAAS,MAgDV5D,SAAUrY,IAAAC,cAAC6K,IAAI,CAACsI,GAAImJ,OACpBC,gBAAgB,WAChB9U,MAAM,QACN+C,OAAQ,CAAEpE,GAAI,YACdH,QAAQ,SAEP8V,GAELhc,IAAAC,cAAC8H,IAAM,CACH8D,QArDT4Q,KACnB,MAAML,EAAUP,EAAWzS,IAAIiT,GAAS,GAAGA,EAAMP,YAAYO,EAAMtE,SAASsE,EAAMN,SAASO,KAAK,MAC1FI,EAAO,IAAIC,KAAK,CAACP,GAAU,CAAElO,KAAM,eACnC0O,EAAOhT,SAAS3J,cAAc,KACpC2c,EAAK/U,KAAOgV,IAAIC,gBAAgBJ,GAChCE,EAAKG,SAAW,iBAChBH,EAAKI,SAgDuB3E,SAAUrY,IAAAC,cAAC6K,IAAI,CAACsI,GAAI6J,OACpBT,gBAAgB,WAChB9U,MAAM,QACN+C,OAAQ,CAAEpE,GAAI,YACdH,QAAQ,SACX,uBAMblG,IAAAC,cAACmN,GAAQ,KAELpN,IAAAC,cAACkL,IAAG,CACA+J,KAAK,QACLsD,UAAU,OACVpD,OAAO,YACPzK,YAAaA,EACbnG,aAAa,KACbiP,EAAE,IACFyJ,IAAK,CACD,uBAAwB,CACpBxb,MAAO,OAEX,6BAA8B,CAC1B8D,WAAY,OACZhB,aAAc,QAElB,mCAAoC,CAChCgB,WAAY,UAInBqW,EAAWzS,IAAI,CAACiT,EAAO7H,IACpBxU,IAAAC,cAACC,IAAI,CAACoJ,IAAKkL,EAAOvN,GAAG,KAEjBjH,IAAAC,cAACkL,IAAG,CACAzJ,MAAM,MACN2E,GAAG,WACH7B,aAAa,OACb2Y,GAAG,MAGPnd,IAAAC,cAACC,IAAI,CAAC4G,UAAU,SAASpF,MAAM,QAC3B1B,IAAAC,cAACC,IAAI,CAAC2G,QAAQ,gBAAgBI,GAAG,KAE7BjH,IAAAC,cAACuH,IAAI,CAACG,WAAW,OAAOD,MAAOlB,GAC1B6V,EAAMP,SAEX9b,IAAAC,cAACuH,IAAI,CAACE,MAAM,YAAY2U,EAAMN,OAGlC/b,IAAAC,cAACuH,IAAI,KAAE6U,EAAMtE,YASrC/X,IAAAC,cAAC+M,GAAI,KACDhN,IAAAC,cAACoN,GAAU,CAACoG,EAAE,oBACVzT,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,mBAI5D3H,IAAAC,cAACmN,GAAQ,KAELpN,IAAAC,cAACmd,KAAI,CAAClX,QAAQ,YACVlG,IAAAC,cAACod,KAAO,KACJrd,IAAAC,cAACqd,KAAG,KAAC,gBACLtd,IAAAC,cAACqd,KAAG,KAAC,4BACLtd,IAAAC,cAACqd,KAAG,KAAC,iBAETtd,IAAAC,cAACsd,KAAS,KACNvd,IAAAC,cAACud,KAAQ,KACLxd,IAAAC,cAACuH,IAAI,KAAC,iUAIVxH,IAAAC,cAACud,KAAQ,KACLxd,IAAAC,cAACuH,IAAI,KAAC,mEAEFxH,IAAAC,cAAA,WAAM,+DAEND,IAAAC,cAAA,WAAM,qEAIdD,IAAAC,cAACud,KAAQ,KACLxd,IAAAC,cAACuH,IAAI,KAAC,6BAEFxH,IAAAC,cAAA,WAAM,6BAEND,IAAAC,cAAA,WAAM,yCAEND,IAAAC,cAAA,WAAM,6BAEND,IAAAC,cAAA,WAAM,sCC9E/Bwd,GAnGE,CACf,CACE5c,KAAM,aACNmJ,KAAM,qBACND,QAAS,YACTc,KAAM7K,IAAAC,cAAC8C,EAAQ,CAAC2E,MAAM,YACtBgW,UC+BW,WAEb,MAAMC,EAAWlX,YAAkB,WAAY,YACzCmX,EAAgBnX,YAAkB,QAAS,SAC3CD,EAAYC,YAAkB,WAAY,SAC1CoX,EAAgBpX,YAAkB,UAAW,YAC7CkE,EAAclE,YAAkB,WAAY,YAC5CqX,EAAiBrX,YAAkB,WAAY,UAE/C,UAAEC,GAAcC,cAEtB,OACE3G,IAAAC,cAACC,IAAI,CAACC,cAAc,SAASiL,GAAI,CAAEhL,KAAM,QAAS6T,GAAI,SACpDjU,IAAAC,cAAC8d,IAAU,CAACC,QAAS,CAAEtU,GAAI,EAAGuK,GAAI,EAAG5T,GAAI,GAAK2G,QAAQ,OAAOC,GAAG,QAC9DjH,IAAAC,cAAC+M,GAAI,CAACuJ,KAAK,SACTvW,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACC,IAAI,CACHC,cAAc,MACd4G,MAAM,SACNF,QAAQ,SACRT,EAAE,OACFa,GAAG,QACHjH,IAAAC,cAACge,KAAI,CAAClT,GAAG,QACP/K,IAAAC,cAACie,KAAS,CACRzW,SAAS,KACTC,MAAM,WACNC,WAAW,OACXwW,cAAc,aAAY,iBAG5Bne,IAAAC,cAACC,IAAI,KACHF,IAAAC,cAACme,KAAU,CAAC3W,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,aAKlE3H,IAAAC,cAACkE,EAAO,CACNK,aAAa,MACb4O,GAAG,MACHjN,EAAG,OACHC,EAAG,OACHC,GAAIsX,GACJ3d,IAAAC,cAAC4D,EAAU,CAACsC,EAAG,OAAQC,EAAG,OAAQsB,MAAOkW,MAG7C5d,IAAAC,cAACuH,IAAI,CAACE,MAAM,WAAWD,SAAS,MAC9BzH,IAAAC,cAACuH,IAAI,CAAC4L,GAAG,OAAO1L,MAAM,YAAYC,WAAW,QAAO,SAC3C,KACF,sBAKb3H,IAAAC,cAAC+M,GAAI,CAACuJ,KAAK,SACTvW,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACC,IAAI,CACHC,cAAc,MACd4G,MAAM,SACNF,QAAQ,SACRT,EAAE,OACFa,GAAG,QACHjH,IAAAC,cAACge,KAAI,CAAClT,GAAG,QACP/K,IAAAC,cAACie,KAAS,CACRzW,SAAS,KACTC,MAAM,WACNC,WAAW,OACXwW,cAAc,aAAY,iBAG5Bne,IAAAC,cAACC,IAAI,KACHF,IAAAC,cAACme,KAAU,CAAC3W,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,YAKlE3H,IAAAC,cAACkE,EAAO,CACNK,aAAa,MACb4O,GAAG,MACHjN,EAAG,OACHC,EAAG,OACHC,GAAIsX,GACJ3d,IAAAC,cAAC0C,EAAS,CAACwD,EAAG,OAAQC,EAAG,OAAQsB,MAAOkW,MAG5C5d,IAAAC,cAACuH,IAAI,CAACE,MAAM,WAAWD,SAAS,MAC9BzH,IAAAC,cAACuH,IAAI,CAAC4L,GAAG,OAAO1L,MAAM,YAAYC,WAAW,QAAO,QAC5C,KACD,sBAKb3H,IAAAC,cAAC+M,GAAI,CAACuJ,KAAK,SACTvW,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACC,IAAI,CACHC,cAAc,MACd4G,MAAM,SACNF,QAAQ,SACRT,EAAE,OACFa,GAAG,QACHjH,IAAAC,cAACge,KAAI,CAAClT,GAAG,QACP/K,IAAAC,cAACie,KAAS,CACRzW,SAAS,KACTC,MAAM,WACNC,WAAW,OACXwW,cAAc,aAAY,eAG5Bne,IAAAC,cAACC,IAAI,KACHF,IAAAC,cAACme,KAAU,CAAC3W,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,YAKlE3H,IAAAC,cAACkE,EAAO,CACNK,aAAa,MACb4O,GAAG,MACHjN,EAAG,OACHC,EAAG,OACHC,GAAIsX,GACJ3d,IAAAC,cAAC0B,EAAY,CAACwE,EAAG,OAAQC,EAAG,OAAQsB,MAAOkW,MAG/C5d,IAAAC,cAACuH,IAAI,CAACE,MAAM,WAAWD,SAAS,MAC9BzH,IAAAC,cAACuH,IAAI,CAAC4L,GAAG,OAAO1L,MAAM,UAAUC,WAAW,QAAO,SACzC,KACF,sBAKb3H,IAAAC,cAAC+M,GAAI,CAACuJ,KAAK,SACTvW,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACC,IAAI,CACHC,cAAc,MACd4G,MAAM,SACNF,QAAQ,SACRT,EAAE,OACFa,GAAG,QACHjH,IAAAC,cAACge,KAAI,CAAClT,GAAG,QACP/K,IAAAC,cAACie,KAAS,CACRzW,SAAS,KACTC,MAAM,WACNC,WAAW,OACXwW,cAAc,aAAY,eAG5Bne,IAAAC,cAACC,IAAI,KACHF,IAAAC,cAACme,KAAU,CAAC3W,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,cAKlE3H,IAAAC,cAACkE,EAAO,CACNK,aAAa,MACb4O,GAAG,MACHjN,EAAG,OACHC,EAAG,OACHC,GAAIsX,GACJ3d,IAAAC,cAACsB,EAAQ,CAAC4E,EAAG,OAAQC,EAAG,OAAQsB,MAAOkW,MAG3C5d,IAAAC,cAACuH,IAAI,CAACE,MAAM,WAAWD,SAAS,MAC9BzH,IAAAC,cAACuH,IAAI,CAAC4L,GAAG,OAAO1L,MAAM,YAAYC,WAAW,QAAO,SAC3C,KACF,uBAOf3H,IAAAC,cAAC+M,GAAI,CAACyG,EAAE,OAAOzI,GAAG,QAChBhL,IAAAC,cAACoN,GAAU,CAACoG,EAAE,WAAWxM,GAAG,QAC1BjH,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,YAGxD3H,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,OAAM,4DAK1D3H,IAAAC,cAACmN,GAAQ,CAAC5M,GAAG,OACXR,IAAAC,cAACuV,IAAI,CACHC,gBAAiB,CAAE/L,GAAI,MAAOuK,GAAI,UAAW5T,GAAI,kBACjDge,aAAc,CAAE3U,GAAI,mBAAoBuK,GAAI,UAAW5T,GAAI,OAC3DqV,IAAI,QACJ1V,IAAAC,cAAC8H,IAAM,CACL0L,EAAE,MACFpN,GAAG,cACH+O,OAAO,sBACP5Q,aAAa,OACb8Z,UAAW,CAAE5U,GAAI,QAASuK,GAAI,SAC9BjU,IAAAC,cAACC,IAAI,CAAC4G,UAAU,SAASvG,eAAe,SAASwG,MAAM,UACrD/G,IAAAC,cAAC6K,IAAI,CAACsI,GAAImL,KAAQ7W,MAAOlB,EAAWiB,SAAS,KAAKR,GAAG,SACrDjH,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,0BAK5D3H,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACkL,IAAG,CAAClE,GAAG,OAAOrC,SAAS,WAAWJ,aAAa,QAC9CxE,IAAAC,cAACmH,IAAK,CAACC,IAAKmX,KAAiBha,aAAa,SAC1CxE,IAAAC,cAACkL,IAAG,CACF/E,EAAE,OACFD,EAAE,OACFvB,SAAS,WACTK,IAAI,IACJT,aAAa,OACb6B,GAAG,qFAEPrG,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,MAAMV,GAAG,QAAO,cAGhEjH,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAOlB,EACPmB,WAAW,OACXV,GAAG,QAAO,UAGZjH,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,MAAMV,GAAG,QAAO,uEAIhEjH,IAAAC,cAACC,IAAI,CAACK,eAAe,iBACnBP,IAAAC,cAAC8H,IAAM,CAAC7B,QAAQ,OAAO4B,KAAK,QAAQ3B,EAAE,QAAO,YAG7CnG,IAAAC,cAACwe,KAAW,CAAClL,KAAK,MAChBvT,IAAAC,cAAC6T,KAAM,CAAC9J,KAAK,gBAAgB3C,IAAK4O,OAClCjW,IAAAC,cAAC6T,KAAM,CAAC9J,KAAK,gBAAgB3C,IAAKoJ,OAClCzQ,IAAAC,cAAC6T,KAAM,CAAC9J,KAAK,aAAa3C,IAAKqJ,OAC/B1Q,IAAAC,cAAC6T,KAAM,CAAC9J,KAAK,oBAAoB3C,IAAKsJ,WAK9C3Q,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACkL,IAAG,CAAClE,GAAG,OAAOrC,SAAS,WAAWJ,aAAa,QAC9CxE,IAAAC,cAACmH,IAAK,CAACC,IAAKqX,KAAiBla,aAAa,SAC1CxE,IAAAC,cAACkL,IAAG,CACF/E,EAAE,OACFD,EAAE,OACFvB,SAAS,WACTK,IAAI,IACJT,aAAa,OACb6B,GAAG,qFAEPrG,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,MAAMV,GAAG,QAAO,cAGhEjH,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAOlB,EACPmB,WAAW,OACXV,GAAG,QAAO,gBAGZjH,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,MAAMV,GAAG,QAAO,mFAIhEjH,IAAAC,cAACC,IAAI,CAACK,eAAe,iBACnBP,IAAAC,cAAC8H,IAAM,CAAC7B,QAAQ,OAAO4B,KAAK,QAAQ3B,EAAE,QAAO,YAG7CnG,IAAAC,cAACwe,KAAW,CAAClL,KAAK,MAChBvT,IAAAC,cAAC6T,KAAM,CAAC9J,KAAK,gBAAgB3C,IAAK4O,OAClCjW,IAAAC,cAAC6T,KAAM,CAAC9J,KAAK,gBAAgB3C,IAAKoJ,OAClCzQ,IAAAC,cAAC6T,KAAM,CAAC9J,KAAK,aAAa3C,IAAKqJ,OAC/B1Q,IAAAC,cAAC6T,KAAM,CAAC9J,KAAK,oBAAoB3C,IAAKsJ,WAK9C3Q,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACkL,IAAG,CAAClE,GAAG,OAAOrC,SAAS,WAAWJ,aAAa,QAC9CxE,IAAAC,cAACmH,IAAK,CAACC,IAAKsX,KAAiBna,aAAa,SAC1CxE,IAAAC,cAACkL,IAAG,CACF/E,EAAE,OACFD,EAAE,OACFvB,SAAS,WACTK,IAAI,IACJT,aAAa,OACb6B,GAAG,qFAEPrG,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,MAAMV,GAAG,QAAO,cAGhEjH,IAAAC,cAACuH,IAAI,CACHC,SAAS,KACTC,MAAOlB,EACPmB,WAAW,OACXV,GAAG,QAAO,cAGZjH,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAM,WAAWC,WAAW,MAAMV,GAAG,QAAO,6EAIhEjH,IAAAC,cAACC,IAAI,CAACK,eAAe,iBACnBP,IAAAC,cAAC8H,IAAM,CAAC7B,QAAQ,OAAO4B,KAAK,QAAQ3B,EAAE,QAAO,YAG7CnG,IAAAC,cAACwe,KAAW,CAAClL,KAAK,MAChBvT,IAAAC,cAAC6T,KAAM,CAAC9J,KAAK,gBAAgB3C,IAAK4O,OAClCjW,IAAAC,cAAC6T,KAAM,CAAC9J,KAAK,gBAAgB3C,IAAKoJ,OAClCzQ,IAAAC,cAAC6T,KAAM,CAAC9J,KAAK,aAAa3C,IAAKqJ,OAC/B1Q,IAAAC,cAAC6T,KAAM,CAAC9J,KAAK,oBAAoB3C,IAAKsJ,cASpD3Q,IAAAC,cAACuV,IAAI,CACHC,gBAAiB,CAAE/L,GAAI,MAAOuL,GAAI,WAClCoJ,aAAc,CAAEpJ,GAAI,mBACpBS,IAAI,QACJ1V,IAAAC,cAAC+M,GAAI,CACH3G,GACgB,SAAdK,EACI,WACA,2DAEN+M,EAAE,MACFtH,KAAM,CAAEzC,GAAI,QAASuK,GAAI,SACzBjU,IAAAC,cAACC,IAAI,CAAC4G,UAAU,SAASG,GAAG,OAAOwM,EAAE,qBACnCzT,IAAAC,cAACuH,IAAI,CAACE,MAAM,OAAOD,SAAS,KAAKE,WAAW,OAAOV,GAAG,OAAM,kBAG5DjH,IAAAC,cAACuH,IAAI,CAACE,MAAM,OAAOD,SAAS,MAC1BzH,IAAAC,cAACuH,IAAI,CAAC4L,GAAG,OAAO1L,MAAM,YAAYC,WAAW,QAAO,YACxC,KACL,YAIX3H,IAAAC,cAACkL,IAAG,CAACoL,KAAK,SACRvW,IAAAC,cAACqQ,GAAS,CACR3C,UAAW+B,GACX9B,aAAc+B,OAIpB3P,IAAAC,cAAC+M,GAAI,CAACyG,EAAE,MAAMtH,KAAM,CAAEzC,GAAI,QAASuK,GAAI,SACrCjU,IAAAC,cAACC,IAAI,CAAC4G,UAAU,SAASG,GAAG,OAAOwM,EAAE,qBACnCzT,IAAAC,cAACuH,IAAI,CAACE,MAAM,WAAWD,SAAS,KAAKE,WAAW,OAAOV,GAAG,OAAM,eAGhEjH,IAAAC,cAACuH,IAAI,CAACE,MAAOlB,EAAWiB,SAAS,KAAKE,WAAW,QAAO,iBAI1D3H,IAAAC,cAACkL,IAAG,CAACoL,KAAK,SACRvW,IAAAC,cAACqN,GAAQ,CAACK,UAAWQ,GAAcP,aAAcS,OAGrDrO,IAAAC,cAAC+M,GAAI,CAACyG,EAAE,MAAMtH,KAAM,CAAEzC,GAAI,QAASuK,GAAI,SACrCjU,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACC,IAAI,CAAC6G,MAAM,SAASF,QAAQ,gBAAgB4M,EAAE,QAC7CzT,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,eAGxD3H,IAAAC,cAAC8H,IAAM,CAAC7B,QAAQ,UAAUgP,KAAK,QAAO,YAIxClV,IAAAC,cAACkL,IAAG,CAACmM,SAAU,CAAE5N,GAAI,SAAUuL,GAAI,WACjCjV,IAAAC,cAACkU,KAAK,KACJnU,IAAAC,cAACmU,KAAK,KACJpU,IAAAC,cAAC6S,KAAE,CAACzM,GAAIwX,GACN7d,IAAAC,cAACoU,KAAE,CAAC3M,MAAM,WAAWiD,YAAaA,GAAa,aAG/C3K,IAAAC,cAACoU,KAAE,CAAC3M,MAAM,WAAWiD,YAAaA,GAAa,YAG/C3K,IAAAC,cAACoU,KAAE,CAAC3M,MAAM,WAAWiD,YAAaA,GAAa,gBAG/C3K,IAAAC,cAACoU,KAAE,CAAC3M,MAAM,WAAWiD,YAAaA,GAAa,iBAKnD3K,IAAAC,cAACqU,KAAK,KACHvC,GAAW3I,IAAI,CAACwV,EAAIpK,EAAOC,IAExBzU,IAAAC,cAAC6S,KAAE,CAACxJ,IAAKkL,GACPxU,IAAAC,cAAC8S,KAAE,CACDrL,MAAOoW,EACPrW,SAAS,KACTE,WAAW,OACXgD,YAAaA,EACbyK,OAAQZ,IAAUC,EAAIE,OAAS,EAAI,OAAS,MAC3CiK,EAAGxM,UAENpS,IAAAC,cAAC8S,KAAE,CACDrL,MAAOoW,EACPrW,SAAS,KACT2N,OAAQZ,IAAUC,EAAIE,OAAS,EAAI,OAAS,KAC5ChK,YAAaA,GACZiU,EAAGvM,UAENrS,IAAAC,cAAC8S,KAAE,CACDrL,MAAOoW,EACPrW,SAAS,KACT2N,OAAQZ,IAAUC,EAAIE,OAAS,EAAI,OAAS,KAC5ChK,YAAaA,GACZiU,EAAGtM,aAENtS,IAAAC,cAAC8S,KAAE,CACDrL,MAAOoW,EACPrW,SAAS,KACT2N,OAAQZ,IAAUC,EAAIE,OAAS,EAAI,OAAS,KAC5ChK,YAAaA,GACZiU,EAAGrM,mBAUtBvS,IAAAC,cAAC+M,GAAI,CAACyG,EAAE,MAAMtH,KAAM,CAAEzC,GAAI,QAASuK,GAAI,SACrCjU,IAAAC,cAACC,IAAI,CAAC4G,UAAU,UACd9G,IAAAC,cAACC,IAAI,CAAC6G,MAAM,SAASF,QAAQ,gBAAgB4M,EAAE,QAC7CzT,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKC,MAAOlB,EAAWmB,WAAW,QAAO,kBAGxD3H,IAAAC,cAAC8H,IAAM,CAAC7B,QAAQ,UAAUgP,KAAK,QAAO,aAK1ClV,IAAAC,cAACkL,IAAG,CAACmM,SAAU,CAAE5N,GAAI,SAAUuL,GAAI,WACjCjV,IAAAC,cAACkU,KAAK,KACJnU,IAAAC,cAACmU,KAAK,KACJpU,IAAAC,cAAC6S,KAAE,CAACzM,GAAIwX,GACN7d,IAAAC,cAACoU,KAAE,CAAC3M,MAAM,WAAWiD,YAAaA,GAAa,YAG/C3K,IAAAC,cAACoU,KAAE,CAAC3M,MAAM,WAAWiD,YAAaA,GAAa,YAG/C3K,IAAAC,cAACoU,KAAE,CAAC3M,MAAM,WAAWiD,YAAaA,MAGtC3K,IAAAC,cAACqU,KAAK,KACH9B,GAAcpJ,IAAI,CAACwV,EAAIpK,EAAOC,IAE3BzU,IAAAC,cAAC6S,KAAE,CAACxJ,IAAKkL,GACPxU,IAAAC,cAAC8S,KAAE,CACDrL,MAAOoW,EACPrW,SAAS,KACTE,WAAW,OACXgD,YAAaA,EACbyK,OAAQZ,IAAUC,EAAIE,OAAS,EAAI,OAAS,MAC3CiK,EAAGnM,UAENzS,IAAAC,cAAC8S,KAAE,CACDrL,MAAOoW,EACPrW,SAAS,KACTkD,YAAaA,EACbyK,OAAQZ,IAAUC,EAAIE,OAAS,EAAI,OAAS,MAC3CiK,EAAGvM,UAENrS,IAAAC,cAAC8S,KAAE,CACDrL,MAAOoW,EACPrW,SAAS,KACTkD,YAAaA,EACbyK,OAAQZ,IAAUC,EAAIE,OAAS,EAAI,OAAS,MAC5C3U,IAAAC,cAACC,IAAI,CAAC6G,MAAM,UACV/G,IAAAC,cAACuH,IAAI,CACHE,MAAOoW,EACPnW,WAAW,OACXF,SAAS,KACTsD,GAAG,QAAW6T,EAAGlM,WAAN,KACb1S,IAAAC,cAACoT,KAAQ,CACPE,KAAK,KACLD,YAAasL,EAAGlX,MAChB8L,MAAOoL,EAAGlM,WACV5K,KAAK,qBD1gB7BsC,OAAQ,UAEV,CACEvJ,KAAM,YACNmJ,KAAM,WACND,QAAS,WACTc,KAAM7K,IAAAC,cAAC0B,EAAY,CAAC+F,MAAM,YAC1BgW,UAAW9B,GACXxR,OAAQ,UAEV,CACEvJ,KAAM,UACNmJ,KAAM,qBACND,QAAS,sEACTc,KAAM7K,IAAAC,cAAC2D,EAAS,CAAC8D,MAAM,YACvBgW,UAAW1J,GACX5J,OAAQ,UAEV,CACEvJ,KAAM,WACNmJ,KAAM,2BACND,QAAS,UACTc,KAAM7K,IAAAC,cAACiD,EAAU,CAACwE,MAAM,YACxBmX,iBAAiB,EACjBnB,UAAW9I,GACXxK,OAAQ,UAEV,CACEvJ,KAAM,UACNmJ,KAAM,UACND,QAAS,sEACTc,KAAM7K,IAAAC,cAACsD,EAAU,CAACmE,MAAM,YACxBgW,UAAWxH,GACX9L,OAAQ,SAEV,CACEvJ,KAAM,UACNmJ,KAAM,UACND,QAAS,sEACTc,KAAM7K,IAAAC,cAACsD,EAAU,CAACmE,MAAM,YACxBgW,UAAWtG,GACXhN,OAAQ,SAkBV,CACEJ,KAAM,WACNR,SAAU,UACVO,QAAS,WACTvB,MAAO,eACPyB,MAAO,CACL,CACEpJ,KAAM,WACNmJ,KAAM,kBACND,QAAS,WACTc,KAAM7K,IAAAC,cAACiB,EAAO,CAACwG,MAAM,YACrBgW,UAAWzE,GACX7O,OAAQ,UAEV,CACEvJ,KAAM,UACNmJ,KAAM,wBACND,QAAS,UACTc,KAAM7K,IAAAC,cAACS,EAAQ,CAACgH,MAAM,YACtBgW,UAAWjG,GACXrN,OAAQ,UAEV,CACEvJ,KAAM,eACNmJ,KAAM,kBACND,QAAS,eACTc,KAAM7K,IAAAC,cAAC0C,EAAS,CAAC+E,MAAM,YACvBgW,UAAW9C,GACXxQ,OAAQ,aEpGD,SAAS0U,GAAW/e,GACjC,MAAM,KAAEsI,EAAI,SAAE0W,EAAQ,UAAEC,KAAc3a,GAAStE,GACzC,UAAE2G,GAAcC,cAEtB,IAOIsY,EAAWxY,YAAkB,QAAS,YACtCyY,EAAczY,YAAkB,WAAY,SAE5C8B,EAAiB,CACnBnI,KAAMqG,YAAkB,WAAY,SACpCwN,GAAI,SAEF/I,EACFlL,IAAAC,cAAC2H,IAAI,CACHC,KAAM,6BACN+Q,OAAO,SACPlN,QAAQ,OACRyT,WAAW,OACXxX,WAAW,OACXpH,eAAe,SACfD,WAAW,SACXoH,MAvBW,SAyBX1H,IAAAC,cAAC2G,IAAK,CAACE,UAAU,MAAME,QAAQ,OAAOD,MAAM,SAASF,QAAQ,UAC3D7G,IAAAC,cAAC8D,EAAc,CAACqC,EAAE,OAAOD,EAAE,SAC3BnG,IAAAC,cAACkL,IAAG,CAAC/E,EAAE,MAAMD,EAAE,OAAOE,GAAI,UAC1BrG,IAAAC,cAACiE,EAAc,CAACkC,EAAE,OAAOD,EAAE,UAE7BnG,IAAAC,cAACuH,IAAI,CAAC4X,SAAS,KAAKlY,GAAG,OACpB6X,IAIPxW,EAAiB,CAAEnI,KAAM,SACzB,IAAIif,EACFrf,IAAAC,cAACwW,IAAM,CAAC/K,QAAS,CAAEhC,GAAI,OAAQuL,GAAI,SACjCjV,IAAAC,cAACiK,IAAO,CAACC,GAAG,oBACVnK,IAAAC,cAAC8H,IAAM,CACLN,SAAS,KACT2E,GAAG,MACHrB,GAAG,MACHvK,GAAG,MACHuK,GAAI,CAAErB,GAAI,MAAOuK,GAAI,QACrBvM,MA5CS,QA6CTxB,QAAQ,aACRmS,SAAUrY,IAAAC,cAAC8C,EAAQ,CAAC2E,MA9CX,QA8C8BtB,EAAE,OAAOD,EAAE,OAAO4E,GAAG,SAE5D/K,IAAAC,cAACuH,IAAI,KAAC,eAGVxH,IAAAC,cAACiK,IAAO,CAACC,GAAG,kBACVnK,IAAAC,cAAC8H,IAAM,CACLN,SAAS,KACT2E,GAAG,MACHrB,GAAG,MACHvK,GAAG,MACHuK,GAAI,CAAErB,GAAI,MAAOuK,GAAI,QACrBvM,MA1DS,QA2DTxB,QAAQ,aACRmS,SACErY,IAAAC,cAACiD,EAAU,CAACwE,MA7DL,QA6DwBtB,EAAE,OAAOD,EAAE,OAAO4E,GAAG,SAGtD/K,IAAAC,cAACuH,IAAI,KAAC,aAGVxH,IAAAC,cAACiK,IAAO,CAACC,GAAG,gBACVnK,IAAAC,cAAC8H,IAAM,CACLN,SAAS,KACT2E,GAAG,MACHrB,GAAG,MACHvK,GAAG,MACHuK,GAAI,CAAErB,GAAI,MAAOuK,GAAI,QACrBvM,MA1ES,QA2ETxB,QAAQ,aACRmS,SACErY,IAAAC,cAACsD,EAAU,CAACmE,MA7EL,QA6EwBtB,EAAE,OAAOD,EAAE,OAAO4E,GAAG,SAGtD/K,IAAAC,cAACuH,IAAI,KAAC,aAGVxH,IAAAC,cAACiK,IAAO,CAACC,GAAG,gBACVnK,IAAAC,cAAC8H,IAAM,CACLN,SAAS,KACT2E,GAAG,MACH5L,GAAG,MACHuK,GAAI,CAAErB,GAAI,MAAOuK,GAAI,QACrBvM,MAzFS,QA0FTxB,QAAQ,aACRmS,SACErY,IAAAC,cAAC0B,EAAY,CAAC+F,MA5FP,QA4F0BtB,EAAE,OAAOD,EAAE,OAAO4E,GAAG,SAGxD/K,IAAAC,cAACuH,IAAI,KAAC,cAKd,OACExH,IAAAC,cAACC,IAAI,CACH0E,SA9FiB,WA+FjBK,IAAI,OACJI,KAAK,MACLnD,UAAU,uBACVsD,WAzGW,OA0GX4P,OAzGe,OA0Gf5K,UAzGe,UA0GfmC,OAzGe,UA0GfwI,eAzGiB,OA0GjB3Q,aAAa,OACbhE,GAAG,OACHmJ,GAAG,OACHxC,GAAG,OACHzF,MAAM,SACNyK,KAAK,MACL7L,WAAW,SACXkW,OAAO,KAEPxW,IAAAC,cAACC,IAAI,CAACkG,EAAE,OAAO7F,eAAgB,CAAEmJ,GAAI,QAASuL,GAAI,kBAC/C/J,EACDlL,IAAAC,cAACkL,IAAG,CACFiB,GAAI,CAAEhM,KAAM,OAAQ6U,GAAI,OACxBvJ,QAAS,CAAEtL,KAAM,OAAQ6U,GAAI,SAE7BjV,IAAAC,cAACiI,GAAiB5D,OAAAC,OAAA,CAChBgE,eAAgBA,EAChBwW,SAAUhf,EAAMgf,SAChBC,UAAWjf,EAAMif,UACjB1W,OAAQA,GACRD,KACErI,IAAAC,cAAC2G,IAAK,CACJE,UAAU,MACVE,QAAQ,OACRD,MAAM,SACNF,QAAQ,UAEO,SAAdH,EACC1G,IAAAC,cAAC8D,EAAc,CAACqC,EAAE,OAAOD,EAAE,SAE3BnG,IAAAC,cAAC6D,EAAa,CAACsC,EAAE,OAAOD,EAAE,SAE5BnG,IAAAC,cAACkL,IAAG,CACF/E,EAAE,MACFD,EAAE,OACFE,GAAkB,SAAdK,EAAuB,QAAU,aAExB,SAAdA,EACC1G,IAAAC,cAACgE,EAAe,CAACmC,EAAE,OAAOD,EAAE,SAE5BnG,IAAAC,cAAC+D,EAAc,CAACoC,EAAE,OAAOD,EAAE,WAI7B9B,KAGPgb,EACDrf,IAAAC,cAAC2H,IAAI,CAACC,KAAK,2DACT7H,IAAAC,cAAC8H,IAAM,CACL1B,GAAI4Y,EACJvX,MAAOwX,EACPzX,SAAS,KACTvB,QAAQ,WACR1F,GAAG,OACHkL,QAAS,CACPhC,GAAI,OACJuL,GAAI,SAEP,oB,cChLI,SAASqK,GAAavf,GACnC,MAAM,eACJwG,EAAc,kBACdgZ,EAAiB,UACjBP,EAAS,OACT3T,EAAM,QACNE,EAAO,MACPiU,KACGnb,GACDtE,GACG0f,EAAUC,GAAehX,mBAAS3I,EAAM4f,YAEzC,UAAEjZ,EAAS,gBAAEkZ,GAAoBjZ,cAEvC,IAAIsY,EAAWxY,YACb,2DACA,SAEEyY,EAAczY,YAAkB,QAAS,YAC7C,MAAMoZ,EAAoBpZ,YAAkB,QAAS,eAC/CqZ,EAAwBrZ,YAAkB,WAAY,SACtDsZ,EAAuBtZ,YAAkB,WAAY,SACrDuZ,EAAWvZ,YAAkB,QAAS,YACtCwZ,EAAcjgB,IAAM4I,SAC1B,OACE5I,IAAAC,cAAAD,IAAAc,SAAA,KACEd,IAAAC,cAAC6L,IAAM,CACLT,OAAQtL,EAAMsL,OACdE,QAASxL,EAAMwL,QACfQ,UAA4C,QAAjCnC,SAASC,gBAAgBC,IAAgB,OAAS,QAC7DkC,cAAeiU,EACfC,oBAAoB,GAEpBlgB,IAAAC,cAACiM,IAAa,CAAC7F,GAAI2Z,GACjBhgB,IAAAC,cAACkgB,IAAY,CAAC/U,GAAG,OAAO5K,GAAG,QACzBR,IAAAC,cAACoM,IAAiB,MAClBrM,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKE,WAAW,OAAOT,GAAG,QAAO,6BAGhDlH,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKR,GAAG,QAAO,+BAG9BjH,IAAAC,cAACgG,EAAU,OAEbjG,IAAAC,cAACqM,IAAU,CAAClG,EAAE,QAAQqD,GAAG,OAAOgD,GAAG,QACjCzM,IAAAC,cAACC,IAAI,CAACC,cAAc,UAClBH,IAAAC,cAACC,IAAI,CAACK,eAAe,iBAAiB0G,GAAG,QACvCjH,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKE,WAAW,MAAMV,GAAG,OAAM,gBAG9CjH,IAAAC,cAAC0V,KAAM,CACLrC,YAAY,OACZqM,UAAWF,EACX/G,SAAUA,MACS,IAAb+G,GACF1f,EAAMqgB,UAAS,GACfV,GAAY,KAEZ3f,EAAMqgB,UAAS,GACfV,GAAY,QAKpB1f,IAAAC,cAACC,IAAI,CACHK,eAAe,gBACfD,WAAW,SACX2G,GAAG,QAEHjH,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAKE,WAAW,MAAMV,GAAG,OAAM,cAG9CjH,IAAAC,cAAC8H,IAAM,CACL8D,QAAS+T,EACTlY,MAAqB,UAAdhB,EAAwB,OAAS,SACzC,UACuB,UAAdA,EAAwB,OAAS,UAI7C1G,IAAAC,cAACgG,EAAU,MACXjG,IAAAC,cAACkL,IAAG,CAACjE,GAAG,QACNlH,IAAAC,cAACkL,IAAG,KACFnL,IAAAC,cAAC2H,IAAI,CACHC,KAAK,kFACLzB,EAAE,OACFa,GAAG,QAEHjH,IAAAC,cAAC8H,IAAM,CACL3B,EAAE,OACFa,GAAG,OACHZ,GAAI4Y,EACJvX,MAAOwX,EACPzX,SAAS,KACTvB,QAAQ,aACR1F,GAAG,QACJ,kBAIHR,IAAAC,cAAC2H,IAAI,CACHC,KAAK,kFACLzB,EAAE,QAEFpG,IAAAC,cAAC8H,IAAM,CACL3B,EAAE,OACFC,GAAIwZ,EACJzK,OAAO,YACPzK,YAAamV,EACbpY,MAAOqY,EACPtY,SAAS,KACTvB,QAAQ,aACR1F,GAAG,OACHyG,GAAG,QAEHjH,IAAAC,cAACuH,IAAI,CAAC6Y,oBAAoB,QAAO,oBAIvCrgB,IAAAC,cAACC,IAAI,CACHK,eAAe,SACfD,WAAW,SACX8F,EAAE,OACFa,GAAG,QAEHjH,IAAAC,cAACqgB,KAAY,CACXzY,KAAK,gEACL0Y,YAAU,eACVC,kBAAgB,OAChBC,aAAW,6DACZ,SAIHzgB,IAAAC,cAACkL,IAAG,CAAC/E,EAAE,QACLpG,IAAAC,cAACuH,IAAI,CAACP,GAAG,MAAMM,UAAU,UAAS,0BAGlCvH,IAAAC,cAACC,IAAI,CAACK,eAAe,SAASmgB,aAAa,UACzC1gB,IAAAC,cAAC2H,IAAI,CACH+Y,WAAW,OACX9Y,KAAK,8LAEL7H,IAAAC,cAAC8H,IAAM,CACLuL,YAAY,UACZ+E,SAAUrY,IAAAC,cAAC8V,KAAS,MACpBhL,GAAG,QAEH/K,IAAAC,cAACuH,IAAI,KAAC,WAGVxH,IAAAC,cAAC2H,IAAI,CACH+Y,WAAW,OACX9Y,KAAK,6GAEL7H,IAAAC,cAAC8H,IAAM,CAACuL,YAAY,WAAW+E,SAAUrY,IAAAC,cAAC4V,KAAU,OAClD7V,IAAAC,cAACuH,IAAI,KAAC,mB,cC3KvB,SAASoZ,GAAY7gB,GAC1B,MAAM8gB,EAAapa,YAAkB,WAAY,YAC3Cqa,EAAoBra,YAAkB,WAAY,SAExD,OACEzG,IAAAC,cAAAD,IAAAc,SAAA,KACEd,IAAAC,cAAC6T,KAAM,CACL9J,KAAMjK,EAAMghB,MACZ1Z,IAAKtH,EAAMihB,KACXxc,aAAa,OACbuG,GAAG,SAEL/K,IAAAC,cAACC,IAAI,CAACC,cAAc,UAClBH,IAAAC,cAACuH,IAAI,CAACC,SAAS,OAAOR,GAAG,MAAMS,MAAOoZ,GACpC9gB,IAAAC,cAACuH,IAAI,CAACG,WAAW,OAAOF,SAAS,OAAO2L,GAAG,QACxCrT,EAAMkhB,SAZD,KAePlhB,EAAMmhB,MAETlhB,IAAAC,cAACC,IAAI,CAACI,WAAW,UACfN,IAAAC,cAACuB,EAAS,CAACkG,MAAOmZ,EAAYza,EAAE,OAAOD,EAAE,OAAO4E,GAAG,QACnD/K,IAAAC,cAACuH,IAAI,CAACC,SAAS,KAAK0X,WAAW,OAAOzX,MAAOmZ,GAC1C9gB,EAAMgc,SCnBZ,SAASoF,GAAUphB,GAExB,MAAM,QAAEmG,EAAO,SAAE9B,KAAaC,GAAStE,EAEjCqhB,EAAkB3a,YAAkB,WAAY,YAChD4a,EAAU5a,YAAkB,QAAS,YAC3C,OACEzG,IAAAC,cAACqhB,KAAUhd,OAAAC,OAAA,CAACC,aAAa,MAAM4B,EAAE,SAAY/B,GAC3CrE,IAAAC,cAACshB,KAAgB,CACfnd,SACEpE,IAAAC,cAACuhB,IAAU,CACTnb,GAAG,UACH7B,aAAa,UACbiG,OAAO,OACPC,QAAS,CACPrE,GAAI,UACJnE,UAAW,OACXyI,YAAa,eAEfC,OAAQ,CACNJ,UAAW,QAEbK,KACE7K,IAAAC,cAACwhB,IAAU,CAAC/Z,MAAO0Z,EAAiBhb,EAAE,OAAOD,EAAE,aAIvDnG,IAAAC,cAAC6W,KAAK,CACJ5Q,QAAQ,SACRuB,SAAS,KACTpB,GAAIgb,EACJtK,YAAY,kBCdL,SAAS2K,GAAY3hB,GAClC,MAAM,QACJmG,EAAO,SACP9B,EAAQ,MACRob,EAAK,SACLmC,EAAQ,UACR3C,EAAS,OACT1T,KACGjH,GACDtE,GAEE,UAAE2G,GAAcC,cAGhBib,EAAiCnb,YAAkB,WAAY,YAC/Dob,EAAoBpb,YAAkB,QAAS,YAC/Cqb,EAASrb,YAAkB,QAAS,YAG1C,IAAIoa,EAAarB,GAASmC,EAAWC,EAAiCC,EAKtE,OAJI7C,IACF6B,EAAa,SAIb7gB,IAAAC,cAACC,IAAI,CACHuM,GAAI,CAAE/C,GAAI,MAAOuK,GAAI,QACrB7N,EAAG,CAAEsD,GAAI,OAAQuK,GAAI,QACrB3T,WAAW,SACXH,cAAc,OACdH,IAAAC,cAACkhB,GAAS,CAACpW,GAAG,SACd/K,IAAAC,cAACiK,IAAO,CAACC,GAAG,gBACVnK,IAAAC,cAAC8H,IAAM,CACLqE,GAAG,MACH5L,GAAG,MACHuK,GAAI,CAAErB,GAAI,MAAOuK,GAAI,QACrBvM,MAAOmZ,EACP3a,QAAQ,aACRsV,UACE5R,SAASC,gBAAgBC,IACvB,GAEA9J,IAAAC,cAACqD,EAAW,CAACoE,MAAOmZ,EAAYza,EAAE,OAAOD,EAAE,OAAO4E,GAAG,QAGzDsN,SACEzO,SAASC,gBAAgBC,IACvB9J,IAAAC,cAACqD,EAAW,CAACoE,MAAOmZ,EAAYza,EAAE,OAAOD,EAAE,OAAO4E,GAAG,QAErD,IAGJ/K,IAAAC,cAACuH,IAAI,CAACkE,QAAS,CAAEhC,GAAI,OAAQuK,GAAI,SAAU,aAG/CjU,IAAAC,cAACiI,GAAiB5D,OAAAC,OAAA,CAChBgE,eAAgB,QAChBF,KACErI,IAAAC,cAAC2G,IAAK,CAACE,UAAU,MAAME,QAAQ,OAAOD,MAAM,SAASF,QAAQ,UAC5C,SAAdH,EACC1G,IAAAC,cAAC8D,EAAc,CAACqC,EAAE,OAAOD,EAAE,SAE3BnG,IAAAC,cAAC6D,EAAa,CAACsC,EAAE,OAAOD,EAAE,SAE5BnG,IAAAC,cAACkL,IAAG,CACF/E,EAAE,MACFD,EAAE,OACFE,GAAkB,SAAdK,EAAuB,QAAU,aAExB,SAAdA,EACC1G,IAAAC,cAACgE,EAAe,CAACmC,EAAE,OAAOD,EAAE,SAE5BnG,IAAAC,cAAC+D,EAAc,CAACoC,EAAE,OAAOD,EAAE,UAIjCO,UAAWA,EACXsY,UAAWjf,EAAMif,UACjB1W,OAAQA,IACJjE,IAENrE,IAAAC,cAACuD,EAAY,CACXmQ,OAAO,UACPvH,GAAI,CAAEhM,KAAM,OAAQC,GAAI,OACxB0K,GAAG,OACHc,QAAS9L,EAAMuL,OACf5D,MAAOmZ,EACPza,EAAE,OACFD,EAAE,SAEJnG,IAAAC,cAACqb,KAAI,KACHtb,IAAAC,cAACsb,KAAU,KACTvb,IAAAC,cAAC8hB,IAAQ,CAACra,MAAOmZ,EAAYza,EAAE,OAAOD,EAAE,UAE1CnG,IAAAC,cAACyb,KAAQ,CAACjI,EAAE,WAAWpN,GAAIyb,GACzB9hB,IAAAC,cAACC,IAAI,CAACC,cAAc,UAClBH,IAAAC,cAAC0b,KAAQ,CAACnX,aAAa,MAAMyC,GAAG,QAC9BjH,IAAAC,cAAC2gB,GAAW,CACV7E,KAAK,iBACLmF,KAAK,cACLD,SAAS,cACTF,MAAM,SACNC,KAAMxQ,QAGVxQ,IAAAC,cAAC0b,KAAQ,CAACnX,aAAa,MAAMyC,GAAG,QAC9BjH,IAAAC,cAAC2gB,GAAW,CACV7E,KAAK,aACLmF,KAAK,gBACLD,SAAS,YACTF,MAAM,aACNC,KAAMvQ,QAGVzQ,IAAAC,cAAC0b,KAAQ,CAACnX,aAAa,OACrBxE,IAAAC,cAAC2gB,GAAW,CACV7E,KAAK,aACLmF,KAAK,iCACLD,SAAS,GACTF,MAAM,OACNC,KAAMtQ,YCjIP,SAASsR,GAAYjiB,GAClC,MAAO4hB,EAAUM,GAAevZ,oBAAS,GAEzCwZ,oBAAU,KACRla,OAAOma,iBAAiB,SAAUC,GAE3B,KACLpa,OAAOqa,oBAAoB,SAAUD,MAIzC,MAAM,QACJlc,EAAO,SACP9B,EAAQ,MACRob,EAAK,UACLR,EAAS,UACTsD,EAAS,OACThX,KACGjH,GACDtE,EAGEwiB,EAAmB9b,YAAkB,WAAY,YACjD+b,EAAiB/b,YAAkB,QAAS,YAC5Cgc,EAAiBhc,YAAkB,mCAAoC,QACvEic,EAAkBjc,YACtB,6FACA,4FAEIkc,EAAclc,YAAkB,UAAW,6BAC3Cmc,EAAiBnc,YACrB,OACA,iDAIF,IAAIoc,EAAWrD,GAASmC,EAAWY,EAAmBC,EAClDM,EAAgBtD,GAASmC,EAAWY,EAAmBC,EACvDO,EAAiB,WACjBC,EAAe,OACfC,EAAiB,OACjBC,EAAe,OACfC,EAAW,OACXC,EAAe,cACfC,EAAkB,MAClBC,EAAW,QAED,IAAV9D,IAA+B,IAAbmC,IACpBoB,EAAiB,QACjBG,EAAeT,EACfU,EAAWT,EACXU,EAAeT,EACfK,EAAeJ,GAGb7iB,EAAMif,YACRiE,EAAiB,OACjBF,EAAiB,WACjBF,EAAW,QACXC,EAAgB,QAChBO,EAAkB,OAClBC,EAAW,QAGb,MAAMlB,EAAeA,KACfpa,OAAOub,QAAU,EACnBtB,GAAY,GAEZA,GAAY,IAIhB,OACEjiB,IAAAC,cAACC,IAAI,CACH0E,SAAUme,EACVvY,UAAW0Y,EACX7c,GAAI8c,EACJxY,YAAayY,EACbzW,OAAQqW,EACR7N,eAAgB8N,EAChBO,YAAY,QACZC,YAAY,QACZC,gBAAgB,iBAChBC,mBAAmB,0BACnBC,sBAAoB,+CACpBC,yBAAyB,iCACzBvjB,WAAY,CAAED,GAAI,UAClBmE,aAAa,OACbkH,QAAQ,OACR6K,KAAK,OACLhW,eAAgB,CAAEF,GAAI,UACtB8e,WAAW,SACXhY,GAAG,OACHD,GAAImc,EACJ5iB,GAAG,MACH4E,KAAuC,QAAjCuE,SAASC,gBAAgBC,IAAgB,OAAS,GACxD5E,MAAwC,QAAjC0E,SAASC,gBAAgBC,IAAgB,GAAK,OACrDtJ,GAAI,CACFkJ,GAAI4Z,EACJrP,GAAI,QAENxK,GAAI,CACFpJ,GAAI,QAEN+K,GAAG,MACHnG,IAAI,OACJmB,EAAG,CAAEsD,GAAI,qBAAsBrJ,GAAI,+BAEnCL,IAAAC,cAACC,IAAI,CACHkG,EAAE,OACFjG,cAAe,CACbuJ,GAAI,SACJuK,GAAI,OAEN3T,WAAY,CAAED,GAAI,WAElBL,IAAAC,cAACkL,IAAG,CAAClE,GAAI,CAAEyC,GAAI,MAAOuK,GAAI,QACxBjU,IAAAC,cAAC6jB,KAAU,KACT9jB,IAAAC,cAAC8jB,KAAc,CAACrc,MAAOmb,GACrB7iB,IAAAC,cAAC+jB,KAAc,CAACnc,KAAK,IAAIH,MAAOob,GAAe,UAKjD9iB,IAAAC,cAAC8jB,KAAc,CAACrc,MAAOmb,GACrB7iB,IAAAC,cAAC+jB,KAAc,CAACnc,KAAK,IAAIH,MAAOmb,GAC7BP,KAIPtiB,IAAAC,cAAC2H,IAAI,CACHF,MAAOmb,EACPhb,KAAK,IACLxB,GAAG,UACH7B,aAAa,UACbmD,WAAW,OACX8C,OAAQ,CAAE/C,MAAOmb,GACjBnY,QAAS,CACPrE,GAAI,UACJnE,UAAW,OACXyI,YAAa,eAEfC,OAAQ,CACNJ,UAAW,SAGZ8X,IAGLtiB,IAAAC,cAACkL,IAAG,CAACiB,GAAG,OAAOhG,EAAG,CAAEsD,GAAI,OAAQuK,GAAI,UAClCjU,IAAAC,cAACgkB,GAAgB,CACf3Y,OAAQvL,EAAMuL,OACdyT,SAAUhf,EAAMgf,SAChBC,UAAWjf,EAAMif,UACjBQ,MAAOzf,EAAMyf,MACbmC,SAAUA,OCtKP,SAASuC,GAAYnkB,GAClC,MAAM,UAAEif,EAAS,SAAEtG,EAAQ,SAAE0H,EAAQ,MAAEZ,KAAUnb,GAAStE,EAE1D,IAAI8gB,EAAapa,YAAkB,WAAY,YAC3CwY,EAAWxY,YAAkB,QAAS,YACtC0d,EAAe,OACfpkB,EAAMif,YACRmF,EAAe,QAGjB,MAAMlE,EAAcjgB,IAAM4I,SAC1B,OACE5I,IAAAC,cAAAD,IAAAc,SAAA,KACEd,IAAAC,cAAC8H,IAAM,CACL5B,EAAE,OACFC,EAAE,OACFyF,QAAS9L,EAAMuL,OACfjF,GAAI4Y,EACJra,SAAS,QACTsB,QAAQ,WACRb,KAAuC,QAAjCuE,SAASC,gBAAgBC,IAAgB,OAAS,GACxD5E,MAAwC,QAAjC0E,SAASC,gBAAgBC,IAAgB,GAAK,OACrD9E,OAAO,OACPR,aAAa,OACbgG,UAAU,iCAEVxK,IAAAC,cAACuD,EAAY,CACXmQ,OAAO,UACPhI,IAAKsU,EACLvY,MAAOmZ,EACPza,EAAE,OACFD,EAAE,WCxBGie,OAXf,SAAmBrkB,GACjB,MAAM,QAAEmG,EAAO,SAAE9B,KAAaC,GAAStE,EACjCkN,EAASC,aAAe,YAAa,CAAEhH,YAE7C,OACElG,IAAAC,cAACkL,IAAG7G,OAAAC,OAAA,CAAC4I,MAAOF,GAAY5I,GACrBD,ICKQigB,OAXf,SAAwBtkB,GACtB,MAAM,QAAEmG,EAAO,SAAE9B,KAAaC,GAAStE,EACjCkN,EAASC,aAAe,iBAAkB,CAAEhH,YAElD,OACElG,IAAAC,cAACkL,IAAG7G,OAAAC,OAAA,CAAC4I,MAAOF,GAAY5I,GACrBD,ICKQkgB,OAXf,SAAsBvkB,GACpB,MAAM,QAAEmG,EAAO,SAAE9B,KAAaC,GAAStE,EACjCkN,EAASC,aAAe,eAAgB,CAAEhH,YAEhD,OACElG,IAAAC,cAACkL,IAAG7G,OAAAC,OAAA,CAAC4I,MAAOF,GAAY5I,GACrBD,I,0CCHP,MAAM4J,GAAU,CACduW,IAAK,CAAEjb,IAAK,SAAUkb,cAAe,C,OAACD,IACtCE,IAAK,CAAEnb,IAAK,WAEP,SAASob,GAAWhgB,GAAgB,IAAf,SAAEN,GAAUM,EACtC,MAAMoF,EAAsC,MAAhCF,SAASC,gBAAgBC,IAAc,MAAQ,MACrD6a,EAAQC,aAAY5W,GAAQlE,IAClC,OAAO9J,IAAAC,cAAC4kB,KAAa,CAACrR,MAAOmR,EAAOvgB,SAAUA,I,oBCVzC,MAAM0gB,GAAe,CAC1BhW,OAAQ,CACNiW,KAAM,CACJC,IAAK,WAEPC,KAAM,CACJC,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLA,IAAK,UACLR,IAAK,UACLS,IAAK,UACLC,IAAK,YAGTzY,OAAQ,CACN0Y,OAAS5lB,IAAK,CACZ6lB,KAAM,CACJ1R,UAAW,SACX7N,GAAIwf,aAAK,UAAW,UAAhBA,CAA2B9lB,GAC/B+lB,WAAY,yBAEdC,KAAM,CACJD,WAAY,6BC1BPE,GAAcC,aAAkB,CAC3Cvc,GAAI,QACJuK,GAAI,QACJgB,GAAI,SACJ5U,GAAI,SACJ,MAAO,WCPI6lB,GAAe,CAC1BC,WAAY,CACVpe,OAAQ,CACNqe,SAAU,CACRC,QAAS,CACP5e,SAAU,OACVpB,GAAI,WACJqB,MAAO,OACP+C,OAAQ,CAAEpE,GAAI,YACduE,OAAQ,CAAEvE,GAAI,YACdqE,QAAS,CAAErE,GAAI,aAEjB4e,KAAM,CACJxd,SAAU,OACVpB,GAAI,WACJqB,MAAO,OACP+C,OAAQ,CAAEpE,GAAI,YACduE,OAAQ,CAAEvE,GAAI,YACdqE,QAAS,CAAErE,GAAI,aAEjB,aAAc,CACZoE,OAAQ,OACRC,QAAS,OACTE,OAAQ,QAEV0b,OAAQA,KAAA,CACN5e,MAAO,QACPrB,GAAI,UACJoB,SAAU,OACVgD,OAAQ,UACRG,OAAQ,UACRF,QAAS,YAEX6b,SAAWxmB,IAAK,CACd2H,MAAOme,aAAK,WAAY,QAAjBA,CAA0B9lB,GACjCsG,GAAI,cACJoB,SAAU,OACV2N,OAAQ,YACRzK,YAAa,CAAEtE,GAAIwf,aAAK,WAAY,QAAjBA,CAA0B9lB,IAC7C0K,OAAQ,CAAEpE,GAAIwf,aAAK,UAAW,cAAhBA,CAA+B9lB,IAC7C6K,OAAQ,CAAEvE,GAAIwf,aAAK,UAAW,cAAhBA,CAA+B9lB,IAC7C2K,QAAS,CAAErE,GAAIwf,aAAK,UAAW,cAAhBA,CAA+B9lB,MAEhDymB,KAAOzmB,IAAK,CACV2H,MAAO,QACPrB,GAAIwf,aAAK,WAAY,WAAjBA,CAA6B9lB,GACjC0H,SAAU,OACVgD,OAAQ,CAAEpE,GAAIwf,aAAK,WAAY,WAAjBA,CAA6B9lB,IAC3C6K,OAAQ,CAAEvE,GAAIwf,aAAK,WAAY,WAAjBA,CAA6B9lB,IAC3C2K,QAAS,CAAErE,GAAIwf,aAAK,WAAY,WAAjBA,CAA6B9lB,MAE9C0mB,MAAQ1mB,IAAK,CACX2H,MAAOme,aAAK,WAAY,WAAjBA,CAA6B9lB,GACpCsG,GAAIwf,aAAK,WAAY,QAAjBA,CAA0B9lB,GAC9B0H,SAAU,OACVgD,OAAQ,CAAEpE,GAAIwf,aAAK,UAAW,QAAhBA,CAAyB9lB,IACvC6K,OAAQ,CAAEvE,GAAIwf,aAAK,UAAW,QAAhBA,CAAyB9lB,IACvC2K,QAAS,CAAErE,GAAIwf,aAAK,UAAW,QAAhBA,CAAyB9lB,OAG5C2mB,UAAW,CACT/e,WAAY,OACZnD,aAAc,MACdiD,SAAU,WC/DLkf,GAAc,CACzBR,WAAY,CACVrP,MAAO,CACL4P,UAAW,CACTE,MAAO,CACLjf,WAAY,MAIhBye,SAAU,CACRS,KAAO9mB,IAAK,CACV6mB,MAAO,CACLvgB,GAAIwf,aAAK,QAAS,WAAdA,CAA0B9lB,GAC9BqV,OAAQ,YACRzK,YAAakb,aAAK,WAAY,cAAjBA,CAAgC9lB,GAC7C+mB,aAAc,CAAEpf,MAAOme,aAAK,WAAY,WAAjBA,CAA6B9lB,OAGxDgnB,OAAShnB,IAAK,CACZ6mB,MAAO,CACLxR,OAAQ,OACRzL,GAAI,OACJnF,aAAc,UACdsiB,aAAc,CAAEpf,MAAOme,aAAK,WAAY,WAAjBA,CAA6B9lB,WCFnDinB,GAAgB,CAC3Bb,WAAY,CACVnZ,KAxBS,CACX0Z,UAAW,CACTjT,EAAG,OACH/H,QAAS,OACTvL,cAAe,SACfuB,MAAO,OACP8I,UAAW,mCACXhG,aAAc,OACdI,SAAU,WACVqiB,SAAU,aACVC,eAAgB,cAElBd,SAAU,CACRe,MAAQpnB,IAAK,CACXsG,GAAwB,SAApBtG,EAAM2G,UAAuB,UAAY,WAGjD0gB,aAAc,CACZlhB,QAAS,YCOAmhB,GAAqB,CAChClB,WAAY,CACV/B,UA3Bc,CAChBsC,UAAW,CACTY,MAAO,QACPziB,SAAU,OACVyS,SAAU,OACV1S,SAAU,WACV2iB,UAAW,OACXziB,WAAY,kDACZ6e,mBAAoB,iBACpB6D,mBAAoB,qBACpB3D,yBAA0B,wBAE5BuC,SAAU,CACRqB,KAAO1nB,IAAK,CACVunB,MAAO,UAET/C,IAAMxkB,IAAK,CACTunB,MAAO,UAGXF,aAAc,CACZlhB,QAAS,WCZAwhB,GAAwB,CACnCvB,WAAY,CACV7B,aAXiB,CACnBoC,UAAW,CACTta,GAAI,OACJrB,GAAI,OACJtB,GAAI,OACJgD,GAAI,WCEKkb,GAA0B,CACrCxB,WAAY,CACV9B,eATmB,CACrBqC,UAAW,CACTjT,EAAG,YACH6K,UAAW,0BCSAsJ,oBACb,CAAE5B,gBACFlB,GACAoB,GCfyB,CACvBC,WAAY,CACRpS,MAAO,CACH8T,MAAO,CACH5T,GAAI,CACAvS,MAAO,OACPD,OAAQ,SAGhBilB,UAAW,CACPvI,cAAe,iBCVL,CACxBgI,WAAY,CACVve,KAAM,CAEJkgB,WAAY,OACZpB,UAAW,CACTjc,OAAQ,CACNsd,eAAgB,QAElBnd,OAAQ,CACNJ,UAAW,YFQnBmc,GACAK,GACAK,GACAK,GACAC,IGMFK,IAASla,OACP9N,IAAAC,cAACgoB,KAAc,CAACvZ,MAAOA,GAAOwZ,UAAU,EAAOtjB,SAAS,YACtD5E,IAAAC,cAACkoB,IAAU,KACTnoB,IAAAC,cAAC0V,IAAM,KACL3V,IAAAC,cAACmoB,IAAK,CAACvnB,KAAM,QAAS6c,UCvBf,SAAe3d,GAC5B,SAAWsE,GAAStE,EAEdsoB,EAAUroB,IAAMsoB,YACtBtoB,IAAMkiB,UAAU,KACdtY,SAASgc,KAAKjhB,MAAM2S,SAAW,QAExB,eAET,MAuBMiR,EAAmBjgB,IAEvB,IAAK,IAAIkgB,EAAI,EAAGA,EAAIlgB,EAAOqM,OAAQ6T,IACjC,GAAIlgB,EAAOkgB,GAAGhf,SAAU,CACtB,IAAIif,EAAuBF,EAAgBjgB,EAAOkgB,GAAGve,OACrD,IAJe,IAIXwe,EACF,OAAOA,OAGT,IACuE,IAArEzgB,OAAOG,SAASN,KAAK6gB,QAAQpgB,EAAOkgB,GAAGpe,OAAS9B,EAAOkgB,GAAG3nB,OAEtDyH,EAAOkgB,GAAG3J,gBACZ,OAAOvW,EAAOkgB,GAAG3J,gBAKzB,OAjBmB,GAmBf8J,EAAargB,GACVA,EAAOc,IAAI,CAACC,EAAMC,IACnBD,EAAKuf,UAGa,YAAlBvf,EAAKG,SAFAmf,EAAUtf,EAAKY,OAKJ,UAAhBZ,EAAKe,OAELpK,IAAAC,cAACmoB,IAAK,CACJvnB,KAAMwI,EAAKe,OAASf,EAAKxI,KACzB6c,UAAWrU,EAAKqU,UAChBpU,IAAKA,IAIF,MAIPuf,EAAS7oB,IAAM4I,SAErB,OADAgB,SAASC,gBAAgBC,IAAM,MAE7B9J,IAAAC,cAACkL,IAAG,CAACQ,IAAKkd,EAAQziB,EAAE,QAClBpG,IAAAC,cAAC6oB,IAAM,CAACC,aAAcF,GACpB7oB,IAAAC,cAAC6e,GAAU,CAACE,UAAWuJ,EAAgBjgB,IAASyW,SAAS,MAE3D/e,IAAAC,cAACkL,IAAG,CAAC/E,EAAE,QACLpG,IAAAC,cAACkL,IAAG,CAACQ,IAAK0c,EAASjiB,EAAE,QACnBpG,IAAAC,cAAC0V,IAAM,KACJgT,EAAUrgB,IACXtI,IAAAC,cAAC+oB,IAAQ,CAACC,KAAK,QAAQ9e,GAAG,wBAIhCnK,IAAAC,cAACkL,IAAG,CAAC3K,GAAG,OAAO2G,GAAG,OAAOzF,MAAM,SAASyK,KAAK,OAAOjF,GAAG,QACrDlH,IAAAC,cAACH,EAAM,WDjEPE,IAAAC,cAACmoB,IAAK,CAACvnB,KAAM,SAAU6c,UEHhB,SAAmB3d,GAChC,SAAWsE,GAAStE,GAEbyf,EAAO0J,GAAYxgB,oBAAS,IAC7B,UAAEhC,GAAcC,cAKhBwiB,EAAkB7gB,IAEtB,IAAK,IAAIkgB,EAAI,EAAGA,EAAIlgB,EAAOqM,OAAQ6T,IACjC,GAAIlgB,EAAOkgB,GAAGI,SAAU,CACtB,IAAIQ,EAAsBD,EAAe7gB,EAAOkgB,GAAGve,OACnD,GAJc,uBAIVmf,EACF,OAAOA,OAEJ,GAAI9gB,EAAOkgB,GAAGhf,SAAU,CAC7B,IAAI6f,EAAsBF,EAAe7gB,EAAOkgB,GAAGve,OACnD,GATc,uBASVof,EACF,OAAOA,OAGT,IACuE,IAArErhB,OAAOG,SAASN,KAAK6gB,QAAQpgB,EAAOkgB,GAAGpe,OAAS9B,EAAOkgB,GAAG3nB,MAE1D,OAAOyH,EAAOkgB,GAAGxe,KAIvB,MApBkB,sBAuBdue,EAAmBjgB,IAEvB,IAAK,IAAIkgB,EAAI,EAAGA,EAAIlgB,EAAOqM,OAAQ6T,IACjC,GAAIlgB,EAAOkgB,GAAGhf,SAAU,CACtB,IAAIif,EAAuBF,EAAgBjgB,EAAOkgB,GAAGve,OACrD,IAJe,IAIXwe,EACF,OAAOA,OAGT,IACuE,IAArEzgB,OAAOG,SAASN,KAAK6gB,QAAQpgB,EAAOkgB,GAAGpe,OAAS9B,EAAOkgB,GAAG3nB,OAEtDyH,EAAOkgB,GAAG3J,gBACZ,OAAOvW,EAAOkgB,GAAG3J,gBAKzB,OAjBmB,GAmBf8J,EAAargB,GACVA,EAAOc,IAAI,CAACC,EAAMC,IACnBD,EAAKuf,UAGa,YAAlBvf,EAAKG,SAFAmf,EAAUtf,EAAKY,OAKJ,WAAhBZ,EAAKe,OAELpK,IAAAC,cAACmoB,IAAK,CACJvnB,KAAMwI,EAAKe,OAASf,EAAKxI,KACzB6c,UAAWrU,EAAKqU,UAChBpU,IAAKA,IAIF,OAIP,OAAE+B,EAAM,OAAEC,EAAM,QAAEC,GAAYC,cAGpC,OAFA5B,SAASC,gBAAgBC,IAAM,MAG7B9J,IAAAC,cAACkL,IAAG,KACFnL,IAAAC,cAACkL,IAAG,CACFoL,KAAK,OACLnQ,EAAE,OACFxB,SAAS,WACTqS,QAAuB,UAAdvQ,EAAwB4iB,KAAU,OAC3CjjB,GAAkB,UAAdK,EAAwB4iB,KAAU,WACtCnS,OAAO,QACPlS,IAAI,MAENjF,IAAAC,cAACsM,GAAOjI,OAAAC,OAAA,CACN+D,OAAQA,GACRD,KACErI,IAAAC,cAAC2G,IAAK,CAACE,UAAU,MAAME,QAAQ,OAAOD,MAAM,SAASF,QAAQ,UAC5C,SAAdH,EACC1G,IAAAC,cAAC8D,EAAc,CAACqC,EAAE,OAAOD,EAAE,SAE3BnG,IAAAC,cAAC6D,EAAa,CAACsC,EAAE,OAAOD,EAAE,SAE5BnG,IAAAC,cAACkL,IAAG,CACF/E,EAAE,MACFD,EAAE,OACFE,GAAkB,SAAdK,EAAuB,QAAU,aAExB,SAAdA,EACC1G,IAAAC,cAACgE,EAAe,CAACmC,EAAE,OAAOD,EAAE,SAE5BnG,IAAAC,cAAC+D,EAAc,CAACoC,EAAE,OAAOD,EAAE,UAIjCuF,QAAQ,QACJrH,IAENrE,IAAAC,cAACmkB,GAAS,CACRhe,EAAG,CACDhG,KAAM,OACNC,GAAI,uBAENL,IAAAC,cAAC6oB,IAAM,KACL9oB,IAAAC,cAAC+hB,GAAW1d,OAAAC,OAAA,CACV+G,OAAQA,EACRgX,UAAW6G,EAAe7gB,IAC1B0W,UAAWuJ,EAAgBjgB,IAC3BkX,MAAOA,GACHnb,KApHwB,4BAA7B2D,OAAOG,SAASmC,SAwHjBtK,IAAAC,cAACqkB,GAAY,KACXtkB,IAAAC,cAACokB,GAAc,KACbrkB,IAAAC,cAAC0V,IAAM,KACJgT,EAAUrgB,IACXtI,IAAAC,cAAC+oB,IAAQ,CAACC,KAAK,SAAS9e,GAAG,wBAI/B,KACJnK,IAAAC,cAACH,EAAM,MACPE,IAAAC,cAAC6oB,IAAM,KACL9oB,IAAAC,cAACikB,GAAW,CACVlF,UAAWuJ,EAAgBjgB,IAC3BkX,MAAOA,EACPlU,OAAQA,KAGZtL,IAAAC,cAACqf,GAAY,CACXN,UAAWuJ,EAAgBjgB,IAC3B+C,OAAQA,EACRE,QAASA,EACToU,UAAWH,EACXY,SAAW5M,IACT0V,EAAS1V,WFlJbxT,IAAAC,cAACmoB,IAAK,CAACvnB,KAAM,OAAQ6c,UGLd,SAAmB3d,GAChC,SAAWsE,GAAStE,GAEbwG,EAAgBgZ,GAAqB7W,mBAAS,gBAC9C8W,EAAO0J,GAAYxgB,oBAAS,GAE7BC,EAAY3I,IAAMsoB,YAIlBa,EAAkB7gB,IAEtB,IAAK,IAAIkgB,EAAI,EAAGA,EAAIlgB,EAAOqM,OAAQ6T,IACjC,GAAIlgB,EAAOkgB,GAAGI,SAAU,CACtB,IAAIQ,EAAsBD,EAAe7gB,EAAOkgB,GAAGve,OACnD,GAJc,uBAIVmf,EACF,OAAOA,OAEJ,GAAI9gB,EAAOkgB,GAAGhf,SAAU,CAC7B,IAAI6f,EAAsBF,EAAe7gB,EAAOkgB,GAAGve,OACnD,GATc,uBASVof,EACF,OAAOA,OAGT,IACuE,IAArErhB,OAAOG,SAASN,KAAK6gB,QAAQpgB,EAAOkgB,GAAGpe,OAAS9B,EAAOkgB,GAAG3nB,MAE1D,OAAOyH,EAAOkgB,GAAGxe,KAIvB,MApBkB,sBAuBdue,EAAmBjgB,IAEvB,IAAK,IAAIkgB,EAAI,EAAGA,EAAIlgB,EAAOqM,OAAQ6T,IACjC,GAAIlgB,EAAOkgB,GAAGhf,SAAU,CACtB,IAAIif,EAAuBF,EAAgBjgB,EAAOkgB,GAAGve,OACrD,IAJe,IAIXwe,EACF,OAAOA,OAGT,IACuE,IAArEzgB,OAAOG,SAASN,KAAK6gB,QAAQpgB,EAAOkgB,GAAGpe,OAAS9B,EAAOkgB,GAAG3nB,OAEtDyH,EAAOkgB,GAAG3J,gBACZ,OAAOvW,EAAOkgB,GAAG3J,gBAKzB,OAjBmB,GAmBf8J,EAAargB,GACVA,EAAOc,IAAI,CAACC,EAAMC,IACnBD,EAAKuf,UAGa,YAAlBvf,EAAKG,SAFAmf,EAAUtf,EAAKY,OAKJ,SAAhBZ,EAAKe,QAAqC,WAAhBf,EAAKe,OAE/BpK,IAAAC,cAACmoB,IAAK,CACJvnB,KAAMwI,EAAKe,OAASf,EAAKxI,KACzB6c,UAAWrU,EAAKqU,UAChBpU,IAAKA,IAIF,OAIP,UAAE5C,GAAcC,eAChB,OAAE0E,EAAM,OAAEC,EAAM,QAAEC,GAAYC,cAGpC,OAFA5B,SAASC,gBAAgBC,IAAM,MAG7B9J,IAAAC,cAACykB,GAAW,KACV1kB,IAAAC,cAACkL,IAAG,CACFoL,KAAK,OACLnQ,EAAE,OACFxB,SAAS,WACTqS,QAAuB,UAAdvQ,EAAwB4iB,KAAU,OAC3CjjB,GAAkB,UAAdK,EAAwB4iB,KAAU,WACtCnS,OAAO,QACPlS,IAAI,MAENjF,IAAAC,cAACsM,GAAOjI,OAAAC,OAAA,CACN+D,OAAQA,GACRD,KACErI,IAAAC,cAAC2G,IAAK,CAACE,UAAU,MAAME,QAAQ,OAAOD,MAAM,SAASF,QAAQ,UAC5C,SAAdH,EACC1G,IAAAC,cAAC8D,EAAc,CAACqC,EAAE,OAAOD,EAAE,SAE3BnG,IAAAC,cAAC6D,EAAa,CAACsC,EAAE,OAAOD,EAAE,SAE5BnG,IAAAC,cAACkL,IAAG,CACF/E,EAAE,MACFD,EAAE,OACFE,GAAkB,SAAdK,EAAuB,QAAU,aAExB,SAAdA,EACC1G,IAAAC,cAACgE,EAAe,CAACmC,EAAE,OAAOD,EAAE,SAE5BnG,IAAAC,cAAC+D,EAAc,CAACoC,EAAE,OAAOD,EAAE,UAIjCuF,QAAQ,OACRnF,eAAgBA,GACZlC,IAENrE,IAAAC,cAACmkB,GAAS,CACRle,QAAQ,MACRyF,IAAKhD,EACLvC,EAAG,CACDhG,KAAM,OACNC,GAAI,uBAENL,IAAAC,cAAC6oB,IAAM,KACL9oB,IAAAC,cAAC+hB,GAAW1d,OAAAC,OAAA,CACV+G,OAAQA,EACRyT,SAAU,yBACVuD,UAAW6G,EAAe7gB,IAC1B0W,UAAWuJ,EAAgBjgB,IAC3BkX,MAAOA,GACHnb,KAzHwB,4BAA7B2D,OAAOG,SAASmC,SA6HjBtK,IAAAC,cAACqkB,GAAY,KACXtkB,IAAAC,cAACokB,GAAc,KACbrkB,IAAAC,cAAC0V,IAAM,KACJgT,EAAUrgB,IACXtI,IAAAC,cAAC+oB,IAAQ,CAACC,KAAK,OAAO9e,GAAG,6BAI7B,KACJnK,IAAAC,cAACH,EAAM,MACPE,IAAAC,cAAC6oB,IAAM,KACL9oB,IAAAC,cAACikB,GAAW,CACVlF,UAAWuJ,EAAgBjgB,IAC3BkX,MAAOA,EACPlU,OAAQA,KAGZtL,IAAAC,cAACqf,GAAY,CACXN,UAAWuJ,EAAgBjgB,IAC3B+C,OAAQA,EACRE,QAASA,EACToU,UAAWH,EACXY,SAAW5M,IACT0V,EAAS1V,IAEX+V,SAAUA,IAAMhK,EAAkB,UAClCiK,cAAeA,IAAMjK,EAAkB,sBHzJzCvf,IAAAC,cAAC+oB,IAAQ,CAACC,KAAM,IAAK9e,GAAG,wBAI9BP,SAAS6f,eAAe,U,mBIvC1B7pB,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.74f60497.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SidebarHelpImage.30550ef2.png\";","module.exports = __webpack_public_path__ + \"static/media/BackgroundCard1.69293fd5.png\";","module.exports = __webpack_public_path__ + \"static/media/signInImage.04614735.png\";","module.exports = __webpack_public_path__ + \"static/media/BgSignUp.d5ff33d0.png\";","/*eslint-disable*/\r\nimport { Flex, Link, List, ListItem, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport default function Footer(props) {\r\n  return (\r\n    <Flex\r\n      flexDirection={{\r\n        base: \"column\",\r\n        xl: \"row\",\r\n      }}\r\n      alignItems={{\r\n        base: \"center\",\r\n        xl: \"start\",\r\n      }}\r\n      justifyContent='space-between'\r\n      px='30px'\r\n      pb='20px'>\r\n      {/* <Text\r\n        color='gray.400'\r\n        textAlign={{\r\n          base: \"center\",\r\n          xl: \"start\",\r\n        }}\r\n        mb={{ base: \"20px\", xl: \"0px\" }}>\r\n        &copy; {1900 + new Date().getYear()},{\" \"}\r\n        <Text as='span'>\r\n          {document.documentElement.dir === \"rtl\"\r\n            ? \" مصنوع من ❤️ بواسطة\"\r\n            : \"Made with ❤️ by \"}\r\n        </Text>\r\n        <Link\r\n          color='blue.400'\r\n          href='https://www.creative-tim.com'\r\n          target='_blank'>\r\n          {document.documentElement.dir === \"rtl\"\r\n            ? \" توقيت الإبداعية\"\r\n            : \"Creative Tim \"}\r\n        </Link>\r\n        &\r\n        <Link color='blue.400' href='https://www.simmmple.com' target='_blank'>\r\n          {document.documentElement.dir === \"rtl\" ? \"سيممبل \" : \" Simmmple\"}\r\n        </Link>\r\n        {document.documentElement.dir === \"rtl\"\r\n          ? \"للحصول على ويب أفضل\"\r\n          : \" for a better web\"}\r\n      </Text>\r\n      <List display='flex'>\r\n        <ListItem\r\n          me={{\r\n            base: \"20px\",\r\n            md: \"44px\",\r\n          }}>\r\n          <Link color='gray.400' href='https://www.creative-tim.com'>\r\n            {document.documentElement.dir === \"rtl\"\r\n              ? \"توقيت الإبداعية\"\r\n              : \"Creative Tim\"}\r\n          </Link>\r\n        </ListItem>\r\n        <ListItem\r\n          me={{\r\n            base: \"20px\",\r\n            md: \"44px\",\r\n          }}>\r\n          <Link color='gray.400' href='https://www.simmmple.com'>\r\n            {document.documentElement.dir === \"rtl\" ? \"سيممبل\" : \"Simmmple\"}\r\n          </Link>\r\n        </ListItem>\r\n        <ListItem\r\n          me={{\r\n            base: \"20px\",\r\n            md: \"44px\",\r\n          }}>\r\n          <Link\r\n            color='gray.400'\r\n            href='#blog'\r\n            href='https://creative-tim.com/blog'>\r\n            {document.documentElement.dir === \"rtl\" ? \"مدونة\" : \"Blog\"}\r\n          </Link>\r\n        </ListItem>\r\n        <ListItem>\r\n          <Link\r\n            color='gray.400'\r\n            href='#license'\r\n            href='https://www.creative-tim.com/license'>\r\n            {document.documentElement.dir === \"rtl\" ? \"رخصة\" : \"License\"}\r\n          </Link>\r\n        </ListItem>\r\n      </List> */}\r\n    </Flex>\r\n  );\r\n}\r\n","import { createIcon } from \"@chakra-ui/icons\";\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport const ChatIcon = createIcon({\r\n  displayName: 'ChatIcon',\r\n  path: (\r\n    <>\r\n      <path\r\n        fill='currentColor'\r\n        d='M4 1C2.343 1 1 2.343 1 4v8c0 1.657 1.343 3 3 3h6l4 4v-4h2c1.657 0 3-1.343 3-3V4c0-1.657-1.343-3-3-3H4zm0 2h10c.553 0 1 .447 1 1v8c0 .553-.447 1-1 1h-8l-4 4v-4H4c-.553 0-1-.447-1-1V4c0-.553.447-1 1-1z'\r\n      />\r\n    </>\r\n  ),\r\n  pathProps: {\r\n    fill: 'currentColor',\r\n  },\r\n});\r\n\r\nexport const PenIcon = createIcon({\r\n  displayName: 'PenIcon',\r\n  path: (\r\n    <>\r\n      <path\r\n        fill='currentColor'\r\n        d='M12.146 1.207a1 1 0 0 1 1.414 0l2.293 2.293a1 1 0 0 1 0 1.414L4.88 15.879l-2.828.707a1 1 0 0 1-1.213-1.213l.707-2.828L12.146 1.207zm-7.828 9.121L4.672 9.975 11.025 3.622l-1.95-1.95L2.293 8.025l2.025 2.025zm8.025-8.025l1.95 1.95-1.95-1.95zM1.5 17a.5.5 0 0 0 .5.5h2a.5.5 0 0 0 .354-.146l11-11-2.293-2.293-11 11A.5.5 0 0 0 2 15.5v2a.5.5 0 0 0 .5.5z'\r\n      />\r\n    </>\r\n  ),\r\n  viewBox: '0 0 16 16',\r\n});\r\n\r\nexport const AdobexdLogo = createIcon({\r\n  displayName: \"AdobexdLogo\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g clip-path='url(#clip0)'>\r\n      <path\r\n        d='M4.042 0h12.916A3.539 3.539 0 0120.5 3.542v12.416a3.539 3.539 0 01-3.542 3.542H4.042A3.539 3.539 0 01.5 15.958V3.542A3.539 3.539 0 014.042 0z'\r\n        fill='#470137'\r\n      />\r\n      <path\r\n        d='M11.017 5.124l-2.5 4.125 2.666 4.375a.143.143 0 01.017.1c-.008.034-.042.009-.092.017H9.2c-.133 0-.225-.008-.283-.092-.175-.35-.359-.691-.534-1.041a33.608 33.608 0 00-.566-1.05c-.2-.359-.4-.717-.6-1.084H7.2c-.175.359-.367.717-.558 1.075-.192.359-.384.717-.567 1.067-.192.35-.383.708-.575 1.05-.033.083-.1.092-.192.092H3.475c-.033 0-.058.016-.058-.025a.116.116 0 01.016-.092l2.592-4.25L3.5 5.116c-.025-.033-.033-.067-.017-.083.017-.025.05-.034.084-.034h1.891c.042 0 .084.009.117.017a.236.236 0 01.083.075c.159.358.342.717.534 1.075.2.358.391.708.6 1.058.2.35.383.7.558 1.059h.017c.175-.367.358-.725.541-1.075.184-.35.375-.7.567-1.05.192-.35.375-.709.558-1.05.009-.034.025-.067.05-.084a.159.159 0 01.109-.016h1.758a.077.077 0 01.091.058c.009.008-.008.042-.024.058zM14.866 13.917a4.144 4.144 0 01-1.791-.375 2.906 2.906 0 01-1.259-1.134c-.308-.508-.458-1.141-.458-1.9a3.423 3.423 0 011.783-3.05c.584-.325 1.284-.483 2.109-.483.041 0 .1 0 .175.008.075.009.158.009.258.017V4.367c0-.059.025-.092.083-.092h1.692c.042-.008.075.025.083.058v7.95c0 .15.009.317.017.5.017.175.025.342.033.484 0 .058-.025.108-.083.133a6.365 6.365 0 01-1.358.4 7.35 7.35 0 01-1.284.117zm.817-1.667V8.583c-.075-.016-.15-.033-.225-.041-.092-.009-.183-.017-.275-.017-.325 0-.65.067-.942.217-.283.141-.525.35-.708.616-.183.267-.275.625-.275 1.059-.008.291.042.583.142.858.083.225.208.425.375.592.158.15.35.266.566.333.225.075.459.108.692.108.125 0 .242-.008.35-.016a.73.73 0 00.3-.042z'\r\n        fill='#FF61F6'\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const AtlassianLogo = createIcon({\r\n  displayName: \"AtlassianLogo\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <path\r\n        d='M6.427 9.239a.57.57 0 00-.798-.108.591.591 0 00-.167.209l-4.9 9.803a.586.586 0 00.524.847h6.827a.562.562 0 00.523-.324c1.474-3.043.58-7.67-2.01-10.427z'\r\n        fill='#2684FF'\r\n      />\r\n      <path\r\n        d='M10.028.318a12.932 12.932 0 00-.755 12.765l3.292 6.583a.586.586 0 00.523.324h6.826a.583.583 0 00.586-.585c0-.091-.02-.18-.06-.262L11.024.315a.552.552 0 00-.997 0v.003z'\r\n        fill='#2684FF'\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const CartIcon = createIcon({\r\n  displayName: \"CartIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <path\r\n      fill='currentColor'\r\n      d='M7.984 19.937a1.406 1.406 0 100-2.812 1.406 1.406 0 000 2.812zM17.828 19.937a1.406 1.406 0 100-2.812 1.406 1.406 0 000 2.812zM20.324 5.558a1.051 1.051 0 00-.815-.386H6.134l-.27-1.528a.703.703 0 00-.692-.581H2.359a.703.703 0 000 1.406h2.223L6.59 15.841a.703.703 0 00.692.581h11.25a.703.703 0 100-1.406H7.871l-.248-1.406h10.62a1.057 1.057 0 001.035-.848l1.266-6.328a1.055 1.055 0 00-.22-.876z'\r\n    />\r\n  ),\r\n});\r\n\r\nexport const ClockIcon = createIcon({\r\n  displayName: \"ClockIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <g>\r\n        <rect fill='none' height='24' width='24' />\r\n      </g>\r\n      <g>\r\n        <g>\r\n          <g>\r\n            <path\r\n              fill='currentColor'\r\n              d='M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10s10-4.5,10-10S17.5,2,12,2z M16.2,16.2L11,13V7h1.5v5.2l4.5,2.7L16.2,16.2z'\r\n            />\r\n          </g>\r\n        </g>\r\n      </g>\r\n    </g>\r\n  ),\r\n});\r\nexport const CreativeTimLogo = createIcon({\r\n  displayName: \"CreativeTimLogo\",\r\n  viewBox: \"0 0 100 100\",\r\n  path: (\r\n    <g\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      width='50px'\r\n      height='50px'\r\n      version='1.1'>\r\n      <g\r\n        id='logo-creative-tim-black'\r\n        stroke='none'\r\n        strokeWidth='1'\r\n        fill='none'\r\n        fillRule='evenodd'>\r\n        <g\r\n          id='icon'\r\n          transform='translate(15.000000, 19.000000)'\r\n          fill='currentColor'\r\n          fillRule='nonzero'>\r\n          <path\r\n            d='M66.4346744,1.49018376e-13 L3.56968951,1.49018376e-13 C1.59820443,1.49018376e-13 -2.98036753e-13,1.59820443 -2.98036753e-13,3.56968951 L-2.98036753e-13,33.5035241 C-2.98036753e-13,35.4750091 1.59820443,37.0732136 3.56968951,37.0732136 L16.4677598,37.0732136 L16.4677598,66.4346744 C16.4666001,67.3810129 16.8417189,68.288989 17.5104719,68.9585615 C18.1792249,69.628134 19.0867408,70.0043639 20.03308,70.0043639 L49.9669146,70.0043639 C51.9383997,70.0043639 53.5366041,68.4061595 53.5366041,66.4346744 L53.5366041,37.0863214 L66.4346744,37.0863214 C67.3810136,37.0863221 68.2885296,36.7100915 68.9572826,36.0405189 C69.6260355,35.3709464 70.0011544,34.4629704 70,33.5166319 L70,3.56968951 C70.0011544,2.62335099 69.6260355,1.71537495 68.9572826,1.04580242 C68.2885296,0.37622988 67.3810136,1.49018376e-13 66.4346744,1.49018376e-13 Z M4.13769396,4.14206323 L32.9311503,4.14206323 L32.9311503,32.9355196 L4.13769396,32.9355196 L4.13769396,4.14206323 Z M49.3989102,65.86667 L20.6054538,65.86667 L20.6054538,37.0863214 L49.3989102,37.0863214 L49.3989102,65.86667 Z M65.8623007,32.9355196 L37.0688443,32.9355196 L37.0688443,4.14206323 L65.8623007,4.14206323 L65.8623007,32.9355196 Z'\r\n            id='Shape'\r\n          />\r\n          <path\r\n            d='M23.6988934,23.3056595 C24.5142794,24.0708897 25.7898859,24.0506562 26.5805917,23.2599503 C27.3712976,22.4692445 27.3915311,21.193638 26.6263009,20.378252 L20.015603,13.767554 C19.2050095,12.9645312 17.8987889,12.9645312 17.0881954,13.767554 L10.4600204,20.378252 C9.90907005,20.8953125 9.68342943,21.6713831 9.87125954,22.4032422 C10.0590897,23.1351013 10.6305787,23.7065903 11.3624377,23.8944204 C12.0942968,24.0822505 12.8703675,23.8566099 13.387428,23.3056595 L18.5344222,18.1586654 L23.6988934,23.3056595 Z'\r\n            id='Path'\r\n          />\r\n          <path\r\n            d='M46.3185783,23.3056595 L51.4655725,18.1586654 L56.6125667,23.3056595 C57.4279526,24.0708897 58.7035592,24.0506562 59.494265,23.2599503 C60.2849709,22.4692445 60.3052044,21.193638 59.5399742,20.378252 L52.9292763,13.767554 C52.1186828,12.9645312 50.8124622,12.9645312 50.0018687,13.767554 L43.3911708,20.378252 C42.6259406,21.193638 42.6461741,22.4692445 43.43688,23.2599503 C44.2275858,24.0506562 45.5031924,24.0708897 46.3185783,23.3056595 L46.3185783,23.3056595 Z'\r\n            id='Path'\r\n          />\r\n          <path\r\n            d='M29.8508185,46.6987044 C29.0342976,45.9346441 27.7586832,45.9567597 26.9691385,46.7486649 C26.1795937,47.54057 26.1612859,48.8162446 26.9277802,49.6304812 L33.5384782,56.2368099 C33.9262423,56.6258256 34.452915,56.8444779 35.002182,56.8444779 C35.5514489,56.8444779 36.0781217,56.6258256 36.4658857,56.2368099 L43.0765837,49.6304812 C43.6002952,49.1075502 43.8052442,48.3449453 43.6142284,47.6299323 C43.4232126,46.9149194 42.8652519,46.3561259 42.1505246,46.1640439 C41.4357974,45.971962 40.6728876,46.1757734 40.1491761,46.6987044 L35.002182,51.8500678 L29.8508185,46.6987044 Z'\r\n            id='Path'\r\n          />\r\n        </g>\r\n      </g>\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const CreditIcon = createIcon({\r\n  displayName: \"CreditIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <path\r\n      fill='currentColor'\r\n      d='M1.406 17.023a2.461 2.461 0 002.461 2.46h14.766a2.461 2.461 0 002.46-2.46v-6.768H1.407v6.768zm2.9-3.34a1.318 1.318 0 011.319-1.318h2.11a1.318 1.318 0 011.318 1.318v.879a1.318 1.318 0 01-1.319 1.318H5.625a1.318 1.318 0 01-1.318-1.318v-.879zM18.633 4.014H3.867a2.46 2.46 0 00-2.46 2.461v1.143h19.687V6.475a2.46 2.46 0 00-2.461-2.46z'\r\n    />\r\n  ),\r\n});\r\n\r\nexport const DashboardLogo = createIcon({\r\n  displayName: \"DashboardLogo\",\r\n  viewBox: \"0 0 1000 257\",\r\n  path: (\r\n    <g width='998' height='257' viewBox='0 0 998 257' fill='none'>\r\n      <g clip-path='url(#clip0)'>\r\n        <path\r\n          d='M388.5 115.302C406.112 115.302 413.966 126.726 416.584 136.96L441.336 127.916C436.576 109.352 419.44 89.836 388.262 89.836C354.942 89.836 329 115.54 329 151.24C329 186.464 354.942 212.882 388.976 212.882C419.44 212.882 436.814 193.128 442.288 175.04L418.012 166.234C415.394 175.04 407.064 187.654 388.976 187.654C371.602 187.654 356.608 174.564 356.608 151.24C356.608 127.916 371.602 115.302 388.5 115.302Z'\r\n          fill='currentColor'\r\n        />\r\n        <path\r\n          d='M484.894 141.244C485.37 126.488 493.7 115.064 508.932 115.064C526.306 115.064 532.732 126.488 532.732 140.768V209.312H560.34V136.008C560.34 110.542 546.536 90.074 517.976 90.074C505.838 90.074 492.748 94.358 484.894 104.592V37H457.286V209.312H484.894V141.244Z'\r\n          fill='currentColor'\r\n        />\r\n        <path\r\n          d='M577.29 177.896C577.29 196.222 592.284 212.882 616.56 212.882C635.362 212.882 646.786 203.362 652.26 194.556C652.26 203.838 653.212 208.598 653.45 209.312H679.154C678.916 208.122 677.726 201.22 677.726 190.748V133.152C677.726 110.066 664.16 89.836 628.46 89.836C599.9 89.836 581.812 107.686 579.67 127.678L604.898 133.39C606.088 121.728 614.18 112.446 628.698 112.446C643.93 112.446 650.594 120.3 650.594 130.058C650.594 134.104 648.69 137.436 642.026 138.388L612.276 142.91C592.522 145.766 577.29 157.19 577.29 177.896ZM621.796 191.224C610.848 191.224 604.898 184.084 604.898 176.23C604.898 166.71 611.8 161.95 620.368 160.522L650.594 156V161.236C650.594 183.846 637.266 191.224 621.796 191.224Z'\r\n          fill='currentColor'\r\n        />\r\n        <path\r\n          d='M810.108 93.406H773.456L728.95 140.292V37H701.58V209.312H728.95V176.944L743.23 161.95L777.264 209.312H811.06L762.508 142.434L810.108 93.406Z'\r\n          fill='currentColor'\r\n        />\r\n        <path\r\n          d='M889.349 92.692C888.159 92.454 885.303 91.978 881.971 91.978C866.739 91.978 853.887 99.356 848.413 111.97V93.406H821.519V209.312H849.127V154.096C849.127 132.438 858.885 120.062 880.305 120.062C883.161 120.062 886.255 120.3 889.349 120.776V92.692Z'\r\n          fill='currentColor'\r\n        />\r\n        <path\r\n          d='M895.968 177.896C895.968 196.222 910.962 212.882 935.238 212.882C954.04 212.882 965.464 203.362 970.938 194.556C970.938 203.838 971.89 208.598 972.128 209.312H997.832C997.594 208.122 996.404 201.22 996.404 190.748V133.152C996.404 110.066 982.838 89.836 947.138 89.836C918.578 89.836 900.49 107.686 898.348 127.678L923.576 133.39C924.766 121.728 932.858 112.446 947.376 112.446C962.608 112.446 969.272 120.3 969.272 130.058C969.272 134.104 967.368 137.436 960.704 138.388L930.954 142.91C911.2 145.766 895.968 157.19 895.968 177.896ZM940.474 191.224C929.526 191.224 923.576 184.084 923.576 176.23C923.576 166.71 930.478 161.95 939.046 160.522L969.272 156V161.236C969.272 183.846 955.944 191.224 940.474 191.224Z'\r\n          fill='currentColor'\r\n        />\r\n        <rect width='257' height='257' rx='128.5' fill='#4FD1C5' />\r\n        <path\r\n          d='M69.5584 133.985L157.15 46.9959C158.787 45.3708 161.42 47.3484 160.315 49.3729L127.714 109.125C126.987 110.457 127.951 112.083 129.47 112.083H185.809C187.624 112.083 188.501 114.306 187.174 115.545L88.4456 207.687C86.6753 209.339 84.0405 207.011 85.4617 205.051L132.197 140.578C133.156 139.256 132.211 137.404 130.578 137.404H70.9677C69.1826 137.404 68.2917 135.243 69.5584 133.985Z'\r\n          fill='white'\r\n        />\r\n      </g>\r\n      <defs>\r\n        <linearGradient\r\n          id='paint0_linear'\r\n          x1='128.5'\r\n          y1='0'\r\n          x2='128.5'\r\n          y2='257'\r\n          gradientUnits='userSpaceOnUse'>\r\n          <stop stopColor='#7BCBD4' />\r\n          <stop offset='1' stopColor='#29C6B7' />\r\n        </linearGradient>\r\n        <clipPath id='clip0'>\r\n          <rect width='997.832' height='257' fill='white' />\r\n        </clipPath>\r\n      </defs>\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const DashboardLogoWhite = createIcon({\r\n  displayName: \"DashboardLogo\",\r\n  viewBox: \"0 0 163.5 42\",\r\n  path: (\r\n    <g fill='none'>\r\n      <path\r\n        d='M63.452 19.292c2.877 0 4.16 1.911 4.587 3.623l4.043-1.513c-.777-3.106-3.576-6.371-8.668-6.371-5.443 0-9.68 4.3-9.68 10.274 0 5.893 4.237 10.313 9.796 10.313 4.976 0 7.813-3.305 8.707-6.331l-3.965-1.473c-.427 1.473-1.788 3.583-4.742 3.583-2.837 0-5.286-2.19-5.286-6.092 0-3.903 2.449-6.013 5.208-6.013zM79.196 23.632c.078-2.469 1.438-4.38 3.926-4.38 2.838 0 3.887 1.911 3.887 4.3v11.47h4.51V22.755c0-4.26-2.255-7.685-6.92-7.685-1.982 0-4.12.716-5.403 2.429V6.19h-4.509v28.831h4.51V23.632zM94.287 29.765c0 3.066 2.449 5.853 6.414 5.853 3.071 0 4.936-1.592 5.83-3.066 0 1.553.156 2.35.195 2.47h4.198c-.039-.2-.233-1.355-.233-3.107v-9.637c0-3.862-2.216-7.247-8.047-7.247-4.664 0-7.619 2.986-7.968 6.332l4.12.955c.194-1.951 1.516-3.504 3.887-3.504 2.488 0 3.576 1.314 3.576 2.947 0 .677-.311 1.234-1.399 1.393l-4.859.757c-3.226.478-5.714 2.39-5.714 5.854zm7.269 2.23c-1.788 0-2.76-1.195-2.76-2.509 0-1.593 1.127-2.39 2.527-2.628l4.936-.757v.876c0 3.783-2.176 5.018-4.703 5.018zM132.312 15.628h-5.986l-7.269 7.845V6.191h-4.47v28.83h4.47v-5.416l2.332-2.508 5.559 7.924h5.52l-7.93-11.19 7.774-8.203zM145.254 15.509a6.3 6.3 0 00-1.205-.12c-2.487 0-4.587 1.235-5.481 3.345v-3.106h-4.392v19.393h4.509v-9.238c0-3.624 1.594-5.695 5.092-5.695.467 0 .972.04 1.477.12v-4.7zM146.335 29.765c0 3.066 2.449 5.853 6.414 5.853 3.071 0 4.937-1.592 5.831-3.066 0 1.553.156 2.35.194 2.47h4.199c-.039-.2-.234-1.355-.234-3.107v-9.637c0-3.862-2.215-7.247-8.046-7.247-4.665 0-7.619 2.986-7.969 6.332l4.121.955c.194-1.951 1.516-3.504 3.887-3.504 2.488 0 3.576 1.314 3.576 2.947 0 .677-.311 1.234-1.399 1.393l-4.859.757c-3.227.478-5.715 2.39-5.715 5.854zm7.269 2.23c-1.788 0-2.759-1.195-2.759-2.509 0-1.593 1.127-2.39 2.526-2.628l4.937-.757v.876c0 3.783-2.177 5.018-4.704 5.018zM41.975 21.5C41.975 9.626 32.578 0 20.987 0 9.398 0 0 9.626 0 21.5S9.396 43 20.988 43c11.59 0 20.987-9.626 20.987-21.5z'\r\n        fill='#fff'\r\n      />\r\n      <path\r\n        d='M11.36 22.418L25.668 7.863c.267-.272.697.06.517.398l-5.325 9.997c-.119.223.039.495.287.495h9.202c.296 0 .44.372.223.58L14.446 34.748c-.29.277-.72-.113-.488-.44l7.633-10.788c.157-.221.003-.531-.264-.531H11.59c-.292 0-.437-.362-.23-.572z'\r\n        fill='#3BCBBE'\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const DocumentIcon = createIcon({\r\n  displayName: \"DocumentIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <path\r\n        fill='currentColor'\r\n        d='M18.809 10.344h-6.153a2.11 2.11 0 01-2.11-2.11V2.083a.176.176 0 00-.175-.176H6.328A2.812 2.812 0 003.516 4.72v14.063a2.812 2.812 0 002.812 2.812h9.844a2.812 2.812 0 002.812-2.813V10.52a.176.176 0 00-.175-.176z'\r\n      />\r\n      <path\r\n        fill='currentColor'\r\n        d='M18.423 8.789l-6.32-6.32a.088.088 0 00-.15.062v5.705a.703.703 0 00.703.703h5.705a.088.088 0 00.062-.15z'\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const GlobeIcon = createIcon({\r\n  displayName: \"GlobeIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <path\r\n        stroke='currentColor'\r\n        fill='transparent'\r\n        d='M11.25 2.109a9.14 9.14 0 100 18.281 9.14 9.14 0 000-18.281z'\r\n        strokeWidth='.75'\r\n        strokeMiterlimit='10'\r\n      />\r\n      <path\r\n        stroke='currentColor'\r\n        fill='transparent'\r\n        d='M11.25 2.109C8.698 2.109 6.3 6.2 6.3 11.249c0 5.048 2.4 9.14 4.951 9.14 2.552 0 4.951-4.092 4.951-9.14 0-5.048-2.399-9.14-4.95-9.14z'\r\n        strokeWidth='.75'\r\n        strokeMiterlimit='10'\r\n      />\r\n      <path\r\n        stroke='currentColor'\r\n        fill='transparent'\r\n        d='M5.156 5.156C6.836 6.349 8.952 7.06 11.25 7.06c2.298 0 4.414-.711 6.094-1.904'\r\n      />\r\n      <path\r\n        stroke='currentColor'\r\n        fill='transparent'\r\n        d='M5.156 5.156C6.836 6.349 8.952 7.06 11.25 7.06c2.298 0 4.414-.711 6.094-1.904M17.344 17.344c-1.68-1.193-3.796-1.904-6.094-1.904-2.298 0-4.413.711-6.094 1.904'\r\n        strokeWidth='.75'\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n      />\r\n      <path\r\n        stroke='currentColor'\r\n        fill='transparent'\r\n        d='M11.25 2.109v18.28M20.39 11.249H2.11'\r\n        strokeWidth='.75'\r\n        strokeMiterlimit='10'\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const HelpIcon = createIcon({\r\n  displayName: \"HelpIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <path\r\n      fill='currentColor'\r\n      d='M11.25 0C5.04 0 0 5.04 0 11.25S5.04 22.5 11.25 22.5 22.5 17.46 22.5 11.25 17.46 0 11.25 0zm-.352 17.813a1.172 1.172 0 110-2.344 1.172 1.172 0 010 2.344zm1.96-5.977c-.95.637-1.08 1.222-1.08 1.758a.82.82 0 11-1.641 0c0-1.284.59-2.305 1.806-3.121 1.13-.758 1.768-1.239 1.768-2.295 0-.718-.41-1.264-1.26-1.668-.199-.095-.644-.187-1.191-.18-.687.008-1.22.172-1.63.503-.775.623-.84 1.302-.84 1.312a.821.821 0 11-1.642-.08c.007-.142.106-1.425 1.452-2.507.698-.562 1.585-.854 2.636-.866.745-.01 1.444.117 1.918.34 1.418.672 2.198 1.79 2.198 3.146 0 1.982-1.325 2.872-2.494 3.658z'\r\n    />\r\n  ),\r\n});\r\n\r\nexport const HomeIcon = createIcon({\r\n  displayName: \"HomeIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <path\r\n        fill='currentColor'\r\n        d='M11.494 4.951a.351.351 0 00-.486 0l-8.09 7.729a.352.352 0 00-.109.254v7.254a1.406 1.406 0 001.405 1.406h4.223a.703.703 0 00.704-.703v-5.976a.351.351 0 01.351-.352h3.516a.351.351 0 01.351.352v5.976a.703.703 0 00.704.703h4.22a1.407 1.407 0 001.407-1.406v-7.254a.35.35 0 00-.108-.254L11.494 4.95z'\r\n      />\r\n      <path\r\n        fill='currentColor'\r\n        d='M21.574 11.23l-3.287-3.144V3.314a.703.703 0 00-.703-.703h-2.11a.703.703 0 00-.703.703V4.72l-2.545-2.434c-.239-.24-.593-.378-.976-.378-.38 0-.734.138-.972.379L.93 11.23a.717.717 0 00-.058.983.703.703 0 001.018.046l9.119-8.713a.352.352 0 01.486 0l9.12 8.713a.703.703 0 00.992-.019c.27-.28.248-.74-.033-1.01z'\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const InvisionLogo = createIcon({\r\n  displayName: \"InvisionLogo\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g clip-path='url(#clip0)'>\r\n      <path\r\n        d='M18.687 0H2.313A1.813 1.813 0 00.5 1.811v16.374C.5 19.188 1.312 20 2.313 20h16.374a1.813 1.813 0 001.813-1.813V1.812A1.813 1.813 0 0018.687 0z'\r\n        fill='#DC395F'\r\n      />\r\n      <path\r\n        d='M7.184 6.293c.665 0 1.222-.522 1.222-1.204 0-.683-.557-1.204-1.222-1.204-.665 0-1.222.521-1.222 1.204 0 .682.557 1.204 1.222 1.204zM4.65 12.739a4.134 4.134 0 00-.108.905c0 1.06.575 1.764 1.797 1.764 1.013 0 1.834-.602 2.426-1.573l-.361 1.449h2.012l1.15-4.612c.287-1.168.844-1.774 1.689-1.774.665 0 1.078.413 1.078 1.096 0 .197-.018.413-.09.646l-.593 2.12c-.09.306-.126.611-.126.899 0 1.006.593 1.742 1.833 1.742 1.06 0 1.904-.682 2.371-2.317l-.79-.305c-.395 1.095-.737 1.293-1.006 1.293-.27 0-.414-.18-.414-.538 0-.162.037-.342.09-.558l.575-2.065c.144-.485.198-.915.198-1.31 0-1.546-.934-2.352-2.066-2.352-1.06 0-2.138.956-2.677 1.962l.395-1.806H8.962L8.53 8.996h1.438l-.885 3.544c-.695 1.545-1.972 1.57-2.132 1.534-.264-.06-.432-.159-.432-.5 0-.198.036-.482.126-.823l1.348-5.346H4.579l-.431 1.591h1.419L4.65 12.74'\r\n        fill='#fff'\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const JiraLogo = createIcon({\r\n  displayName: \"JiraLogo\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g clip-path='url(#clip0)'>\r\n      <path\r\n        d='M20.26 10.42l-8.863-8.93-.86-.865-6.67 6.722L.814 10.42a.827.827 0 000 1.162l6.096 6.14 3.627 3.654 6.67-6.722.105-.104 2.947-2.964a.824.824 0 000-1.166zm-9.722 3.649L7.493 11l3.045-3.068L13.582 11l-3.044 3.068z'\r\n        fill='#2684FF'\r\n      />\r\n      <path\r\n        d='M10.537 7.932a5.184 5.184 0 01-1.502-3.637A5.185 5.185 0 0110.515.65L3.852 7.36l3.626 3.654 3.06-3.082z'\r\n        fill='url(#paint0_linear)'\r\n      />\r\n      <path\r\n        d='M13.59 10.992l-3.053 3.076a5.186 5.186 0 011.502 3.653c0 1.37-.54 2.683-1.502 3.652l6.682-6.728-3.63-3.653z'\r\n        fill='url(#paint1_linear)'\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const MastercardIcon = createIcon({\r\n  displayName: \"MastercardIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <svg\r\n      width='24'\r\n      height='20'\r\n      viewBox='0 0 21 15'\r\n      fill='none'\r\n      xmlns='http://www.w3.org/2000/svg'>\r\n      <circle cx='6.63158' cy='7.49999' r='6.63158' fill='#EB001B' />\r\n      <circle cx='14.3686' cy='7.49999' r='6.63158' fill='#F79E1B' />\r\n    </svg>\r\n  ),\r\n});\r\n\r\nexport const PayPalIcon = createIcon({\r\n  displayName: \"PayPalIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <path\r\n        fill='currentColor'\r\n        d='M16.179 2.532C15.142 1.357 13.265.854 10.863.854H3.895a.997.997 0 00-.986.834L.007 19.945a.595.595 0 00.591.686H4.9l1.08-6.8-.033.215a.993.993 0 01.983-.834h2.044c4.017 0 7.16-1.619 8.08-6.3.027-.14.07-.406.07-.406.262-1.732-.001-2.907-.945-3.974z'\r\n      />\r\n      <path\r\n        fill='currentColor'\r\n        d='M18.213 7.393c-.998 4.61-4.184 7.048-9.24 7.048H7.142L5.773 23.1h2.973a.87.87 0 00.862-.731l.035-.184.684-4.297.044-.237a.87.87 0 01.86-.731h.544c3.514 0 6.264-1.416 7.068-5.51.322-1.644.166-3.021-.63-4.017z'\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const PersonIcon = createIcon({\r\n  displayName: \"PersonIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <path\r\n      fill='currentColor'\r\n      d='M14.618 3.338c-.855-.924-2.05-1.432-3.368-1.432-1.325 0-2.524.505-3.375 1.423-.86.928-1.28 2.188-1.181 3.55.195 2.686 2.239 4.87 4.556 4.87s4.358-2.184 4.556-4.87c.1-1.349-.322-2.607-1.188-3.541zM18.984 21.592H3.515a1.363 1.363 0 01-1.063-.489 1.552 1.552 0 01-.316-1.279c.371-2.058 1.529-3.786 3.348-5 1.616-1.076 3.664-1.67 5.766-1.67s4.15.594 5.765 1.67c1.82 1.214 2.977 2.942 3.348 5 .085.471-.03.937-.315 1.279a1.362 1.362 0 01-1.064.49z'\r\n    />\r\n  ),\r\n});\r\n\r\nexport const ProfileIcon = createIcon({\r\n  displayName: \"ProfileIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <path d='M0 0h24v24H0V0z' fill='transparent' />\r\n      <path\r\n        fill='currentColor'\r\n        d='M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v1c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-1c0-2.66-5.33-4-8-4z'\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const RocketIcon = createIcon({\r\n  displayName: \"RocketIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <path\r\n        fill='currentColor'\r\n        d='M20.99 2.182a.209.209 0 00-.156-.16c-2.574-.63-8.521 1.613-11.743 4.833a13.93 13.93 0 00-1.566 1.85c-.994-.087-1.987-.014-2.834.355-2.39 1.052-3.085 3.796-3.279 4.976a.424.424 0 00.464.492l3.837-.423c.002.29.02.578.052.866.02.2.108.386.25.527l1.486 1.482a.86.86 0 00.528.25c.286.033.573.05.86.053l-.42 3.832a.424.424 0 00.492.464c1.178-.19 3.927-.885 4.972-3.274.37-.847.445-1.836.36-2.824a13.96 13.96 0 001.855-1.567c3.232-3.216 5.462-9.03 4.842-11.732zm-8.067 7.896a2.11 2.11 0 112.983-2.984 2.11 2.11 0 01-2.983 2.984z'\r\n      />\r\n      <path\r\n        fill='currentColor'\r\n        d='M7.4 18.054c-.24.241-.627.335-1.092.416-1.044.178-1.967-.725-1.779-1.78.072-.401.283-.962.415-1.094a.192.192 0 00-.16-.328 2.636 2.636 0 00-1.544.753c-1.033 1.034-1.13 4.87-1.13 4.87s3.838-.097 4.872-1.13c.417-.417.682-.961.752-1.546.017-.184-.207-.293-.334-.16z'\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const SettingsIcon = createIcon({\r\n  displayName: \"SettingsIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  // path can also be an array of elements, if you have multiple paths, lines, shapes, etc.\r\n  path: (\r\n    <g>\r\n      <path d='M0,0h24v24H0V0z' fill='none' />\r\n      <path\r\n        fill='currentColor'\r\n        d='M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z'\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const SlackLogo = createIcon({\r\n  displayName: \"SlackLogo\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g clip-path='url(#clip0)' fillRule='evenodd' clipRule='evenodd'>\r\n      <path\r\n        d='M7.832.5c-1.105 0-2 .919-1.999 2.05 0 1.13.895 2.048 2 2.05h2V2.55c.001-1.13-.894-2.048-2-2.05zm0 5.467H2.5c-1.106 0-2.001.918-2 2.05-.002 1.13.894 2.048 2 2.05h5.332c1.106-.001 2.002-.919 2-2.05.002-1.132-.894-2.05-2-2.05z'\r\n        fill='#36C5F0'\r\n      />\r\n      <path\r\n        d='M20.5 8.016c0-1.13-.895-2.048-2-2.05-1.106.002-2.002.92-2 2.05v2.05h2c1.105 0 2-.918 2-2.05zm-5.334 0V2.55c.001-1.13-.893-2.048-2-2.05-1.105 0-2 .919-2 2.05v5.466c-.001 1.131.894 2.049 2 2.05 1.106 0 2.001-.918 2-2.05z'\r\n        fill='#2EB67D'\r\n      />\r\n      <path\r\n        d='M13.166 21c1.106 0 2.001-.919 2-2.05.001-1.13-.894-2.048-2-2.05h-2v2.05c-.001 1.13.894 2.048 2 2.05zm0-5.467h5.333c1.106-.001 2.002-.92 2-2.05.002-1.131-.893-2.049-1.999-2.05h-5.333c-1.106 0-2.001.918-2 2.05-.001 1.13.893 2.049 1.999 2.05z'\r\n        fill='#ECB22E'\r\n      />\r\n      <path\r\n        d='M.5 13.483c-.001 1.13.895 2.049 2 2.05 1.106-.001 2.001-.92 2-2.05v-2.05h-2c-1.105.001-2.001.919-2 2.05zm5.333 0v5.467c-.001 1.13.894 2.048 2 2.05 1.105 0 2-.919 2-2.05v-5.465c.002-1.131-.894-2.05-2-2.05-1.106 0-2 .917-2 2.048z'\r\n        fill='#E01E5A'\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const SpotifyLogo = createIcon({\r\n  displayName: \"SpotifyLogo\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g clip-path='url(#clip0)'>\r\n      <path\r\n        d='M10.5 0C4.977 0 .5 4.477.5 10s4.477 10 10 10 10-4.477 10-10c0-5.522-4.477-10-10-10zm4.586 14.422a.623.623 0 01-.857.208c-2.348-1.435-5.304-1.76-8.785-.964a.623.623 0 11-.277-1.216c3.808-.87 7.076-.495 9.712 1.115.294.181.387.564.207.857zm1.223-2.722a.78.78 0 01-1.072.257c-2.687-1.652-6.786-2.13-9.965-1.166a.78.78 0 01-.973-.519.781.781 0 01.52-.972c3.632-1.102 8.147-.569 11.233 1.329a.78.78 0 01.258 1.072zm.106-2.835C13.19 6.95 7.875 6.775 4.797 7.708a.935.935 0 11-.543-1.79c3.533-1.072 9.404-.865 13.115 1.338a.935.935 0 01-.954 1.609z'\r\n        fill='#2EBD59'\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const SupportIcon = createIcon({\r\n  // Doesn't display the full icon without w and h being specified\r\n  displayName: \"BuildIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <path\r\n      fill='currentColor'\r\n      d='M20.885 5.547a.703.703 0 00-1.122-.176l-2.7 2.702a.708.708 0 01-.995 0l-1.167-1.169a.702.702 0 010-.994l2.689-2.69a.704.704 0 00-.21-1.138c-2.031-.908-4.566-.435-6.164 1.152-1.358 1.348-1.763 3.455-1.11 5.78a.698.698 0 01-.197.703L2.593 16.4a2.82 2.82 0 103.981 3.983l6.754-7.332a.699.699 0 01.693-.2 7.885 7.885 0 002.03.279c1.469 0 2.757-.475 3.686-1.39 1.72-1.695 1.983-4.57 1.148-6.192zM4.623 19.901a1.407 1.407 0 11-.305-2.797 1.407 1.407 0 01.305 2.797z'\r\n    />\r\n  ),\r\n});\r\n\r\nexport const StatsIcon = createIcon({\r\n  displayName: \"StatsIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <path\r\n      fill='currentColor'\r\n      d='M4.57 22.297H3.164a1.055 1.055 0 01-1.055-1.054v-6.328a1.055 1.055 0 011.055-1.055H4.57a1.055 1.055 0 011.055 1.055v6.328a1.055 1.055 0 01-1.055 1.054zM14.414 22.296h-1.406a1.055 1.055 0 01-1.055-1.055V10.695a1.055 1.055 0 011.055-1.055h1.406a1.055 1.055 0 011.055 1.055V21.24a1.055 1.055 0 01-1.055 1.055zM19.336 22.297H17.93a1.055 1.055 0 01-1.055-1.055V5.773A1.055 1.055 0 0117.93 4.72h1.406a1.055 1.055 0 011.055 1.054v15.47a1.055 1.055 0 01-1.055 1.054zM9.492 22.297H8.086a1.055 1.055 0 01-1.055-1.055V2.257a1.055 1.055 0 011.055-1.054h1.406a1.055 1.055 0 011.055 1.054v18.985a1.055 1.055 0 01-1.055 1.055z'\r\n    />\r\n  ),\r\n});\r\n\r\nexport const WalletIcon = createIcon({\r\n  displayName: \"WalletIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <g>\r\n      <path\r\n        fill='currentColor'\r\n        d='M4.447 4.818h14.062c.164 0 .328.01.491.031a2.9 2.9 0 00-3.406-2.441L4.03 4.382h-.013a2.9 2.9 0 00-1.805 1.149 3.848 3.848 0 012.236-.713zM18.51 5.875H4.446a2.816 2.816 0 00-2.813 2.812v8.438a2.816 2.816 0 002.813 2.812h14.062a2.815 2.815 0 002.813-2.812V8.687a2.815 2.815 0 00-2.813-2.812zm-2.088 8.437a1.406 1.406 0 110-2.811 1.406 1.406 0 010 2.811z'\r\n      />\r\n      <path\r\n        fill='currentColor'\r\n        d='M1.656 11.651V7.28c0-.952.528-2.549 2.358-2.895 1.553-.291 3.091-.291 3.091-.291s1.011.703.176.703-.813 1.077 0 1.077 0 1.032 0 1.032L4.007 10.62l-2.35 1.032z'\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nexport const VisaIcon = createIcon({\r\n  displayName: \"VisaIcon\",\r\n  viewBox: \"0 0 24 24\",\r\n  path: (\r\n    <svg\r\n      width='26'\r\n      height='20'\r\n      viewBox='0 0 30 9'\r\n      fill='none'\r\n      xmlns='http://www.w3.org/2000/svg'>\r\n      <path\r\n        fillRule='evenodd'\r\n        clipRule='evenodd'\r\n        d='M12.6708 2.96349C12.6568 4.15055 13.653 4.81298 14.4034 5.20684C15.1744 5.61099 15.4333 5.87013 15.4304 6.23147C15.4245 6.78459 14.8153 7.02862 14.2452 7.03812C13.2505 7.05475 12.6723 6.74889 12.2125 6.51753L11.8542 8.32341C12.3155 8.55247 13.1696 8.75217 14.0554 8.76087C16.1345 8.76087 17.4947 7.65543 17.5021 5.94145C17.5102 3.76625 14.7087 3.64579 14.7278 2.67348C14.7344 2.37871 14.9956 2.06408 15.568 1.98406C15.8512 1.94368 16.6332 1.91274 17.5198 2.35252L17.8677 0.605286C17.391 0.418253 16.7782 0.239136 16.0153 0.239136C14.0583 0.239136 12.6819 1.35962 12.6708 2.96349ZM21.2115 0.389687C20.8319 0.389687 20.5118 0.628245 20.3691 0.99433L17.3991 8.63249H19.4767L19.8901 7.40183H22.429L22.6689 8.63249H24.5L22.9021 0.389687H21.2115ZM21.5021 2.61641L22.1016 5.7116H20.4596L21.5021 2.61641ZM10.1518 0.389687L8.51418 8.63249H10.4939L12.1308 0.389687H10.1518ZM7.22303 0.389687L5.16233 6.00003L4.32878 1.22966C4.23097 0.697187 3.84472 0.389687 3.41579 0.389687H0.0471011L0 0.629037C0.691574 0.790671 1.47729 1.0514 1.95326 1.33033C2.24457 1.50067 2.32775 1.64964 2.42336 2.05458L4.00214 8.63249H6.0945L9.3021 0.389687H7.22303Z'\r\n        fill='#4318FF'\r\n      />\r\n    </svg>\r\n  ),\r\n});\r\n\r\nexport const ArgonLogoDark = createIcon({\r\n  displayName: \"ArgonLogoDark\",\r\n  viewBox: \"0 0 74 27\",\r\n  path: (\r\n    <svg width='74' height='27' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n      <path\r\n        fillRule='evenodd'\r\n        clipRule='evenodd'\r\n        d='M2.72 15.552.465 11.643 3.1 7.1l5.254-.01 2.256 3.908 4.208.002 2.603 4.507-2.651 4.518-4.194.024-2.117 3.62-5.239.036-2.602-4.507 2.103-3.645Zm11.178 2.96 1.772-3.003-1.745-3.022-3.487.033-1.585 2.721 1.896 3.283 3.149-.011Zm-6.312 3.644 1.585-2.72-1.895-3.284-3.15.012-1.772 3.003L4.1 22.19l3.487-.034Zm-.153-7.553 1.772-3.004L7.46 8.577l-3.487.033L2.2 11.613l1.745 3.023 3.488-.034Z'\r\n        fill='#1A202C'\r\n      />\r\n      <path\r\n        d='M29.076 10.956c-2.088 0-3.78 1.044-4.356 2.664l2.322 1.116c.288-.882 1.08-1.44 2.034-1.44.9 0 1.512.486 1.512 1.224v.324l-3.078.648c-1.998.414-3.15 1.368-3.15 2.826 0 1.638 1.404 2.898 3.636 2.898 1.134 0 2.034-.342 2.772-1.116v.9h2.52v-6.48c0-2.106-1.71-3.564-4.212-3.564Zm-.666 8.28c-.774 0-1.26-.36-1.26-.954 0-.45.288-.792.846-.918l2.592-.576v.468c0 1.098-.954 1.98-2.178 1.98Zm11.14-8.172c-1.206 0-2.16.36-2.664 1.584v-1.476h-2.52V21h2.7v-5.292c0-1.458.9-2.304 2.214-2.304h1.296v-2.34H39.55Zm9.023.108v1.044c-.684-.792-1.692-1.26-2.97-1.26-2.502 0-4.842 1.782-4.842 4.752 0 2.898 2.232 4.806 4.896 4.806 1.098 0 2.052-.342 2.736-.99v.954c0 1.278-1.008 2.088-2.358 2.088-1.188 0-2.016-.63-2.322-1.692l-2.304 1.134c.576 1.8 2.376 2.988 4.626 2.988 2.736 0 5.058-1.764 5.058-4.518v-9.306h-2.52ZM46 18.066c-1.386 0-2.448-.954-2.448-2.322 0-1.404 1.098-2.358 2.448-2.358 1.35 0 2.394.954 2.394 2.358 0 1.368-1.008 2.322-2.394 2.322Zm11.242 3.15c2.916 0 5.256-2.16 5.256-5.13 0-2.97-2.34-5.13-5.256-5.13-2.916 0-5.256 2.16-5.256 5.13 0 2.97 2.34 5.13 5.256 5.13Zm0-2.43c-1.476 0-2.466-1.116-2.466-2.7 0-1.566.99-2.7 2.466-2.7 1.476 0 2.466 1.134 2.466 2.7 0 1.584-.99 2.7-2.466 2.7Zm11.43-7.83c-1.242 0-2.25.45-2.754 1.404v-1.188h-2.52V21h2.7v-5.742c0-1.134.739-1.872 1.8-1.872 1.063 0 1.8.738 1.8 1.872V21h2.7v-6.318c0-2.232-1.512-3.726-3.726-3.726Z'\r\n        fill='#1A202C'\r\n      />\r\n    </svg>\r\n  ),\r\n});\r\n\r\nexport const ArgonLogoLight = createIcon({\r\n  displayName: \"ArgonLogoLight\",\r\n  viewBox: \"0 0 74 27\",\r\n  path: (\r\n    <svg width='74' height='27' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n      <path\r\n        fillRule='evenodd'\r\n        clipRule='evenodd'\r\n        d='M2.256 15.552 0 11.643 2.636 7.1l5.253-.01 2.256 3.908 4.209.002 2.602 4.507-2.65 4.518-4.194.024-2.118 3.62-5.238.036-2.602-4.507 2.102-3.645Zm11.177 2.96 1.773-3.003-1.745-3.022-3.488.033-1.584 2.721 1.895 3.283 3.15-.011Zm-6.311 3.644 1.585-2.72-1.896-3.284-3.149.012-1.772 3.003 1.745 3.023 3.487-.034Zm-.154-7.553 1.773-3.004-1.745-3.022-3.488.033-1.772 3.003 1.745 3.023 3.487-.034Z'\r\n        fill='#fff'\r\n      />\r\n      <path\r\n        d='M28.612 10.956c-2.088 0-3.78 1.044-4.356 2.664l2.322 1.116c.288-.882 1.08-1.44 2.034-1.44.9 0 1.512.486 1.512 1.224v.324l-3.078.648c-1.998.414-3.15 1.368-3.15 2.826 0 1.638 1.404 2.898 3.636 2.898 1.134 0 2.034-.342 2.772-1.116v.9h2.52v-6.48c0-2.106-1.71-3.564-4.212-3.564Zm-.666 8.28c-.774 0-1.26-.36-1.26-.954 0-.45.288-.792.846-.918l2.592-.576v.468c0 1.098-.954 1.98-2.178 1.98Zm11.14-8.172c-1.206 0-2.16.36-2.664 1.584v-1.476h-2.52V21h2.7v-5.292c0-1.458.9-2.304 2.214-2.304h1.296v-2.34h-1.026Zm9.023.108v1.044c-.684-.792-1.692-1.26-2.97-1.26-2.502 0-4.842 1.782-4.842 4.752 0 2.898 2.232 4.806 4.896 4.806 1.098 0 2.052-.342 2.736-.99v.954c0 1.278-1.008 2.088-2.358 2.088-1.188 0-2.016-.63-2.322-1.692l-2.304 1.134c.576 1.8 2.376 2.988 4.626 2.988 2.736 0 5.058-1.764 5.058-4.518v-9.306h-2.52Zm-2.574 6.894c-1.386 0-2.448-.954-2.448-2.322 0-1.404 1.098-2.358 2.448-2.358 1.35 0 2.394.954 2.394 2.358 0 1.368-1.008 2.322-2.394 2.322Zm11.242 3.15c2.916 0 5.256-2.16 5.256-5.13 0-2.97-2.34-5.13-5.256-5.13-2.916 0-5.256 2.16-5.256 5.13 0 2.97 2.34 5.13 5.256 5.13Zm0-2.43c-1.476 0-2.466-1.116-2.466-2.7 0-1.566.99-2.7 2.466-2.7 1.476 0 2.466 1.134 2.466 2.7 0 1.584-.99 2.7-2.466 2.7Zm11.43-7.83c-1.242 0-2.25.45-2.754 1.404v-1.188h-2.52V21h2.7v-5.742c0-1.134.738-1.872 1.8-1.872s1.8.738 1.8 1.872V21h2.7v-6.318c0-2.232-1.512-3.726-3.726-3.726Z'\r\n        fill='#fff'\r\n      />\r\n    </svg>\r\n  ),\r\n});\r\n\r\nexport const ChakraLogoDark = createIcon({\r\n  displayName: \"ChakraLogoDark\",\r\n  viewBox: \"0 0 82 21\",\r\n  path: (\r\n    <svg width='82' height='21' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n      <path\r\n        d='M31.92 9.422c1.448 0 2.093.933 2.308 1.77l2.034-.74c-.391-1.517-1.8-3.111-4.36-3.111-2.739 0-4.87 2.1-4.87 5.017 0 2.878 2.131 5.037 4.928 5.037 2.503 0 3.93-1.614 4.38-3.092l-1.994-.72c-.215.72-.9 1.75-2.386 1.75-1.428 0-2.66-1.069-2.66-2.975 0-1.906 1.232-2.936 2.62-2.936Zm7.92 2.119c.04-1.205.724-2.139 1.976-2.139 1.427 0 1.956.934 1.956 2.1v5.601h2.268v-5.99c0-2.08-1.134-3.753-3.48-3.753-.998 0-2.074.35-2.72 1.186V3.023h-2.268v14.08h2.269v-5.562Zm7.593 2.995c0 1.498 1.232 2.859 3.226 2.859 1.545 0 2.484-.778 2.934-1.497 0 .758.078 1.147.097 1.205h2.112c-.02-.097-.117-.66-.117-1.517V10.88c0-1.886-1.115-3.54-4.048-3.54-2.347 0-3.833 1.46-4.009 3.093l2.073.467c.098-.953.763-1.712 1.956-1.712 1.251 0 1.799.642 1.799 1.44 0 .33-.157.602-.704.68l-2.445.37c-1.623.233-2.874 1.166-2.874 2.858Zm3.656 1.09c-.9 0-1.388-.584-1.388-1.226 0-.778.567-1.167 1.271-1.283l2.484-.37v.428c0 1.847-1.096 2.45-2.367 2.45Zm15.473-7.994H63.55l-3.656 3.832v-8.44h-2.25v14.08h2.25v-2.645l1.173-1.226 2.796 3.87h2.777l-3.99-5.464 3.912-4.007Zm6.511-.058a3.265 3.265 0 0 0-.606-.058c-1.252 0-2.308.603-2.758 1.633V7.632H67.5v9.471h2.269v-4.512c0-1.77.802-2.78 2.562-2.78.234 0 .489.019.743.058V7.574Zm.544 6.962c0 1.498 1.232 2.859 3.226 2.859 1.545 0 2.484-.778 2.934-1.497 0 .758.078 1.147.097 1.205h2.112c-.02-.097-.117-.66-.117-1.517V10.88c0-1.886-1.115-3.54-4.048-3.54-2.347 0-3.833 1.46-4.009 3.093l2.073.467c.098-.953.763-1.712 1.956-1.712 1.251 0 1.799.642 1.799 1.44 0 .33-.157.602-.704.68l-2.445.37c-1.623.233-2.874 1.166-2.874 2.858Zm3.656 1.09c-.899 0-1.388-.584-1.388-1.226 0-.778.567-1.167 1.271-1.283l2.484-.37v.428c0 1.847-1.095 2.45-2.367 2.45Z'\r\n        fill='#374152'\r\n      />\r\n      <path\r\n        d='M21.116 10.5C21.116 4.701 16.39 0 10.558 0 4.727 0 0 4.701 0 10.5S4.727 21 10.558 21c5.831 0 10.558-4.701 10.558-10.5Z'\r\n        fill='url(#Group__a)'\r\n      />\r\n      <path\r\n        d='m5.715 10.948 7.197-7.108c.134-.133.35.029.26.194l-2.679 4.883c-.06.109.02.242.145.242h4.629c.149 0 .221.181.112.282l-8.112 7.53c-.145.134-.362-.056-.245-.216l3.84-5.268a.163.163 0 0 0-.133-.26H5.83a.163.163 0 0 1-.116-.279Z'\r\n        fill='#fff'\r\n      />\r\n      <defs>\r\n        <linearGradient\r\n          id='Group__a'\r\n          x1='10.558'\r\n          y1='0'\r\n          x2='10.558'\r\n          y2='21'\r\n          gradientUnits='userSpaceOnUse'>\r\n          <stop stopColor='#7BCBD4' />\r\n          <stop offset='1' stopColor='#29C6B7' />\r\n        </linearGradient>\r\n      </defs>\r\n    </svg>\r\n  ),\r\n});\r\n\r\nexport const ChakraLogoLight = createIcon({\r\n  displayName: \"ChakraLogoLight\",\r\n  viewBox: \"0 0 82 21\",\r\n  path: (\r\n    <svg width='82' height='21' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n      <path\r\n        d='M31.92 9.422c1.448 0 2.093.933 2.308 1.77l2.034-.74c-.391-1.517-1.799-3.111-4.36-3.111-2.738 0-4.87 2.1-4.87 5.017 0 2.878 2.132 5.037 4.928 5.037 2.503 0 3.93-1.614 4.38-3.092l-1.994-.72c-.215.72-.9 1.75-2.386 1.75-1.428 0-2.66-1.069-2.66-2.975 0-1.906 1.232-2.936 2.62-2.936Zm7.921 2.119c.04-1.205.724-2.139 1.975-2.139 1.428 0 1.956.934 1.956 2.1v5.601h2.268v-5.99c0-2.08-1.134-3.753-3.48-3.753-.998 0-2.074.35-2.719 1.186V3.023h-2.268v14.08h2.268v-5.562Zm7.592 2.995c0 1.498 1.232 2.859 3.226 2.859 1.545 0 2.484-.778 2.934-1.497 0 .758.078 1.147.097 1.205h2.112c-.02-.097-.117-.66-.117-1.517V10.88c0-1.886-1.115-3.54-4.048-3.54-2.347 0-3.833 1.46-4.009 3.093l2.073.467c.098-.953.763-1.712 1.956-1.712 1.251 0 1.799.642 1.799 1.44 0 .33-.157.602-.704.68l-2.445.37c-1.623.233-2.874 1.166-2.874 2.858Zm3.656 1.09c-.9 0-1.388-.584-1.388-1.226 0-.778.567-1.167 1.271-1.283l2.484-.37v.428c0 1.847-1.096 2.45-2.367 2.45Zm15.473-7.994h-3.011l-3.657 3.832v-8.44h-2.25v14.08h2.25v-2.646l1.173-1.225 2.796 3.87h2.777l-3.989-5.465 3.911-4.006Zm6.511-.058a3.265 3.265 0 0 0-.606-.058c-1.252 0-2.308.603-2.758 1.633V7.632H67.5v9.471h2.269v-4.512c0-1.77.802-2.78 2.562-2.78.234 0 .489.019.743.058V7.574Zm.544 6.962c0 1.498 1.231 2.859 3.226 2.859 1.545 0 2.484-.778 2.933-1.497 0 .758.079 1.147.098 1.205h2.112c-.02-.097-.117-.66-.117-1.517V10.88c0-1.886-1.115-3.54-4.048-3.54-2.347 0-3.833 1.46-4.009 3.093l2.073.467c.098-.953.763-1.712 1.956-1.712 1.251 0 1.799.642 1.799 1.44 0 .33-.157.602-.704.68l-2.445.37c-1.623.233-2.874 1.166-2.874 2.858Zm3.656 1.09c-.9 0-1.388-.584-1.388-1.226 0-.778.567-1.167 1.271-1.283l2.483-.37v.428c0 1.847-1.094 2.45-2.366 2.45ZM21.116 10.5C21.116 4.701 16.39 0 10.558 0 4.727 0 0 4.701 0 10.5S4.727 21 10.558 21c5.831 0 10.558-4.701 10.558-10.5Z'\r\n        fill='#fff'\r\n      />\r\n      <path\r\n        d='m5.715 10.948 7.197-7.108c.135-.133.351.029.26.194l-2.678 4.883a.163.163 0 0 0 .144.241h4.629c.149 0 .221.182.112.283l-8.112 7.53c-.145.134-.362-.056-.245-.216l3.84-5.268a.163.163 0 0 0-.133-.26H5.83a.163.163 0 0 1-.116-.279Z'\r\n        fill='#111C44'\r\n      />\r\n    </svg>\r\n  ),\r\n});\r\n\r\nexport const ChakraLogoBlue = createIcon({\r\n  displayName: \"ChakraLogoLight\",\r\n  viewBox: \"0 0 82 21\",\r\n  path: (\r\n    <svg width='82' height='21' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n      <path\r\n        d='M31.92 9.421c1.448 0 2.093.934 2.308 1.77l2.034-.739c-.391-1.517-1.799-3.111-4.36-3.111-2.738 0-4.87 2.1-4.87 5.017 0 2.878 2.132 5.037 4.928 5.037 2.503 0 3.93-1.614 4.38-3.092l-1.994-.72c-.215.72-.9 1.75-2.386 1.75-1.428 0-2.66-1.07-2.66-2.975 0-1.906 1.232-2.937 2.62-2.937Zm7.921 2.12c.04-1.205.724-2.139 1.975-2.139 1.428 0 1.956.934 1.956 2.1v5.601h2.268v-5.99c0-2.08-1.134-3.753-3.48-3.753-.998 0-2.074.35-2.719 1.187V3.023h-2.268v14.08h2.268v-5.562Zm7.592 2.995c0 1.498 1.232 2.859 3.226 2.859 1.545 0 2.484-.778 2.934-1.497 0 .758.078 1.147.097 1.205h2.112c-.02-.097-.117-.661-.117-1.517V10.88c0-1.886-1.115-3.54-4.048-3.54-2.347 0-3.833 1.46-4.009 3.093l2.073.466c.098-.952.763-1.71 1.956-1.71 1.251 0 1.799.64 1.799 1.438 0 .33-.157.603-.704.68l-2.445.37c-1.623.234-2.874 1.167-2.874 2.86Zm3.656 1.09c-.9 0-1.388-.584-1.388-1.226 0-.778.567-1.167 1.271-1.284l2.484-.369v.428c0 1.847-1.096 2.45-2.367 2.45Zm15.473-7.994h-3.011l-3.657 3.832v-8.44h-2.25v14.08h2.25v-2.645l1.173-1.226 2.796 3.87h2.777l-3.989-5.464 3.911-4.007Zm6.511-.058a3.265 3.265 0 0 0-.606-.058c-1.252 0-2.308.602-2.758 1.633V7.632H67.5v9.471h2.269v-4.512c0-1.77.802-2.78 2.562-2.78.234 0 .489.019.743.058V7.574Zm.544 6.962c0 1.498 1.231 2.859 3.226 2.859 1.545 0 2.484-.778 2.933-1.497 0 .758.079 1.147.098 1.205h2.112c-.02-.097-.117-.661-.117-1.517V10.88c0-1.886-1.115-3.54-4.048-3.54-2.347 0-3.833 1.46-4.009 3.093l2.073.466c.098-.952.763-1.71 1.956-1.71 1.251 0 1.799.64 1.799 1.438 0 .33-.157.603-.704.68l-2.445.37c-1.623.234-2.874 1.167-2.874 2.86Zm3.656 1.09c-.9 0-1.388-.584-1.388-1.226 0-.778.567-1.167 1.271-1.284l2.483-.369v.428c0 1.847-1.094 2.45-2.366 2.45ZM21.116 10.5C21.116 4.701 16.39 0 10.558 0 4.727 0 0 4.701 0 10.5S4.727 21 10.558 21c5.831 0 10.558-4.701 10.558-10.5Z'\r\n        fill='#fff'\r\n      />\r\n      <path\r\n        d='m5.715 10.948 7.197-7.108c.135-.133.351.03.26.194l-2.678 4.883a.163.163 0 0 0 .144.242h4.629c.149 0 .221.181.112.283L7.267 16.97c-.145.135-.362-.056-.245-.216l3.84-5.268a.163.163 0 0 0-.133-.26H5.83a.163.163 0 0 1-.116-.279Z'\r\n        fill='#3182CE'\r\n      />\r\n    </svg>\r\n  ),\r\n});\r\n","import React from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\n\r\nexport default function IconBox(props) {\r\n  const { children, ...rest } = props;\r\n\r\n  return (\r\n    <Flex\r\n      alignItems={\"center\"}\r\n      justifyContent={\"center\"}\r\n      borderRadius={\"8px\"}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Flex>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const renderTrack = ({ style, ...props }) => {\r\n  const trackStyle = {\r\n    position: \"absolute\",\r\n    maxWidth: \"100%\",\r\n    width: 6,\r\n    transition: \"opacity 200ms ease 0s\",\r\n    opacity: 0,\r\n    bottom: 2,\r\n    top: 2,\r\n    borderRadius: 3,\r\n    right: 0,\r\n  };\r\n  return <div style={{ ...style, ...trackStyle }} {...props} />;\r\n};\r\nexport const renderTrackRTL = ({ style, ...props }) => {\r\n  const trackStyle = {\r\n    position: \"absolute\",\r\n    width: 6,\r\n    transition: \"opacity 200ms ease 0s\",\r\n    opacity: 0,\r\n    bottom: 2,\r\n    top: 2,\r\n    borderRadius: 3,\r\n    right: \"unset\",\r\n    left: 0,\r\n  };\r\n  return <div style={{ ...style, ...trackStyle }} {...props} />;\r\n};\r\nexport const renderThumbDark = ({ style, ...props }) => {\r\n  const thumbStyle = {\r\n    borderRadius: 15,\r\n    background: \"rgba(222, 222, 222, .1)\",\r\n  };\r\n  return <div style={{ ...style, ...thumbStyle }} {...props} />;\r\n};\r\nexport const renderThumbLight = ({ style, ...props }) => {\r\n  const thumbStyle = {\r\n    borderRadius: 15,\r\n    background: \"rgba(48, 48, 48, .1)\",\r\n  };\r\n  return <div style={{ ...style, ...thumbStyle }} {...props} />;\r\n};\r\nexport const renderView = ({ style, ...props }) => {\r\n  const viewStyle = {\r\n    marginRight: -22,\r\n  };\r\n  return <div style={{ ...style, ...viewStyle }} {...props} />;\r\n};\r\nexport const renderViewRTL = ({ style, ...props }) => {\r\n  const viewStyle = {\r\n    marginRight: \"unset\",\r\n    marginLeft: -15,\r\n  };\r\n  return <div style={{ ...style, ...viewStyle }} {...props} />;\r\n};\r\n\r\nexport const kanbanRenderTrack = ({ style, ...props }) => {\r\n  const trackStyle = {\r\n    width: 6,\r\n    transition: \"opacity 200ms ease 0s\",\r\n    opacity: 0,\r\n    bottom: 2,\r\n    top: 2,\r\n    borderRadius: 3,\r\n    right: 0,\r\n  };\r\n  return <div style={{ ...style, ...trackStyle }} {...props} />;\r\n};\r\nexport const kanbanRenderThumbDark = ({ style, ...props }) => {\r\n  const thumbStyle = {\r\n    borderRadius: 15,\r\n    background: \"rgba(222, 222, 222, .1)\",\r\n  };\r\n  return <div style={{ ...style, ...thumbStyle }} {...props} />;\r\n};\r\nexport const kanbanRenderThumbLight = ({ style, ...props }) => {\r\n  const thumbStyle = {\r\n    borderRadius: 15,\r\n    background: \"rgba(48, 48, 48, .1)\",\r\n  };\r\n  return <div style={{ ...style, ...thumbStyle }} {...props} />;\r\n};\r\nexport const kanbanRenderView = ({ style, ...props }) => {\r\n  const viewStyle = {\r\n    position: \"relative\",\r\n    marginRight: -15,\r\n  };\r\n  return <div style={{ ...style, ...viewStyle }} {...props} />;\r\n};","import React from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\n\r\nexport function HSeparator(props) {\r\n  const { variant, children, ...rest } = props;\r\n  return (\r\n    <Flex\r\n      h=\"1px\"\r\n      w=\"100%\"\r\n      bg=\"linear-gradient(90deg, rgba(224, 225, 226, 0) 0%, #E0E1E2 49.52%, rgba(224, 225, 226, 0) 100%)\"\r\n      {...rest}\r\n    ></Flex>\r\n  );\r\n}\r\n\r\nexport function VSeparator(props) {\r\n  const { variant, children, ...rest } = props;\r\n  return (\r\n    <Flex\r\n      w=\"1px\"\r\n      bg=\"linear-gradient(0deg, rgba(224, 225, 226, 0) 0%, #E0E1E2 49.52%, rgba(224, 225, 226, 0.15625) 99.04%)\"\r\n      {...rest}\r\n    ></Flex>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Flex,\r\n  Image,\r\n  Link,\r\n  Stack,\r\n  Text,\r\n  useColorMode,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport SidebarHelpImage from \"assets/img/SidebarHelpImage.png\";\r\nimport React from \"react\";\r\n\r\nexport function SidebarHelp(props) {\r\n  // Pass the computed styles into the `__css` prop\r\n  const { children, sidebarVariant, ...rest } = props;\r\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\r\n  const { colorMode } = useColorMode();\r\n  return (\r\n    <Stack\r\n      justify='center'\r\n      direction='column'\r\n      align='center'\r\n      spacing='20px'\r\n      mb=\"22px\"\r\n      mt=\"auto\"\r\n      mx='20px'>\r\n      <Image src={SidebarHelpImage} w='110px' h=\"auto\" />\r\n      <Flex direction='column' textAlign='center'>\r\n        <Text fontSize='14px' color={textColor} fontWeight='bold'>\r\n          Need help?\r\n        </Text>\r\n        <Text fontSize='12px' color='gray.500'>\r\n          Please check our docs.\r\n        </Text>\r\n      </Flex>\r\n      <Link href='https://demos.creative-tim.com/docs-argon-dashboard-chakra' minW='100%'>\r\n        <Button variant='primary' minW='100%'>\r\n          DOCUMENTATION\r\n        </Button>\r\n      </Link>\r\n      <Link href='https://www.creative-tim.com/product/argon-dashboard-chakra-pro' minW='100%'>\r\n        \r\n          <Button\r\n            variant={colorMode === \"light\" ? 'dark' : \"navy\"}\r\n            minW='100%'\r\n            mb={window.innerWidth <= 1024 && \"12px\"}>\r\n            UPGRADE TO PRO\r\n          </Button>\r\n        \r\n      </Link>\r\n    </Stack>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\r\n// chakra imports\r\nimport {\r\n  Box,\r\n  Button,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerCloseButton,\r\n  DrawerContent,\r\n  DrawerOverlay,\r\n  Flex,\r\n  Stack,\r\n  Text,\r\n  useColorMode,\r\n  useColorModeValue,\r\n  useDisclosure\r\n} from \"@chakra-ui/react\";\r\nimport IconBox from \"components/Icons/IconBox\";\r\nimport {\r\n  renderThumbDark,\r\n  renderThumbLight,\r\n  renderTrack,\r\n  renderTrackRTL,\r\n  renderView,\r\n  renderViewRTL\r\n} from \"components/Scrollbar/Scrollbar\";\r\nimport { HSeparator } from \"components/Separator/Separator\";\r\nimport { SidebarHelp } from \"components/Sidebar/SidebarHelp\";\r\nimport React from \"react\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\n\r\n\r\n// FUNCTIONS\r\n\r\nfunction Sidebar(props) {\r\n  // to check for active links and opened collapses\r\n  let location = useLocation();\r\n  // this is for the rest of the collapses\r\n  const [state, setState] = React.useState({});\r\n  const mainPanel = React.useRef();\r\n  let variantChange = \"0.2s linear\";\r\n  // verifies if routeName is the one active (in browser input)\r\n  const activeRoute = (routeName) => {\r\n    return location.pathname === routeName ? \"active\" : \"\";\r\n  };\r\n  const { colorMode } = useColorMode;\r\n  // this function creates the links and collapses that appear in the sidebar (left menu)\r\n  const { sidebarVariant } = props;\r\n  const createLinks = (routes) => {\r\n    // Chakra Color Mode\r\n    let activeBg = useColorModeValue(\"white\", \"navy.700\");\r\n    let inactiveBg = useColorModeValue(\"white\", \"navy.700\");\r\n    let activeColor = useColorModeValue(\"gray.700\", \"white\");\r\n    let inactiveColor = useColorModeValue(\"gray.400\", \"gray.400\");\r\n    let sidebarActiveShadow = \"0px 7px 11px rgba(0, 0, 0, 0.04)\";\r\n    return routes.map((prop, key) => {\r\n      if (prop.redirect) {\r\n        return null;\r\n      }\r\n      if (prop.category) {\r\n        var st = {};\r\n        st[prop[\"state\"]] = !state[prop.state];\r\n        return (\r\n          <>\r\n            <Text\r\n              color={activeColor}\r\n              fontWeight=\"bold\"\r\n              mb={{\r\n                xl: \"6px\",\r\n              }}\r\n              mx=\"auto\"\r\n              ps={{\r\n                sm: \"10px\",\r\n                xl: \"16px\",\r\n              }}\r\n              py=\"12px\"\r\n            >\r\n              {document.documentElement.dir === \"rtl\"\r\n                ? prop.rtlName\r\n                : prop.name}\r\n            </Text>\r\n            {createLinks(prop.views)}\r\n          </>\r\n        );\r\n      }\r\n      return (\r\n        <NavLink to={prop.layout + prop.path} key={key}>\r\n          {activeRoute(prop.layout + prop.path) === \"active\" ? (\r\n            <Button\r\n              boxSize=\"initial\"\r\n              justifyContent=\"flex-start\"\r\n              alignItems=\"center\"\r\n              boxShadow={sidebarActiveShadow}\r\n              bg={activeBg}\r\n              transition={variantChange}\r\n              mb={{\r\n                xl: \"6px\",\r\n              }}\r\n              mx={{\r\n                xl: \"auto\",\r\n              }}\r\n              ps={{\r\n                sm: \"10px\",\r\n                xl: \"16px\",\r\n              }}\r\n              py=\"12px\"\r\n              borderRadius=\"15px\"\r\n              _hover=\"none\"\r\n              w=\"100%\"\r\n              _active={{\r\n                bg: \"inherit\",\r\n                transform: \"none\",\r\n                borderColor: \"transparent\",\r\n              }}\r\n              _focus={{\r\n                boxShadow: \"0px 7px 11px rgba(0, 0, 0, 0.04)\",\r\n              }}\r\n            >\r\n              <Flex>\r\n                {typeof prop.icon === \"string\" ? (\r\n                  <Icon>{prop.icon}</Icon>\r\n                ) : (\r\n                  <IconBox\r\n                    bg=\"blue.500\"\r\n                    color=\"white\"\r\n                    h=\"30px\"\r\n                    w=\"30px\"\r\n                    me=\"12px\"\r\n                    transition={variantChange}\r\n                  >\r\n                    {prop.icon}\r\n                  </IconBox>\r\n                )}\r\n                <Text color={activeColor} my=\"auto\" fontSize=\"sm\">\r\n                  {document.documentElement.dir === \"rtl\"\r\n                    ? prop.rtlName\r\n                    : prop.name}\r\n                </Text>\r\n              </Flex>\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              boxSize=\"initial\"\r\n              justifyContent=\"flex-start\"\r\n              alignItems=\"center\"\r\n              bg=\"transparent\"\r\n              mb={{\r\n                xl: \"6px\",\r\n              }}\r\n              mx={{\r\n                xl: \"auto\",\r\n              }}\r\n              py=\"12px\"\r\n              ps={{\r\n                sm: \"10px\",\r\n                xl: \"16px\",\r\n              }}\r\n              borderRadius=\"15px\"\r\n              _hover=\"none\"\r\n              w=\"100%\"\r\n              _active={{\r\n                bg: \"inherit\",\r\n                transform: \"none\",\r\n                borderColor: \"transparent\",\r\n              }}\r\n              _focus={{\r\n                boxShadow: \"none\",\r\n              }}\r\n            >\r\n              <Flex>\r\n                {typeof prop.icon === \"string\" ? (\r\n                  <Icon>{prop.icon}</Icon>\r\n                ) : (\r\n                  <IconBox\r\n                    bg={inactiveBg}\r\n                    color=\"blue.500\"\r\n                    h=\"30px\"\r\n                    w=\"30px\"\r\n                    me=\"12px\"\r\n                    transition={variantChange}\r\n                  >\r\n                    {prop.icon}\r\n                  </IconBox>\r\n                )}\r\n                <Text color={inactiveColor} my=\"auto\" fontSize=\"sm\">\r\n                  {document.documentElement.dir === \"rtl\"\r\n                    ? prop.rtlName\r\n                    : prop.name}\r\n                </Text>\r\n              </Flex>\r\n            </Button>\r\n          )}\r\n        </NavLink>\r\n      );\r\n    });\r\n  };\r\n  const { logo, routes } = props;\r\n\r\n  var links = <>{createLinks(routes)}</>;\r\n  //  BRAND\r\n  //  Chakra Color Mode\r\n  let sidebarBg = useColorModeValue(\"white\", \"navy.800\");\r\n  let sidebarRadius = \"20px\";\r\n  let sidebarMargins = \"0px\";\r\n  var brand = (\r\n    <Box pt={\"25px\"} mb=\"12px\">\r\n      {logo}\r\n      <HSeparator my=\"26px\" />\r\n    </Box>\r\n  );\r\n\r\n  // SIDEBAR\r\n  return (\r\n    <Box ref={mainPanel}>\r\n      <Box display={{ sm: \"none\", xl: \"block\" }} position=\"fixed\">\r\n        <Box\r\n          bg={sidebarBg}\r\n          transition={variantChange}\r\n          w=\"260px\"\r\n          maxW=\"260px\"\r\n          ms={{\r\n            sm: \"16px\",\r\n          }}\r\n          my={{\r\n            sm: \"16px\",\r\n          }}\r\n          h=\"calc(100vh - 32px)\"\r\n          ps=\"20px\"\r\n          pe=\"20px\"\r\n          m={sidebarMargins}\r\n          filter=\"drop-shadow(0px 5px 14px rgba(0, 0, 0, 0.05))\"\r\n          borderRadius={sidebarRadius}\r\n        >\r\n          <Scrollbars\r\n            autoHide\r\n            renderTrackVertical={\r\n              document.documentElement.dir === \"rtl\"\r\n                ? renderTrackRTL\r\n                : renderTrack\r\n            }\r\n            renderThumbVertical={useColorModeValue(\r\n              renderThumbLight,\r\n              renderThumbDark\r\n            )}\r\n            renderView={\r\n              document.documentElement.dir === \"rtl\"\r\n                ? renderViewRTL\r\n                : renderView\r\n            }\r\n          >\r\n            <Box>{brand}</Box>\r\n            <Stack direction=\"column\" mb=\"40px\">\r\n              <Box>{links}</Box>\r\n            </Stack>\r\n            <SidebarHelp sidebarVariant={sidebarVariant} />\r\n          </Scrollbars>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\n// FUNCTIONS\r\n\r\nexport function SidebarResponsive(props) {\r\n  // to check for active links and opened collapses\r\n  let location = useLocation();\r\n  const { logo, routes, colorMode, hamburgerColor, ...rest } = props;\r\n\r\n  // this is for the rest of the collapses\r\n  const [state, setState] = React.useState({});\r\n  const mainPanel = React.useRef();\r\n  // verifies if routeName is the one active (in browser input)\r\n  const activeRoute = (routeName) => {\r\n    return location.pathname === routeName ? \"active\" : \"\";\r\n  };\r\n  // Chakra Color Mode\r\n  let activeBg = useColorModeValue(\"white\", \"navy.700\");\r\n  let inactiveBg = useColorModeValue(\"white\", \"navy.700\");\r\n  let activeColor = useColorModeValue(\"gray.700\", \"white\");\r\n  let inactiveColor = useColorModeValue(\"gray.400\", \"white\");\r\n  let sidebarActiveShadow = useColorModeValue(\r\n    \"0px 7px 11px rgba(0, 0, 0, 0.04)\",\r\n    \"none\"\r\n  );\r\n  let sidebarBackgroundColor = useColorModeValue(\"white\", \"navy.800\");\r\n\r\n  // this function creates the links and collapses that appear in the sidebar (left menu)\r\n  const createLinks = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.redirect) {\r\n        return null;\r\n      }\r\n      if (prop.category) {\r\n        var st = {};\r\n        st[prop[\"state\"]] = !state[prop.state];\r\n        return (\r\n          <>\r\n            <Text\r\n              color={activeColor}\r\n              fontWeight=\"bold\"\r\n              mb={{\r\n                xl: \"6px\",\r\n              }}\r\n              mx=\"auto\"\r\n              ps={{\r\n                sm: \"10px\",\r\n                xl: \"16px\",\r\n              }}\r\n              py=\"12px\"\r\n            >\r\n              {document.documentElement.dir === \"rtl\"\r\n                ? prop.rtlName\r\n                : prop.name}\r\n            </Text>\r\n            {createLinks(prop.views)}\r\n          </>\r\n        );\r\n      }\r\n      return (\r\n        <NavLink to={prop.layout + prop.path} key={key}>\r\n          {activeRoute(prop.layout + prop.path) === \"active\" ? (\r\n            <Button\r\n              boxSize=\"initial\"\r\n              justifyContent=\"flex-start\"\r\n              alignItems=\"center\"\r\n              bg={activeBg}\r\n              boxShadow={sidebarActiveShadow}\r\n              mb={{\r\n                xl: \"6px\",\r\n              }}\r\n              mx={{\r\n                xl: \"auto\",\r\n              }}\r\n              ps={{\r\n                sm: \"10px\",\r\n                xl: \"16px\",\r\n              }}\r\n              py=\"12px\"\r\n              borderRadius=\"15px\"\r\n              _hover=\"none\"\r\n              w=\"100%\"\r\n              _active={{\r\n                bg: \"inherit\",\r\n                transform: \"none\",\r\n                borderColor: \"transparent\",\r\n              }}\r\n              _focus={{\r\n                boxShadow: \"none\",\r\n              }}\r\n            >\r\n              <Flex>\r\n                {typeof prop.icon === \"string\" ? (\r\n                  <Icon>{prop.icon}</Icon>\r\n                ) : (\r\n                  <IconBox\r\n                    bg=\"blue.500\"\r\n                    color=\"white\"\r\n                    h=\"30px\"\r\n                    w=\"30px\"\r\n                    me=\"12px\"\r\n                  >\r\n                    {prop.icon}\r\n                  </IconBox>\r\n                )}\r\n                <Text color={activeColor} my=\"auto\" fontSize=\"sm\">\r\n                  {document.documentElement.dir === \"rtl\"\r\n                    ? prop.rtlName\r\n                    : prop.name}\r\n                </Text>\r\n              </Flex>\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              boxSize=\"initial\"\r\n              justifyContent=\"flex-start\"\r\n              alignItems=\"center\"\r\n              bg=\"transparent\"\r\n              mb={{\r\n                xl: \"6px\",\r\n              }}\r\n              mx={{\r\n                xl: \"auto\",\r\n              }}\r\n              py=\"12px\"\r\n              ps={{\r\n                sm: \"10px\",\r\n                xl: \"16px\",\r\n              }}\r\n              borderRadius=\"15px\"\r\n              _hover=\"none\"\r\n              w=\"100%\"\r\n              _active={{\r\n                bg: \"inherit\",\r\n                transform: \"none\",\r\n                borderColor: \"transparent\",\r\n              }}\r\n              _focus={{\r\n                boxShadow: \"none\",\r\n              }}\r\n            >\r\n              <Flex>\r\n                {typeof prop.icon === \"string\" ? (\r\n                  <Icon>{prop.icon}</Icon>\r\n                ) : (\r\n                  <IconBox\r\n                    bg={inactiveBg}\r\n                    color=\"blue.500\"\r\n                    h=\"30px\"\r\n                    w=\"30px\"\r\n                    me=\"12px\"\r\n                  >\r\n                    {prop.icon}\r\n                  </IconBox>\r\n                )}\r\n                <Text color={inactiveColor} my=\"auto\" fontSize=\"sm\">\r\n                  {document.documentElement.dir === \"rtl\"\r\n                    ? prop.rtlName\r\n                    : prop.name}\r\n                </Text>\r\n              </Flex>\r\n            </Button>\r\n          )}\r\n        </NavLink>\r\n      );\r\n    });\r\n  };\r\n\r\n  var links = <>{createLinks(routes)}</>;\r\n\r\n  //  BRAND\r\n\r\n  var brand = (\r\n    <Box pt={\"35px\"} mb=\"8px\">\r\n      {logo}\r\n      <HSeparator my=\"26px\" />\r\n    </Box>\r\n  );\r\n\r\n  // SIDEBAR\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const btnRef = React.useRef();\r\n  // Color variables\r\n  return (\r\n    <Flex\r\n      display={{ sm: \"flex\", xl: \"none\" }}\r\n      ref={mainPanel}\r\n      alignItems=\"center\"\r\n    >\r\n      <HamburgerIcon\r\n        color={hamburgerColor}\r\n        w=\"18px\"\r\n        h=\"18px\"\r\n        ref={btnRef}\r\n        onClick={onOpen}\r\n      />\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        placement={document.documentElement.dir === \"rtl\" ? \"right\" : \"left\"}\r\n        finalFocusRef={btnRef}\r\n      >\r\n        <DrawerOverlay />\r\n        <DrawerContent\r\n          w=\"250px\"\r\n          maxW=\"250px\"\r\n          ms={{\r\n            sm: \"16px\",\r\n          }}\r\n          my={{\r\n            sm: \"16px\",\r\n          }}\r\n          borderRadius=\"16px\"\r\n          bg={sidebarBackgroundColor}\r\n        >\r\n          <DrawerCloseButton\r\n            _focus={{ boxShadow: \"none\" }}\r\n            _hover={{ boxShadow: \"none\" }}\r\n          />\r\n          <DrawerBody maxW=\"250px\" px=\"1rem\">\r\n            <Box maxW=\"100%\" h=\"100vh\">\r\n              <Box>{brand}</Box>\r\n              <Stack direction=\"column\" mb=\"40px\">\r\n                <Box>{links}</Box>\r\n              </Stack>\r\n              <SidebarHelp />\r\n            </Box>\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nimport React, { Component }  from 'react';\r\nfunction Card(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"Card\", { variant });\r\n  // Pass the computed styles into the `__css` prop\r\n  return (\r\n    <Box __css={styles} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nimport React, { Component }  from 'react';\r\nfunction CardBody(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"CardBody\", { variant });\r\n  // Pass the computed styles into the `__css` prop\r\n  return (\r\n    <Box __css={styles} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CardBody;\r\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nimport React, { Component }  from 'react';\r\nfunction CardHeader(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"CardHeader\", { variant });\r\n  // Pass the computed styles into the `__css` prop\r\n  return (\r\n    <Box __css={styles} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CardHeader;\r\n","import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass BarChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData: [],\r\n      chartOptions: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      chartData: this.props.chartData,\r\n      chartOptions: this.props.chartOptions,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Chart\r\n          options={this.state.chartOptions}\r\n          series={this.state.chartData}\r\n          type=\"bar\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarChart;\r\n","export const barChartData = [\r\n  {\r\n    name: \"Sales\",\r\n    data: [15, 25, 28, 10, 25, 20],\r\n  },\r\n];\r\n\r\nexport const barChartOptions = {\r\n  chart: {\r\n    toolbar: {\r\n      show: false,\r\n    },\r\n  },\r\n  tooltip: {\r\n    theme: \"dark\",\r\n  },\r\n  xaxis: {\r\n    categories: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n    labels: {\r\n      style: {\r\n        colors: \"#A0AEC0\",\r\n        fontSize: \"12px\",\r\n      },\r\n    },\r\n    show: true,\r\n    axisBorder: {\r\n      show: false,\r\n    },\r\n    \r\n  },\r\n  yaxis: {\r\n    show: true,\r\n    color: \"#A0AEC0\",\r\n    labels: {\r\n      show: true,\r\n      style: {\r\n        colors: \"#A0AEC0\",\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n  },\r\n  fill: {\r\n    colors: \"#ED8936\",\r\n  },\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n  grid: {\r\n    strokeDashArray: 5,\r\n  },\r\n  plotOptions: {\r\n    bar: {\r\n      borderRadius: 15,\r\n      columnWidth: \"15px\",\r\n    },\r\n  },\r\n  responsive: [\r\n    {\r\n      breakpoint: 768,\r\n      options: {\r\n        plotOptions: {\r\n          bar: {\r\n            borderRadius: 0,\r\n          },\r\n        },\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport const lineChartData = [\r\n  {\r\n    name: \"Mobile apps\",\r\n    data: [50, 40, 300, 220, 500, 250, 400, 230, 500],\r\n  },\r\n  {\r\n    name: \"Websites\",\r\n    data: [30, 90, 40, 140, 290, 290, 340, 230, 400],\r\n  },\r\n];\r\n\r\nexport const lineChartOptions = {\r\n  chart: {\r\n    toolbar: {\r\n      show: false,\r\n    },\r\n  },\r\n  tooltip: {\r\n    theme: \"dark\",\r\n  },\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n  stroke: {\r\n    curve: \"smooth\",\r\n  },\r\n  xaxis: {\r\n    type: \"datetime\",\r\n    categories: [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ],\r\n    axisTicks: {\r\n      show: false\r\n    },\r\n    axisBorder: {\r\n      show: false,\r\n    },\r\n    labels: {\r\n      style: {\r\n        colors: \"#fff\",\r\n        fontSize: \"12px\",\r\n      },\r\n    },\r\n  },\r\n  yaxis: {\r\n    labels: {\r\n      style: {\r\n        colors: \"#fff\",\r\n        fontSize: \"12px\",\r\n      },\r\n    },\r\n  },\r\n  legend: {\r\n    show: false,\r\n  },\r\n  grid: {\r\n    strokeDashArray: 5,\r\n  },\r\n  fill: {\r\n    type: \"gradient\",\r\n    gradient: {\r\n      shade: \"light\",\r\n      type: \"vertical\",\r\n      shadeIntensity: 0.5,\r\n      inverseColors: true,\r\n      opacityFrom: 0.8,\r\n      opacityTo: 0,\r\n      stops: [],\r\n    },\r\n    colors: [\"#fff\", \"#3182CE\"],\r\n  },\r\n  colors: [\"#fff\", \"#3182CE\"],\r\n};\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { lineChartData, lineChartOptions } from \"variables/charts\";\r\n\r\nclass LineChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      chartData: [],\r\n      chartOptions: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      chartData: lineChartData,\r\n      chartOptions: lineChartOptions,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ReactApexChart\r\n        options={this.state.chartOptions}\r\n        series={this.state.chartData}\r\n        type=\"area\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineChart;\r\n","// Assets\r\nimport avatar1 from \"assets/img/avatars/avatar1.png\";\r\nimport avatar2 from \"assets/img/avatars/avatar2.png\";\r\nimport avatar3 from \"assets/img/avatars/avatar3.png\";\r\nimport avatar4 from \"assets/img/avatars/avatar4.png\";\r\nimport avatar5 from \"assets/img/avatars/avatar5.png\";\r\nimport avatar7 from \"assets/img/avatars/avatar7.png\";\r\nimport avatar8 from \"assets/img/avatars/avatar8.png\";\r\nimport avatar9 from \"assets/img/avatars/avatar9.png\";\r\nimport avatar10 from \"assets/img/avatars/avatar10.png\";\r\n// Custom icons\r\nimport {\r\n  AdobexdLogo,\r\n  AtlassianLogo,\r\n  InvisionLogo,\r\n  JiraLogo,\r\n  SlackLogo,\r\n  SpotifyLogo,\r\n} from \"components/Icons/Icons.js\";\r\nimport { AiOutlineExclamation } from \"react-icons/ai\";\r\nimport {\r\n  FaArrowDown,\r\n  FaArrowUp,\r\n  FaBell,\r\n  FaCreditCard,\r\n  FaFilePdf,\r\n  FaHtml5,\r\n  FaShoppingCart,\r\n} from \"react-icons/fa\";\r\nimport { SiDropbox } from \"react-icons/si\";\r\n\r\nexport const dashboardTableData = [\r\n  {\r\n    logo: AdobexdLogo,\r\n    name: \"Argon Dashboard Chakra Version\",\r\n    members: [avatar1, avatar2, avatar3, avatar4, avatar5],\r\n    budget: \"$14,000\",\r\n    progression: 60,\r\n  },\r\n  {\r\n    logo: AtlassianLogo,\r\n    name: \"Add Progress Track\",\r\n    members: [avatar3, avatar2],\r\n    budget: \"$3,000\",\r\n    progression: 10,\r\n  },\r\n  {\r\n    logo: SlackLogo,\r\n    name: \"Fix Platform Errors\",\r\n    members: [avatar10, avatar4],\r\n    budget: \"Not set\",\r\n    progression: 100,\r\n  },\r\n  {\r\n    logo: SpotifyLogo,\r\n    name: \"Launch our Mobile App\",\r\n    members: [avatar2, avatar3, avatar7, avatar8],\r\n    budget: \"$32,000\",\r\n    progression: 100,\r\n  },\r\n  {\r\n    logo: JiraLogo,\r\n    name: \"Add the New Pricing Page\",\r\n    members: [avatar10, avatar3, avatar7, avatar2, avatar8],\r\n    budget: \"$400\",\r\n    progression: 25,\r\n  },\r\n  {\r\n    logo: InvisionLogo,\r\n    name: \"Redesign New Online Shop\",\r\n    members: [avatar9, avatar3, avatar2],\r\n    budget: \"$7,600\",\r\n    progression: 40,\r\n  },\r\n];\r\n\r\nexport const timelineData = [\r\n  {\r\n    logo: FaBell,\r\n    title: \"$2400, Design changes\",\r\n    date: \"22 DEC 7:20 PM\",\r\n    color: \"teal.300\",\r\n  },\r\n  {\r\n    logo: FaHtml5,\r\n    title: \"New order #4219423\",\r\n    date: \"21 DEC 11:21 PM\",\r\n    color: \"orange\",\r\n  },\r\n  {\r\n    logo: FaShoppingCart,\r\n    title: \"Server Payments for April\",\r\n    date: \"21 DEC 9:28 PM\",\r\n    color: \"blue.400\",\r\n  },\r\n  {\r\n    logo: FaCreditCard,\r\n    title: \"New card added for order #3210145\",\r\n    date: \"20 DEC 3:52 PM\",\r\n    color: \"orange.300\",\r\n  },\r\n  {\r\n    logo: SiDropbox,\r\n    title: \"Unlock packages for Development\",\r\n    date: \"19 DEC 11:35 PM\",\r\n    color: \"purple\",\r\n  },\r\n  {\r\n    logo: AdobexdLogo,\r\n    title: \"New order #9851258\",\r\n    date: \"18 DEC 4:41 PM\",\r\n  },\r\n];\r\nexport const rtlDashboardTableData = [\r\n  {\r\n    logo: AdobexdLogo,\r\n    name: \"نسخة Argon Dashboard Chakra\",\r\n    members: [avatar1, avatar2, avatar3, avatar4, avatar5],\r\n    budget: \"$14,000\",\r\n    progression: 60,\r\n  },\r\n  {\r\n    logo: AtlassianLogo,\r\n    name: \"إضافة مسار التقدم\",\r\n    members: [avatar3, avatar2],\r\n    budget: \"$3,000\",\r\n    progression: 10,\r\n  },\r\n  {\r\n    logo: SlackLogo,\r\n    name: \"إصلاح أخطاء النظام الأساسي\",\r\n    members: [avatar10, avatar4],\r\n    budget: \"غير مضبوط\",\r\n    progression: 100,\r\n  },\r\n  {\r\n    logo: SpotifyLogo,\r\n    name: \"إطلاق تطبيق الهاتف المحمول الخاص بنا\",\r\n    members: [avatar2, avatar3, avatar7, avatar8],\r\n    budget: \"$32,000\",\r\n    progression: 100,\r\n  },\r\n  {\r\n    logo: JiraLogo,\r\n    name: \"أضف صفحة التسعير الجديدة\",\r\n    members: [avatar10, avatar3, avatar7, avatar2, avatar8],\r\n    budget: \"$400\",\r\n    progression: 25,\r\n  },\r\n  {\r\n    logo: InvisionLogo,\r\n    name: \"إعادة تصميم متجر جديد على الإنترنت\",\r\n    members: [avatar9, avatar3, avatar2],\r\n    budget: \"$7,600\",\r\n    progression: 40,\r\n  },\r\n];\r\n\r\nexport const rtlTimelineData = [\r\n  {\r\n    logo: FaBell,\r\n    title: \"$2400, تغييرات في التصميم\",\r\n    date: \"22 DEC 7:20 PM\",\r\n    color: \"teal.300\",\r\n  },\r\n  {\r\n    logo: FaHtml5,\r\n    title: \"طلب جديد #4219423\",\r\n    date: \"21 DEC 11:21 PM\",\r\n    color: \"orange\",\r\n  },\r\n  {\r\n    logo: FaShoppingCart,\r\n    title: \"مدفوعات الخادم لشهر أبريل\",\r\n    date: \"21 DEC 9:28 PM\",\r\n    color: \"blue.400\",\r\n  },\r\n  {\r\n    logo: FaCreditCard,\r\n    title: \"تمت إضافة بطاقة جديدة للطلب #3210145\",\r\n    date: \"20 DEC 3:52 PM\",\r\n    color: \"orange.300\",\r\n  },\r\n  {\r\n    logo: SiDropbox,\r\n    title: \"فتح الحزم من أجل التنمية\",\r\n    date: \"19 DEC 11:35 PM\",\r\n    color: \"purple\",\r\n  },\r\n  {\r\n    logo: AdobexdLogo,\r\n    title: \"طلب جديد #9851258\",\r\n    date: \"18 DEC 4:41 PM\",\r\n  },\r\n];\r\n\r\nexport const tablesTableData = [\r\n  {\r\n    logo: avatar1,\r\n    name: \"Esthera Jackson\",\r\n    email: \"alexa@simmmple.com\",\r\n    subdomain: \"Manager\",\r\n    domain: \"Organization\",\r\n    status: \"Online\",\r\n    date: \"14/06/21\",\r\n  },\r\n  {\r\n    logo: avatar2,\r\n    name: \"Alexa Liras\",\r\n    email: \"laurent@simmmple.com\",\r\n    subdomain: \"Programmer\",\r\n    domain: \"Developer\",\r\n    status: \"Offline\",\r\n    date: \"12/05/21\",\r\n  },\r\n  {\r\n    logo: avatar3,\r\n    name: \"Laurent Michael\",\r\n    email: \"laurent@simmmple.com\",\r\n    subdomain: \"Executive\",\r\n    domain: \"Projects\",\r\n    status: \"Online\",\r\n    date: \"07/06/21\",\r\n  },\r\n  {\r\n    logo: avatar4,\r\n    name: \"Freduardo Hill\",\r\n    email: \"freduardo@simmmple.com\",\r\n    subdomain: \"Manager\",\r\n    domain: \"Organization\",\r\n    status: \"Online\",\r\n    date: \"14/11/21\",\r\n  },\r\n  {\r\n    logo: avatar5,\r\n    name: \"Daniel Thomas\",\r\n    email: \"daniel@simmmple.com\",\r\n    subdomain: \"Programmer\",\r\n    domain: \"Developer\",\r\n    status: \"Offline\",\r\n    date: \"21/01/21\",\r\n  },\r\n  {\r\n    logo: avatar7,\r\n    name: \"Mark Wilson\",\r\n    email: \"mark@simmmple.com\",\r\n    subdomain: \"Designer\",\r\n    domain: \"UI/UX Design\",\r\n    status: \"Offline\",\r\n    date: \"04/09/20\",\r\n  },\r\n];\r\n\r\nexport const tablesProjectData = [\r\n  {\r\n    logo: AdobexdLogo,\r\n    name: \"Chakra UI Version\",\r\n    budget: \"$14,000\",\r\n    status: \"Working\",\r\n    progression: 60,\r\n  },\r\n  {\r\n    logo: AtlassianLogo,\r\n    name: \"Add Progress Track\",\r\n    budget: \"$3,000\",\r\n    status: \"Canceled\",\r\n    progression: 10,\r\n  },\r\n  {\r\n    logo: SlackLogo,\r\n    name: \"Fix Platform Errors\",\r\n    budget: \"Not set\",\r\n    status: \"Done\",\r\n    progression: 100,\r\n  },\r\n  {\r\n    logo: SpotifyLogo,\r\n    name: \"Launch our Mobile App\",\r\n    budget: \"$32,000\",\r\n    status: \"Done\",\r\n    progression: 100,\r\n  },\r\n  {\r\n    logo: JiraLogo,\r\n    name: \"Add the New Pricing Page\",\r\n    budget: \"$400\",\r\n    status: \"Working\",\r\n    progression: 25,\r\n  },\r\n];\r\n\r\nexport const invoicesData = [\r\n  {\r\n    date: \"March, 01, 2020\",\r\n    code: \"#MS-415646\",\r\n    price: \"$180\",\r\n    logo: FaFilePdf,\r\n    format: \"PDF\",\r\n  },\r\n  {\r\n    date: \"February, 10, 2020\",\r\n    code: \"#RV-126749\",\r\n    price: \"$250\",\r\n    logo: FaFilePdf,\r\n    format: \"PDF\",\r\n  },\r\n  {\r\n    date: \"April, 05, 2020\",\r\n    code: \"#FB-212562\",\r\n    price: \"$560\",\r\n    logo: FaFilePdf,\r\n    format: \"PDF\",\r\n  },\r\n  {\r\n    date: \"June, 25, 2019\",\r\n    code: \"#QW-103578\",\r\n    price: \"$120\",\r\n    logo: FaFilePdf,\r\n    format: \"PDF\",\r\n  },\r\n  {\r\n    date: \"March, 01, 2019\",\r\n    code: \"#AR-803481\",\r\n    price: \"$300\",\r\n    logo: FaFilePdf,\r\n    format: \"PDF\",\r\n  },\r\n];\r\n\r\nexport const billingData = [\r\n  {\r\n    name: \"Oliver Liam\",\r\n    company: \"Viking Burrito\",\r\n    email: \"oliver@burrito.com\",\r\n    number: \"FRB1235476\",\r\n  },\r\n  {\r\n    name: \"Lucas Harper\",\r\n    company: \"Stone Tech Zone\",\r\n    email: \"lucas@stone-tech.com\",\r\n    number: \"FRB1235476\",\r\n  },\r\n  {\r\n    name: \"Ethan James\",\r\n    company: \"Fiber Notion\",\r\n    email: \"ethan@fiber.com\",\r\n    number: \"FRB1235476\",\r\n  },\r\n];\r\n\r\nexport const newestTransactions = [\r\n  {\r\n    name: \"Netflix\",\r\n    date: \"27 March 2022, at 12:30 PM\",\r\n    price: \"- $2,500\",\r\n    logo: FaArrowDown,\r\n  },\r\n  {\r\n    name: \"Apple\",\r\n    date: \"27 March 2022, at 12:30 PM\",\r\n    price: \"+ $2,500\",\r\n    logo: FaArrowUp,\r\n  },\r\n];\r\n\r\nexport const olderTransactions = [\r\n  {\r\n    name: \"Stripe\",\r\n    date: \"26 March 2022, at 13:45 PM\",\r\n    price: \"+ $800\",\r\n    logo: FaArrowUp,\r\n  },\r\n  {\r\n    name: \"HubSpot\",\r\n    date: \"26 March 2022, at 12:30 PM\",\r\n    price: \"+ $1,700\",\r\n    logo: FaArrowUp,\r\n  },\r\n  {\r\n    name: \"Webflow\",\r\n    date: \"26 March 2022, at 05:00 PM\",\r\n    price: \"Pending\",\r\n    logo: AiOutlineExclamation,\r\n  },\r\n  {\r\n    name: \"Microsoft\",\r\n    date: \"25 March 2022, at 16:30 PM\",\r\n    price: \"- $987\",\r\n    logo: FaArrowDown,\r\n  },\r\n];\r\n\r\nexport const pageVisits = [\r\n  {\r\n    pageName: \"/argon/\",\r\n    visitors: \"4,569\",\r\n    uniqueUsers: 340,\r\n    bounceRate: \"46,53%\"\r\n  },\r\n  {\r\n    pageName: \"/argon/index.html\",\r\n    visitors: \"3,985\",\r\n    uniqueUsers: 319,\r\n    bounceRate: \"46,53%\"\r\n  },\r\n  {\r\n    pageName: \"/argon/charts.html\",\r\n    visitors: \"3,513\",\r\n    uniqueUsers: 294,\r\n    bounceRate: \"36,49%\"\r\n  },\r\n  {\r\n    pageName: \"/argon/tables.html\",\r\n    visitors: \"2,050\",\r\n    uniqueUsers: 147,\r\n    bounceRate: \"50,87%\"\r\n  },\r\n  {\r\n    pageName: \"/argon/profile.html\",\r\n    visitors: \"1,795\",\r\n    uniqueUsers: 190,\r\n    bounceRate: \"46,53%\"\r\n  },\r\n]\r\n\r\nexport const socialTraffic = [\r\n  {\r\n    referral: \"Facebook\",\r\n    visitors: \"1,480\",\r\n    percentage: 60,\r\n    color: \"orange\",\r\n  },\r\n  {\r\n    referral: \"Facebook\",\r\n    visitors: \"5,480\",\r\n    percentage: 70,\r\n    color: \"orange\",\r\n  },\r\n  {\r\n    referral: \"Google\",\r\n    visitors: \"4,807\",\r\n    percentage: 80,\r\n    color: \"cyan\",\r\n  },\r\n  {\r\n    referral: \"Instagram\",\r\n    visitors: \"3,678\",\r\n    percentage: 75,\r\n    color: \"cyan\",\r\n  },\r\n  {\r\n    referral: \"Twitter\",\r\n    visitors: \"2,645\",\r\n    percentage: 30,\r\n    color: \"orange\",\r\n  }\r\n]\r\n","import React from \"react\";\r\nimport {\r\n  Tr,\r\n  Td,\r\n  Flex,\r\n  Text,\r\n  Progress,\r\n  Icon,\r\n  Button,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport { FaEllipsisV } from \"react-icons/fa\";\r\n\r\nfunction DashboardTableRow(props) {\r\n  const { logo, name, status, budget, progression, isLast } = props;\r\n  const textColor = useColorModeValue(\"gray.500\", \"white\");\r\n  const titleColor = useColorModeValue(\"gray.700\", \"white\");\r\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.600\");\r\n\r\n  return (\r\n    <Tr>\r\n      <Td minWidth={{ sm: \"250px\" }} pl=\"0px\" borderColor={borderColor} borderBottom={isLast ? \"none\" : null}>\r\n        <Flex alignItems=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\r\n          <Icon as={logo} h={\"24px\"} w={\"24px\"} me=\"18px\" />\r\n          <Text\r\n            fontSize=\"md\"\r\n            color={titleColor}\r\n            fontWeight=\"bold\"\r\n            minWidth=\"100%\"\r\n          >\r\n            {name}\r\n          </Text>\r\n        </Flex>\r\n      </Td>\r\n      <Td borderBottom={isLast ? \"none\" : null} borderColor={borderColor}>\r\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\r\n          {budget}\r\n        </Text>\r\n      </Td>\r\n      <Td borderBottom={isLast ? \"none\" : null} borderColor={borderColor}>\r\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\r\n          {status}\r\n        </Text>\r\n      </Td>\r\n      <Td borderBottom={isLast ? \"none\" : null} borderColor={borderColor}>\r\n        <Flex direction=\"column\">\r\n          <Text\r\n            fontSize=\"md\"\r\n            color=\"blue.500\"\r\n            fontWeight=\"bold\"\r\n            pb=\".2rem\"\r\n          >{`${progression}%`}</Text>\r\n          <Progress\r\n            colorScheme=\"blue\"\r\n            size=\"xs\"\r\n            value={progression}\r\n            borderRadius=\"15px\"\r\n          />\r\n        </Flex>\r\n      </Td >\r\n      <Td borderBottom={isLast ? \"none\" : null} borderColor={borderColor}>\r\n        <Button p=\"0px\" bg=\"transparent\" variant=\"no-effects\">\r\n          <Icon as={FaEllipsisV} color=\"gray.400\" cursor=\"pointer\" />\r\n        </Button>\r\n      </Td>\r\n    </Tr>\r\n  );\r\n}\r\n\r\nexport default DashboardTableRow;\r\n","import {\r\n  Avatar,\r\n  Badge,\r\n  Button,\r\n  Flex,\r\n  Td,\r\n  Text,\r\n  Tr,\r\n  useColorModeValue\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nfunction TablesTableRow(props) {\r\n  const { logo, name, email, subdomain, domain, status, date, isLast } = props;\r\n  const textColor = useColorModeValue(\"gray.500\", \"white\");\r\n  const titleColor = useColorModeValue(\"gray.700\", \"white\");\r\n  const bgStatus = useColorModeValue(\"gray.400\", \"navy.900\");\r\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.600\");\r\n\r\n  return (\r\n    <Tr>\r\n      <Td\r\n        minWidth={{ sm: \"250px\" }}\r\n        pl=\"0px\"\r\n        borderColor={borderColor}\r\n        borderBottom={isLast ? \"none\" : null}\r\n      >\r\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\r\n          <Avatar src={logo} w=\"50px\" borderRadius=\"12px\" me=\"18px\" />\r\n          <Flex direction=\"column\">\r\n            <Text\r\n              fontSize=\"md\"\r\n              color={titleColor}\r\n              fontWeight=\"bold\"\r\n              minWidth=\"100%\"\r\n            >\r\n              {name}\r\n            </Text>\r\n            <Text fontSize=\"sm\" color=\"gray.400\" fontWeight=\"normal\">\r\n              {email}\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      </Td>\r\n\r\n      <Td borderColor={borderColor} borderBottom={isLast ? \"none\" : null}>\r\n        <Flex direction=\"column\">\r\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\r\n            {domain}\r\n          </Text>\r\n          <Text fontSize=\"sm\" color=\"gray.400\" fontWeight=\"normal\">\r\n            {subdomain}\r\n          </Text>\r\n        </Flex>\r\n      </Td>\r\n      <Td borderColor={borderColor} borderBottom={isLast ? \"none\" : null}>\r\n        <Badge\r\n          bg={status === \"Online\" ? \"green.400\" : bgStatus}\r\n          color={status === \"Online\" ? \"white\" : \"white\"}\r\n          fontSize=\"16px\"\r\n          p=\"3px 10px\"\r\n          borderRadius=\"8px\"\r\n        >\r\n          {status}\r\n        </Badge>\r\n      </Td>\r\n      <Td borderColor={borderColor} borderBottom={isLast ? \"none\" : null}>\r\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\r\n          {date}\r\n        </Text>\r\n      </Td>\r\n      <Td borderColor={borderColor} borderBottom={isLast ? \"none\" : null}>\r\n        <Button p=\"0px\" bg=\"transparent\" variant=\"no-effects\">\r\n          <Text\r\n            fontSize=\"md\"\r\n            color=\"gray.400\"\r\n            fontWeight=\"bold\"\r\n            cursor=\"pointer\"\r\n          >\r\n            Edit\r\n          </Text>\r\n        </Button>\r\n      </Td>\r\n    </Tr>\r\n  );\r\n}\r\n\r\nexport default TablesTableRow;\r\n","// Chakra imports\r\nimport {\r\n  Flex,\r\n  Table,\r\n  Tbody,\r\n  Text,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n  useColorModeValue\r\n} from \"@chakra-ui/react\";\r\n// Custom components\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport TablesProjectRow from \"components/Tables/TablesProjectRow\";\r\nimport TablesTableRow from \"components/Tables/TablesTableRow\";\r\nimport React from \"react\";\r\nimport { tablesProjectData, tablesTableData } from \"variables/general\";\r\n\r\nfunction Tables() {\r\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\r\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.600\");\r\n\r\n  return (\r\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\r\n      <Card\r\n        my=\"22px\"\r\n        overflowX={{ sm: \"scroll\", xl: \"hidden\" }}\r\n        pb=\"0px\"\r\n      >\r\n        <CardHeader p=\"6px 0px 22px 0px\">\r\n          <Flex direction=\"column\">\r\n            <Text fontSize=\"lg\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\r\n              Projects Table\r\n            </Text>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Table variant=\"simple\" color={textColor}>\r\n            <Thead>\r\n              <Tr my=\".8rem\" pl=\"0px\">\r\n                <Th pl=\"0px\" color=\"gray.400\" borderColor={borderColor}>\r\n                  Companies\r\n                </Th>\r\n                <Th color=\"gray.400\" borderColor={borderColor}>Budget</Th>\r\n                <Th color=\"gray.400\" borderColor={borderColor}>Status</Th>\r\n                <Th color=\"gray.400\" borderColor={borderColor}>Completion</Th>\r\n                <Th></Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {tablesProjectData.map((row, index, arr) => {\r\n                return (\r\n                  <TablesProjectRow\r\n                    name={row.name}\r\n                    logo={row.logo}\r\n                    status={row.status}\r\n                    budget={row.budget}\r\n                    progression={row.progression}\r\n                    isLast={index === arr.length - 1 ? true : false}\r\n                    key={index}\r\n                  />\r\n                );\r\n              })}\r\n            </Tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n      <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }} pb=\"0px\">\r\n        <CardHeader p=\"6px 0px 22px 0px\">\r\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\r\n            Authors Table\r\n          </Text>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Table variant=\"simple\" color={textColor}>\r\n            <Thead>\r\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\" >\r\n                <Th pl=\"0px\" borderColor={borderColor} color=\"gray.400\" >\r\n                  Author\r\n                </Th>\r\n                <Th borderColor={borderColor} color=\"gray.400\" >Function</Th>\r\n                <Th borderColor={borderColor} color=\"gray.400\" >Status</Th>\r\n                <Th borderColor={borderColor} color=\"gray.400\" >Employed</Th>\r\n                <Th borderColor={borderColor}></Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {tablesTableData.map((row, index, arr) => {\r\n                return (\r\n                  <TablesTableRow\r\n                    name={row.name}\r\n                    logo={row.logo}\r\n                    email={row.email}\r\n                    subdomain={row.subdomain}\r\n                    domain={row.domain}\r\n                    status={row.status}\r\n                    date={row.date}\r\n                    isLast={index === arr.length - 1 ? true : false}\r\n                    key={index}\r\n                  />\r\n                );\r\n              })}\r\n            </Tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Tables;\r\n","// Chakra imports\r\nimport {\r\n  Avatar,\r\n  AvatarGroup,\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Grid,\r\n  Icon,\r\n  Image,\r\n  Link,\r\n  Switch,\r\n  Text,\r\n  useColorMode,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\n// Custom components\r\nimport Card from \"components/Card/Card\";\r\nimport CardBody from \"components/Card/CardBody\";\r\nimport CardHeader from \"components/Card/CardHeader\";\r\nimport React from \"react\";\r\nimport {\r\n  FaCube,\r\n  FaFacebook,\r\n  FaInstagram,\r\n  FaPenFancy,\r\n  FaPlus,\r\n  FaTwitter,\r\n} from \"react-icons/fa\";\r\nimport { IoDocumentsSharp } from \"react-icons/io5\";\r\n\r\n// Assets\r\nimport avatar2 from \"assets/img/avatars/avatar2.png\";\r\nimport avatar3 from \"assets/img/avatars/avatar3.png\";\r\nimport avatar4 from \"assets/img/avatars/avatar4.png\";\r\nimport avatar5 from \"assets/img/avatars/avatar5.png\";\r\nimport avatar6 from \"assets/img/avatars/avatar6.png\";\r\nimport ImageArchitect1 from \"assets/img/ImageArchitect1.png\";\r\nimport ImageArchitect2 from \"assets/img/ImageArchitect2.png\";\r\nimport ImageArchitect3 from \"assets/img/ImageArchitect3.png\";\r\n\r\nfunction Profile() {\r\n  const { colorMode } = useColorMode();\r\n\r\n  // Chakra color mode\r\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\r\n  const iconColor = useColorModeValue(\"blue.500\", \"white\");\r\n  const bgProfile = useColorModeValue(\"hsla(0,0%,100%,.8)\", \"navy.800\");\r\n  const borderProfileColor = useColorModeValue(\"white\", \"transparent\");\r\n  const emailColor = useColorModeValue(\"gray.400\", \"gray.300\");\r\n\r\n  return (\r\n    <Flex direction='column' pt={{ base: \"120px\", md: \"75px\", lg: \"100px\" }}>\r\n      <Flex\r\n        direction={{ sm: \"column\", md: \"row\" }}\r\n        mb='24px'\r\n        maxH='330px'\r\n        justifyContent={{ sm: \"center\", md: \"space-between\" }}\r\n        align='center'\r\n        backdropFilter='blur(21px)'\r\n        boxShadow='0px 2px 5.5px rgba(0, 0, 0, 0.02)'\r\n        border='1.5px solid'\r\n        borderColor={borderProfileColor}\r\n        bg={bgProfile}\r\n        p='24px'\r\n        borderRadius='20px'>\r\n        <Flex\r\n          align='center'\r\n          mb={{ sm: \"10px\", md: \"0px\" }}\r\n          direction={{ sm: \"column\", md: \"row\" }}\r\n          w={{ sm: \"100%\" }}\r\n          textAlign={{ sm: \"center\", md: \"start\" }}>\r\n          <Avatar\r\n            me={{ md: \"22px\" }}\r\n            src={avatar5}\r\n            w='80px'\r\n            h='80px'\r\n            borderRadius='15px'\r\n          />\r\n          <Flex direction='column' maxWidth='100%' my={{ sm: \"14px\" }}>\r\n            <Text\r\n              fontSize={{ sm: \"lg\", lg: \"xl\" }}\r\n              color={textColor}\r\n              fontWeight='bold'\r\n              ms={{ sm: \"8px\", md: \"0px\" }}>\r\n              Alec Thompson\r\n            </Text>\r\n            <Text\r\n              fontSize={{ sm: \"sm\", md: \"md\" }}\r\n              color={emailColor}\r\n              fontWeight='semibold'>\r\n              alec@simmmple.com\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n        <Flex\r\n          direction={{ sm: \"column\", lg: \"row\" }}\r\n          w={{ sm: \"100%\", md: \"50%\", lg: \"auto\" }}>\r\n          <Button p='0px' bg='transparent' variant='no-effects'>\r\n            <Flex\r\n              align='center'\r\n              w={{ sm: \"100%\", lg: \"135px\" }}\r\n              bg={colorMode === \"dark\" ? \"navy.900\" : \"#fff\"}\r\n              borderRadius='8px'\r\n              justifyContent='center'\r\n              py='10px'\r\n              boxShadow='0px 2px 5.5px rgba(0, 0, 0, 0.06)'\r\n              cursor='pointer'>\r\n              <Icon color={textColor} as={FaCube} me='6px' />\r\n              <Text fontSize='xs' color={textColor} fontWeight='bold'>\r\n                OVERVIEW\r\n              </Text>\r\n            </Flex>\r\n          </Button>\r\n          <Button p='0px' bg='transparent' variant='no-effects'>\r\n            <Flex\r\n              align='center'\r\n              w={{ lg: \"135px\" }}\r\n              borderRadius='15px'\r\n              justifyContent='center'\r\n              py='10px'\r\n              mx={{ lg: \"1rem\" }}\r\n              cursor='pointer'>\r\n              <Icon color={textColor} as={IoDocumentsSharp} me='6px' />\r\n              <Text fontSize='xs' color={textColor} fontWeight='bold'>\r\n                TEAMS\r\n              </Text>\r\n            </Flex>\r\n          </Button>\r\n          <Button p='0px' bg='transparent' variant='no-effects'>\r\n            <Flex\r\n              align='center'\r\n              w={{ lg: \"135px\" }}\r\n              borderRadius='15px'\r\n              justifyContent='center'\r\n              py='10px'\r\n              cursor='pointer'>\r\n              <Icon color={textColor} as={FaPenFancy} me='6px' />\r\n              <Text fontSize='xs' color={textColor} fontWeight='bold'>\r\n                PROJECTS\r\n              </Text>\r\n            </Flex>\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <Grid templateColumns={{ sm: \"1fr\", xl: \"repeat(3, 1fr)\" }} gap='22px'>\r\n        <Card p='16px'>\r\n          <CardHeader p='12px 5px' mb='12px'>\r\n            <Text fontSize='lg' color={textColor} fontWeight='bold'>\r\n              Platform Settings\r\n            </Text>\r\n          </CardHeader>\r\n          <CardBody px='5px'>\r\n            <Flex direction='column'>\r\n              <Text fontSize='sm' color='gray.400' fontWeight='600' mb='20px'>\r\n                ACCOUNT\r\n              </Text>\r\n              <Flex align='center' mb='20px'>\r\n                <Switch colorScheme='blue' me='10px' />\r\n                <Text\r\n                  noOfLines={1}\r\n                  fontSize='md'\r\n                  color='gray.400'\r\n                  fontWeight='400'>\r\n                  Email me when someone follows me\r\n                </Text>\r\n              </Flex>\r\n              <Flex align='center' mb='20px'>\r\n                <Switch colorScheme='blue' me='10px' />\r\n                <Text\r\n                  noOfLines={1}\r\n                  fontSize='md'\r\n                  color='gray.400'\r\n                  fontWeight='400'>\r\n                  Email me when someone answers on my post\r\n                </Text>\r\n              </Flex>\r\n              <Flex align='center' mb='20px'>\r\n                <Switch colorScheme='blue' me='10px' />\r\n                <Text\r\n                  noOfLines={1}\r\n                  fontSize='md'\r\n                  color='gray.400'\r\n                  fontWeight='400'>\r\n                  Email me when someone mentions me\r\n                </Text>\r\n              </Flex>\r\n              <Text\r\n                fontSize='sm'\r\n                color='gray.400'\r\n                fontWeight='600'\r\n                m='6px 0px 20px 0px'>\r\n                APPLICATION\r\n              </Text>\r\n              <Flex align='center' mb='20px'>\r\n                <Switch colorScheme='blue' me='10px' />\r\n                <Text\r\n                  noOfLines={1}\r\n                  fontSize='md'\r\n                  color='gray.400'\r\n                  fontWeight='400'>\r\n                  New launches and projects\r\n                </Text>\r\n              </Flex>\r\n              <Flex align='center' mb='20px'>\r\n                <Switch colorScheme='blue' me='10px' />\r\n                <Text\r\n                  noOfLines={1}\r\n                  fontSize='md'\r\n                  color='gray.400'\r\n                  fontWeight='400'>\r\n                  Monthly product changes\r\n                </Text>\r\n              </Flex>\r\n              <Flex align='center' mb='20px'>\r\n                <Switch colorScheme='blue' me='10px' />\r\n                <Text\r\n                  noOfLines={1}\r\n                  fontSize='md'\r\n                  color='gray.400'\r\n                  fontWeight='400'>\r\n                  Subscribe to newsletter\r\n                </Text>\r\n              </Flex>\r\n            </Flex>\r\n          </CardBody>\r\n        </Card>\r\n        <Card p='16px' my={{ sm: \"24px\", xl: \"0px\" }}>\r\n          <CardHeader p='12px 5px' mb='12px'>\r\n            <Text fontSize='lg' color={textColor} fontWeight='bold'>\r\n              Profile Information\r\n            </Text>\r\n          </CardHeader>\r\n          <CardBody px='5px'>\r\n            <Flex direction='column'>\r\n              <Text fontSize='md' color='gray.400' fontWeight='400' mb='30px'>\r\n                Hi, I’m Esthera Jackson, Decisions: If you can’t decide, the\r\n                answer is no. If two equally difficult paths, choose the one\r\n                more painful in the short term (pain avoidance is creating an\r\n                illusion of equality).\r\n              </Text>\r\n              <Flex align='center' mb='18px'>\r\n                <Text\r\n                  fontSize='md'\r\n                  color={textColor}\r\n                  fontWeight='bold'\r\n                  me='10px'>\r\n                  Full Name:{\" \"}\r\n                </Text>\r\n                <Text fontSize='md' color='gray.400' fontWeight='400'>\r\n                  Esthera Jackson\r\n                </Text>\r\n              </Flex>\r\n              <Flex align='center' mb='18px'>\r\n                <Text\r\n                  fontSize='md'\r\n                  color={textColor}\r\n                  fontWeight='bold'\r\n                  me='10px'>\r\n                  Mobile:{\" \"}\r\n                </Text>\r\n                <Text fontSize='md' color='gray.400' fontWeight='400'>\r\n                  (44) 123 1234 123\r\n                </Text>\r\n              </Flex>\r\n              <Flex align='center' mb='18px'>\r\n                <Text\r\n                  fontSize='md'\r\n                  color={textColor}\r\n                  fontWeight='bold'\r\n                  me='10px'>\r\n                  Email:{\" \"}\r\n                </Text>\r\n                <Text fontSize='md' color='gray.400' fontWeight='400'>\r\n                  esthera@simmmple.com\r\n                </Text>\r\n              </Flex>\r\n              <Flex align='center' mb='18px'>\r\n                <Text\r\n                  fontSize='md'\r\n                  color={textColor}\r\n                  fontWeight='bold'\r\n                  me='10px'>\r\n                  Location:{\" \"}\r\n                </Text>\r\n                <Text fontSize='md' color='gray.400' fontWeight='400'>\r\n                  United States\r\n                </Text>\r\n              </Flex>\r\n              <Flex align='center' mb='18px'>\r\n                <Text\r\n                  fontSize='md'\r\n                  color={textColor}\r\n                  fontWeight='bold'\r\n                  me='10px'>\r\n                  Social Media:{\" \"}\r\n                </Text>\r\n                <Flex>\r\n                  <Link\r\n                    href='#'\r\n                    color={iconColor}\r\n                    fontSize='lg'\r\n                    me='10px'\r\n                    _hover={{ color: \"blue.500\" }}>\r\n                    <Icon as={FaFacebook} />\r\n                  </Link>\r\n                  <Link\r\n                    href='#'\r\n                    color={iconColor}\r\n                    fontSize='lg'\r\n                    me='10px'\r\n                    _hover={{ color: \"blue.500\" }}>\r\n                    <Icon as={FaInstagram} />\r\n                  </Link>\r\n                  <Link\r\n                    href='#'\r\n                    color={iconColor}\r\n                    fontSize='lg'\r\n                    me='10px'\r\n                    _hover={{ color: \"blue.500\" }}>\r\n                    <Icon as={FaTwitter} />\r\n                  </Link>\r\n                </Flex>\r\n              </Flex>\r\n            </Flex>\r\n          </CardBody>\r\n        </Card>\r\n        <Card p='16px'>\r\n          <CardHeader p='12px 5px' mb='12px'>\r\n            <Text fontSize='lg' color={textColor} fontWeight='bold'>\r\n              Conversations\r\n            </Text>\r\n          </CardHeader>\r\n          <CardBody px='5px'>\r\n            <Flex direction='column' w='100%'>\r\n              <Flex justifyContent='space-between' mb='21px'>\r\n                <Flex align='center'>\r\n                  <Avatar\r\n                    src={avatar2}\r\n                    w='50px'\r\n                    h='50px'\r\n                    borderRadius='15px'\r\n                    me='10px'\r\n                  />\r\n                  <Flex direction='column'>\r\n                    <Text fontSize='sm' color={textColor} fontWeight='bold'>\r\n                      Sophie B.{\" \"}\r\n                    </Text>\r\n                    <Text fontSize='xs' color='gray.400' fontWeight='400'>\r\n                      Hi! I need more information...\r\n                    </Text>\r\n                  </Flex>\r\n                </Flex>\r\n                <Button p='0px' bg='transparent' variant='no-effects'>\r\n                  <Text\r\n                    fontSize='10px'\r\n                    fontWeight='700'\r\n                    color={iconColor}\r\n                    alignSelf='center'>\r\n                    REPLY\r\n                  </Text>\r\n                </Button>\r\n              </Flex>\r\n              <Flex justifyContent='space-between' mb='21px'>\r\n                <Flex align='center'>\r\n                  <Avatar\r\n                    src={avatar3}\r\n                    w='50px'\r\n                    h='50px'\r\n                    borderRadius='15px'\r\n                    me='10px'\r\n                  />\r\n                  <Flex direction='column'>\r\n                    <Text fontSize='sm' color={textColor} fontWeight='bold'>\r\n                      Sophie B.{\" \"}\r\n                    </Text>\r\n                    <Text fontSize='xs' color='gray.400' fontWeight='400'>\r\n                      Awesome work, can you change...\r\n                    </Text>\r\n                  </Flex>\r\n                </Flex>\r\n                <Button p='0px' bg='transparent' variant='no-effects'>\r\n                  <Text\r\n                    fontSize='10px'\r\n                    fontWeight='700'\r\n                    color={iconColor}\r\n                    alignSelf='center'>\r\n                    REPLY\r\n                  </Text>\r\n                </Button>\r\n              </Flex>\r\n              <Flex justifyContent='space-between' mb='21px'>\r\n                <Flex align='center'>\r\n                  <Avatar\r\n                    src={avatar4}\r\n                    w='50px'\r\n                    h='50px'\r\n                    borderRadius='15px'\r\n                    me='10px'\r\n                  />\r\n                  <Flex direction='column'>\r\n                    <Text fontSize='sm' color={textColor} fontWeight='bold'>\r\n                      Sophie B.{\" \"}\r\n                    </Text>\r\n                    <Text fontSize='xs' color='gray.400' fontWeight='400'>\r\n                      Have a great afternoon...\r\n                    </Text>\r\n                  </Flex>\r\n                </Flex>\r\n                <Button p='0px' bg='transparent' variant='no-effects'>\r\n                  <Text\r\n                    fontSize='10px'\r\n                    fontWeight='700'\r\n                    color={iconColor}\r\n                    alignSelf='center'>\r\n                    REPLY\r\n                  </Text>\r\n                </Button>\r\n              </Flex>\r\n              <Flex justifyContent='space-between' mb='21px'>\r\n                <Flex align='center'>\r\n                  <Avatar\r\n                    src={avatar5}\r\n                    w='50px'\r\n                    h='50px'\r\n                    borderRadius='15px'\r\n                    me='10px'\r\n                  />\r\n                  <Flex direction='column'>\r\n                    <Text fontSize='sm' color={textColor} fontWeight='bold'>\r\n                      Sophie B.{\" \"}\r\n                    </Text>\r\n                    <Text fontSize='xs' color='gray.400' fontWeight='400'>\r\n                      About files I can...\r\n                    </Text>\r\n                  </Flex>\r\n                </Flex>\r\n                <Button p='0px' bg='transparent' variant='no-effects'>\r\n                  <Text\r\n                    fontSize='10px'\r\n                    fontWeight='700'\r\n                    color={iconColor}\r\n                    alignSelf='center'>\r\n                    REPLY\r\n                  </Text>\r\n                </Button>\r\n              </Flex>\r\n              <Flex justifyContent='space-between' mb='21px'>\r\n                <Flex align='center'>\r\n                  <Avatar\r\n                    src={avatar6}\r\n                    w='50px'\r\n                    h='50px'\r\n                    borderRadius='15px'\r\n                    me='10px'\r\n                  />\r\n                  <Flex direction='column'>\r\n                    <Text fontSize='sm' color={textColor} fontWeight='bold'>\r\n                      Sophie B.{\" \"}\r\n                    </Text>\r\n                    <Text fontSize='xs' color='gray.400' fontWeight='400'>\r\n                      About files I can...\r\n                    </Text>\r\n                  </Flex>\r\n                </Flex>\r\n                <Button p='0px' bg='transparent' variant='no-effects'>\r\n                  <Text\r\n                    fontSize='10px'\r\n                    fontWeight='700'\r\n                    color={iconColor}\r\n                    alignSelf='center'>\r\n                    REPLY\r\n                  </Text>\r\n                </Button>\r\n              </Flex>\r\n            </Flex>\r\n          </CardBody>\r\n        </Card>\r\n      </Grid>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n// Chakra imports\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  HStack,\r\n  Input,\r\n  Icon,\r\n  Link,\r\n  Switch,\r\n  Text,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n// Assets\r\nimport signInImage from \"assets/img/signInImage.png\";\r\nimport { FaApple, FaFacebook, FaGoogle } from \"react-icons/fa\";\r\n\r\nfunction SignIn() {\r\n  // Chakra color mode\r\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\r\n  const bgForm = useColorModeValue(\"white\", \"navy.800\");\r\n  const titleColor = useColorModeValue(\"gray.700\", \"blue.500\");\r\n  const colorIcons = useColorModeValue(\"gray.700\", \"white\");\r\n  const bgIcons = useColorModeValue(\"trasnparent\", \"navy.700\");\r\n  const bgIconsHover = useColorModeValue(\"gray.50\", \"whiteAlpha.100\");\r\n  return (\r\n    <Flex position='relative' mb='40px'>\r\n      <Flex\r\n        minH={{ md: \"1000px\" }}\r\n        h={{ sm: \"initial\", md: \"75vh\", lg: \"85vh\" }}\r\n        w='100%'\r\n        maxW='1044px'\r\n        mx='auto'\r\n        justifyContent='space-between'\r\n        mb='30px'\r\n        pt={{ md: \"0px\" }}>\r\n        <Flex\r\n          w='100%'\r\n          h='100%'\r\n          alignItems='center'\r\n          justifyContent='center'\r\n          mb='60px'\r\n          mt={{ base: \"50px\", md: \"20px\" }}>\r\n          <Flex\r\n            zIndex='2'\r\n            direction='column'\r\n            w='445px'\r\n            background='transparent'\r\n            borderRadius='15px'\r\n            p='40px'\r\n            mx={{ base: \"100px\" }}\r\n            m={{ base: \"20px\", md: \"auto\" }}\r\n            bg={bgForm}\r\n            boxShadow={useColorModeValue(\r\n              \"0px 5px 14px rgba(0, 0, 0, 0.05)\",\r\n              \"unset\"\r\n            )}>\r\n            <Text\r\n              fontSize='xl'\r\n              color={textColor}\r\n              fontWeight='bold'\r\n              textAlign='center'\r\n              mb='22px'>\r\n              Register With\r\n            </Text>\r\n            <HStack spacing='15px' justify='center' mb='22px'>\r\n              <Flex\r\n                justify='center'\r\n                align='center'\r\n                w='75px'\r\n                h='75px'\r\n                borderRadius='8px'\r\n                border={useColorModeValue(\"1px solid\", \"0px\")}\r\n                borderColor='gray.200'\r\n                cursor='pointer'\r\n                transition='all .25s ease'\r\n                bg={bgIcons}\r\n                _hover={{ bg: bgIconsHover }}>\r\n                <Link href='#'>\r\n                  <Icon as={FaFacebook} color={colorIcons} w='30px' h='30px' />\r\n                </Link>\r\n              </Flex>\r\n              <Flex\r\n                justify='center'\r\n                align='center'\r\n                w='75px'\r\n                h='75px'\r\n                borderRadius='8px'\r\n                border={useColorModeValue(\"1px solid\", \"0px\")}\r\n                borderColor='gray.200'\r\n                cursor='pointer'\r\n                transition='all .25s ease'\r\n                bg={bgIcons}\r\n                _hover={{ bg: bgIconsHover }}>\r\n                <Link href='#'>\r\n                  <Icon\r\n                    as={FaApple}\r\n                    color={colorIcons}\r\n                    w='30px'\r\n                    h='30px'\r\n                    _hover={{ filter: \"brightness(120%)\" }}\r\n                  />\r\n                </Link>\r\n              </Flex>\r\n              <Flex\r\n                justify='center'\r\n                align='center'\r\n                w='75px'\r\n                h='75px'\r\n                borderRadius='8px'\r\n                border={useColorModeValue(\"1px solid\", \"0px\")}\r\n                borderColor='gray.200'\r\n                cursor='pointer'\r\n                transition='all .25s ease'\r\n                bg={bgIcons}\r\n                _hover={{ bg: bgIconsHover }}>\r\n                <Link href='#'>\r\n                  <Icon\r\n                    as={FaGoogle}\r\n                    color={colorIcons}\r\n                    w='30px'\r\n                    h='30px'\r\n                    _hover={{ filter: \"brightness(120%)\" }}\r\n                  />\r\n                </Link>\r\n              </Flex>\r\n            </HStack>\r\n            <Text\r\n              fontSize='lg'\r\n              color='gray.400'\r\n              fontWeight='bold'\r\n              textAlign='center'\r\n              mb='22px'>\r\n              or\r\n            </Text>\r\n            <FormControl>\r\n              <FormLabel ms='4px' fontSize='sm' fontWeight='normal'>\r\n                Name\r\n              </FormLabel>\r\n              <Input\r\n                variant='auth'\r\n                fontSize='sm'\r\n                ms='4px'\r\n                type='text'\r\n                placeholder='Your full name'\r\n                mb='24px'\r\n                size='lg'\r\n              />\r\n              <FormLabel ms='4px' fontSize='sm' fontWeight='normal'>\r\n                Password\r\n              </FormLabel>\r\n              <Input\r\n                variant='auth'\r\n                fontSize='sm'\r\n                ms='4px'\r\n                type='password'\r\n                placeholder='Your password'\r\n                mb='24px'\r\n                size='lg'\r\n              />\r\n              <FormControl display='flex' alignItems='center' mb='24px'>\r\n                <Switch id='remember-login' colorScheme='blue' me='10px' />\r\n                <FormLabel htmlFor='remember-login' mb='0' fontWeight='normal'>\r\n                  Remember me\r\n                </FormLabel>\r\n              </FormControl>\r\n              <Button\r\n                fontSize='10px'\r\n                variant='dark'\r\n                fontWeight='bold'\r\n                w='100%'\r\n                h='45'\r\n                mb='24px'>\r\n                SIGN UP\r\n              </Button>\r\n            </FormControl>\r\n            <Flex\r\n              flexDirection='column'\r\n              justifyContent='center'\r\n              alignItems='center'\r\n              maxW='100%'\r\n              mt='0px'>\r\n              <Text color={textColor} fontWeight='medium'>\r\n                Already have an account?\r\n                <Link\r\n                  color={titleColor}\r\n                  as='span'\r\n                  ms='5px'\r\n                  href='#'\r\n                  fontWeight='bold'>\r\n                  Sign In\r\n                </Link>\r\n              </Text>\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n        <Box\r\n          overflowX='hidden'\r\n          h='100%'\r\n          w='100%'\r\n          left='0px'\r\n          position='absolute'\r\n          bgImage={signInImage}>\r\n          <Box\r\n            w='100%'\r\n            h='100%'\r\n            bgSize='cover'\r\n            bg='blue.500'\r\n            opacity='0.8'></Box>\r\n        </Box>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","// Chakra imports\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  HStack,\r\n  Icon,\r\n  Input,\r\n  Link,\r\n  Switch,\r\n  Text,\r\n  useColorModeValue,\r\n  LightMode,\r\n} from \"@chakra-ui/react\";\r\n// Assets\r\nimport BgSignUp from \"assets/img/BgSignUp.png\";\r\nimport React from \"react\";\r\nimport { FaApple, FaFacebook, FaGoogle } from \"react-icons/fa\";\r\n\r\nfunction SignUp() {\r\n  const bgForm = useColorModeValue(\"white\", \"navy.800\");\r\n  const titleColor = useColorModeValue(\"gray.700\", \"blue.500\");\r\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\r\n  const colorIcons = useColorModeValue(\"gray.700\", \"white\");\r\n  const bgIcons = useColorModeValue(\"trasnparent\", \"navy.700\");\r\n  const bgIconsHover = useColorModeValue(\"gray.50\", \"whiteAlpha.100\");\r\n  return (\r\n    <Flex\r\n      direction='column'\r\n      alignSelf='center'\r\n      justifySelf='center'\r\n      overflow='hidden'>\r\n      <Box\r\n        position='absolute'\r\n        minH={{ base: \"70vh\", md: \"50vh\" }}\r\n        maxH={{ base: \"70vh\", md: \"50vh\" }}\r\n        w={{ md: \"calc(100vw - 50px)\" }}\r\n        maxW={{ md: \"calc(100vw - 50px)\" }}\r\n        left='0'\r\n        right='0'\r\n        bgRepeat='no-repeat'\r\n        overflow='hidden'\r\n        zIndex='-1'\r\n        top='0'\r\n        bgImage={BgSignUp}\r\n        bgSize='cover'\r\n        mx={{ md: \"auto\" }}\r\n        mt={{ md: \"14px\" }}\r\n        borderRadius={{ base: \"0px\", md: \"20px\" }}>\r\n        <Box w='100vw' h='100vh' bg='blue.500' opacity='0.8'></Box>\r\n      </Box>\r\n      <Flex\r\n        direction='column'\r\n        textAlign='center'\r\n        justifyContent='center'\r\n        align='center'\r\n        mt='125px'\r\n        mb='30px'>\r\n        <Text fontSize='4xl' color='white' fontWeight='bold'>\r\n          Welcome!\r\n        </Text>\r\n        <Text\r\n          fontSize='md'\r\n          color='white'\r\n          fontWeight='normal'\r\n          mt='10px'\r\n          mb='26px'\r\n          w={{ base: \"90%\", sm: \"60%\", lg: \"40%\", xl: \"333px\" }}>\r\n          Use these awesome forms to login or create new account in your project\r\n          for free.\r\n        </Text>\r\n      </Flex>\r\n      <Flex alignItems='center' justifyContent='center' mb='60px' mt='20px'>\r\n        <Flex\r\n          direction='column'\r\n          w='445px'\r\n          background='transparent'\r\n          borderRadius='15px'\r\n          p='40px'\r\n          mx={{ base: \"100px\" }}\r\n          bg={bgForm}\r\n          boxShadow={useColorModeValue(\r\n            \"0px 5px 14px rgba(0, 0, 0, 0.05)\",\r\n            \"unset\"\r\n          )}>\r\n          <Text\r\n            fontSize='xl'\r\n            color={textColor}\r\n            fontWeight='bold'\r\n            textAlign='center'\r\n            mb='22px'>\r\n            Register With\r\n          </Text>\r\n          <HStack spacing='15px' justify='center' mb='22px'>\r\n            <Flex\r\n              justify='center'\r\n              align='center'\r\n              w='75px'\r\n              h='75px'\r\n              borderRadius='8px'\r\n              border={useColorModeValue(\"1px solid\", \"0px\")}\r\n              borderColor='gray.200'\r\n              cursor='pointer'\r\n              transition='all .25s ease'\r\n              bg={bgIcons}\r\n              _hover={{ bg: bgIconsHover }}>\r\n              <Link href='#'>\r\n                <Icon as={FaFacebook} color={colorIcons} w='30px' h='30px' />\r\n              </Link>\r\n            </Flex>\r\n            <Flex\r\n              justify='center'\r\n              align='center'\r\n              w='75px'\r\n              h='75px'\r\n              borderRadius='8px'\r\n              border={useColorModeValue(\"1px solid\", \"0px\")}\r\n              borderColor='gray.200'\r\n              cursor='pointer'\r\n              transition='all .25s ease'\r\n              bg={bgIcons}\r\n              _hover={{ bg: bgIconsHover }}>\r\n              <Link href='#'>\r\n                <Icon\r\n                  as={FaApple}\r\n                  color={colorIcons}\r\n                  w='30px'\r\n                  h='30px'\r\n                  _hover={{ filter: \"brightness(120%)\" }}\r\n                />\r\n              </Link>\r\n            </Flex>\r\n            <Flex\r\n              justify='center'\r\n              align='center'\r\n              w='75px'\r\n              h='75px'\r\n              borderRadius='8px'\r\n              border={useColorModeValue(\"1px solid\", \"0px\")}\r\n              borderColor='gray.200'\r\n              cursor='pointer'\r\n              transition='all .25s ease'\r\n              bg={bgIcons}\r\n              _hover={{ bg: bgIconsHover }}>\r\n              <Link href='#'>\r\n                <Icon\r\n                  as={FaGoogle}\r\n                  color={colorIcons}\r\n                  w='30px'\r\n                  h='30px'\r\n                  _hover={{ filter: \"brightness(120%)\" }}\r\n                />\r\n              </Link>\r\n            </Flex>\r\n          </HStack>\r\n          <Text\r\n            fontSize='lg'\r\n            color='gray.400'\r\n            fontWeight='bold'\r\n            textAlign='center'\r\n            mb='22px'>\r\n            or\r\n          </Text>\r\n          <FormControl>\r\n            <FormLabel ms='4px' fontSize='sm' fontWeight='normal'>\r\n              Name\r\n            </FormLabel>\r\n            <Input\r\n              variant='auth'\r\n              fontSize='sm'\r\n              ms='4px'\r\n              type='text'\r\n              placeholder='Your full name'\r\n              mb='24px'\r\n              size='lg'\r\n            />\r\n            <FormLabel ms='4px' fontSize='sm' fontWeight='normal'>\r\n              Email\r\n            </FormLabel>\r\n            <Input\r\n              variant='auth'\r\n              fontSize='sm'\r\n              ms='4px'\r\n              type='email'\r\n              placeholder='Your email address'\r\n              mb='24px'\r\n              size='lg'\r\n            />\r\n            <FormLabel ms='4px' fontSize='sm' fontWeight='normal'>\r\n              Password\r\n            </FormLabel>\r\n            <Input\r\n              variant='auth'\r\n              fontSize='sm'\r\n              ms='4px'\r\n              type='password'\r\n              placeholder='Your password'\r\n              mb='24px'\r\n              size='lg'\r\n            />\r\n            <FormControl display='flex' alignItems='center' mb='24px'>\r\n              <Switch id='remember-login' colorScheme='blue' me='10px' />\r\n              <FormLabel htmlFor='remember-login' mb='0' fontWeight='normal'>\r\n                Remember me\r\n              </FormLabel>\r\n            </FormControl>\r\n            <Button\r\n              fontSize='10px'\r\n              variant='dark'\r\n              fontWeight='bold'\r\n              w='100%'\r\n              h='45'\r\n              mb='24px'>\r\n              SIGN UP\r\n            </Button>\r\n          </FormControl>\r\n          <Flex\r\n            flexDirection='column'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n            maxW='100%'\r\n            mt='0px'>\r\n            <Text color={textColor} fontWeight='medium'>\r\n              Already have an account?\r\n              <Link\r\n                color={titleColor}\r\n                as='span'\r\n                ms='5px'\r\n                href='#'\r\n                fontWeight='bold'>\r\n                Sign In\r\n              </Link>\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","// Chakra imports\r\nimport {\r\n    Flex,\r\n    Box,\r\n    Input,\r\n    Button,\r\n    Text,\r\n    VStack,\r\n    HStack,\r\n    Image,  // 引入 Image 元件\r\n    useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n// Custom components\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction AIChat() {\r\n    const textColor = useColorModeValue(\"gray.800\", \"white\");\r\n    const borderColor = useColorModeValue(\"gray.200\", \"gray.600\");\r\n\r\n    // 定義不同聊天室的狀態\r\n    const [selectedChat, setSelectedChat] = useState(\"ChatGpt-4o\"); // 預設選擇的聊天室\r\n    const chatOptions = [\"ChatGpt-4o\", \"ChatGpt-4o mini\"];\r\n\r\n    // 定義不同聊天室的訊息狀態\r\n    const [chatMessages, setChatMessages] = useState({\r\n        \"ChatGpt-4o\": [{ sender: \"AI\", text: \"歡迎來到 ChatGpt-4o 聊天室！\" }],\r\n        \"ChatGpt-4o mini\": [{ sender: \"AI\", text: \"歡迎來到 ChatGpt-4o mini 聊天室！\" }],\r\n    });\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    // 處理訊息發送\r\n    const handleSendMessage = () => {\r\n        if (inputValue.trim() === \"\") return;\r\n\r\n        const newMessage = { sender: \"You\", text: inputValue };\r\n\r\n        // 根據當前選擇的聊天室更新訊息\r\n        setChatMessages((prevMessages) => ({\r\n            ...prevMessages,\r\n            [selectedChat]: [...prevMessages[selectedChat], newMessage],\r\n        }));\r\n        setInputValue(\"\");\r\n    };\r\n\r\n    // 用於選擇不同聊天室時對應的圖標\r\n    const getIconForChat = (option) => {\r\n        if (option === \"ChatGpt-4o\") {\r\n            return \"/gpt-4.png\";  // 對應 GPT-4 的圖標\r\n        } else if (option === \"ChatGpt-4o mini\") {\r\n            return \"/gpt-3.5.png\"; // 對應 GPT-3.5 的圖標\r\n        }\r\n        return \"\"; // 預設返回空\r\n    };\r\n\r\n    return (\r\n        <Flex direction=\"row\" pt={{ base: \"120px\", md: \"75px\" }} gap=\"24px\">\r\n            {/* 左側選項 */}\r\n            <Card w=\"20%\" overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\r\n                <CardHeader p=\"6px 0px 22px 0px\">\r\n                    <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\r\n                        Chat Room\r\n                    </Text>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <VStack align=\"start\">\r\n                        {chatOptions.map((option) => (\r\n                            <Button\r\n                                key={option}\r\n                                w=\"full\"\r\n                                colorScheme={selectedChat === option ? \"blue\" : \"gray\"}\r\n                                onClick={() => setSelectedChat(option)}\r\n                                leftIcon={\r\n                                    <Image\r\n                                        src={getIconForChat(option)}  // 根據選項顯示對應圖標\r\n                                        boxSize=\"20px\"\r\n                                        alt={`${option} icon`}\r\n                                    />\r\n                                }\r\n                            >\r\n                                {option}\r\n                            </Button>\r\n                        ))}\r\n                    </VStack>\r\n                </CardBody>\r\n            </Card>\r\n\r\n            {/* 右側聊天室 */}\r\n            <Card w=\"80%\" overflowX={{ sm: \"scroll\", xl: \"hidden\" }} h=\"80vh\">\r\n                <CardHeader p=\"6px 0px 22px 0px\">\r\n                    <HStack>\r\n                        <Image\r\n                            src={getIconForChat(selectedChat)}  // 根據當前選擇的聊天室顯示對應圖標\r\n                            boxSize=\"24px\"\r\n                            alt={`${selectedChat} icon`}\r\n                        />\r\n                        <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\r\n                            {selectedChat} 聊天室\r\n                        </Text>\r\n                    </HStack>\r\n                </CardHeader>\r\n                <CardBody h=\"100%\">\r\n                    <Flex direction=\"column\" justifyContent=\"space-between\" h=\"100%\">\r\n                        {/* 聊天訊息區域 */}\r\n                        <Box\r\n                            border=\"1px\"\r\n                            borderColor={borderColor}\r\n                            borderRadius=\"md\"\r\n                            p=\"4\"\r\n                            mb=\"4\"\r\n                            flex=\"1\"\r\n                            overflowY=\"auto\"\r\n                        >\r\n                            <VStack align=\"start\" spacing={3}>\r\n                                {chatMessages[selectedChat].map((message, index) => (\r\n                                    <Box\r\n                                        key={index}\r\n                                        alignSelf={message.sender === \"You\" ? \"flex-end\" : \"flex-start\"}\r\n                                        bg={message.sender === \"You\" ? \"blue.500\" : \"gray.200\"}\r\n                                        color={message.sender === \"You\" ? \"white\" : \"black\"}\r\n                                        p=\"2\"\r\n                                        borderRadius=\"md\"\r\n                                        maxW=\"70%\"\r\n                                    >\r\n                                        <Text fontWeight=\"bold\">{message.sender}</Text>\r\n                                        <Text>{message.text}</Text>\r\n                                    </Box>\r\n                                ))}\r\n                            </VStack>\r\n                        </Box>\r\n\r\n                        {/* 輸入訊息框 */}\r\n                        <HStack>\r\n                            <Input\r\n                                placeholder=\"輸入訊息...\"\r\n                                value={inputValue}\r\n                                onChange={(e) => setInputValue(e.target.value)}\r\n                                borderColor={borderColor}\r\n                            />\r\n                            <Button colorScheme=\"blue\" onClick={handleSendMessage}>\r\n                                發送\r\n                            </Button>\r\n                        </HStack>\r\n                    </Flex>\r\n                </CardBody>\r\n            </Card>\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default AIChat;\r\n","// Chakra imports\r\nimport {\r\n    Flex,\r\n    Box,\r\n    Grid,\r\n    Text,\r\n    Textarea,\r\n    Button,\r\n    Stack,\r\n    useColorModeValue,\r\n    Icon\r\n} from \"@chakra-ui/react\";\r\nimport { FiFile } from \"react-icons/fi\"; // 引入文件圖示\r\n// Custom components\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction AIWrite() {\r\n    const textColor = useColorModeValue(\"gray.700\", \"white\");\r\n    const borderColor = useColorModeValue(\"gray.200\", \"gray.600\");\r\n\r\n    // State for the email content and settings\r\n    const [emailContent, setEmailContent] = useState(\"\");\r\n    const [length, setLength] = useState(\"短\");\r\n    const [format, setFormat] = useState(\"電子郵件\");\r\n    const [tone, setTone] = useState(\"正式\");\r\n    const [language, setLanguage] = useState(\"中文\");\r\n    const [copyStatus, setCopyStatus] = useState(\"複製文本\"); // 用於按鈕顯示文字\r\n\r\n    // Example function to simulate email generation\r\n    const generateEmail = () => {\r\n        let generatedContent = `這是一篇${format}，語氣${tone}，長度${length}的內容。\\n\\n${emailContent}`;\r\n        return language === \"中文\" ? generatedContent : \"This is a \" + format + \" with a \" + tone + \" tone and \" + length + \" length.\\n\\n\" + emailContent;\r\n    };\r\n\r\n    // Function to copy the generated email content to clipboard\r\n    const handleCopyToClipboard = () => {\r\n        const content = generateEmail();\r\n        navigator.clipboard.writeText(content).then(() => {\r\n            setCopyStatus(\"已複製！\"); // 更新按鈕文字\r\n            setTimeout(() => setCopyStatus(\"複製文本\"), 2000); // 2秒後恢復原文字\r\n        }, (err) => {\r\n            console.error(\"複製失敗:\", err);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\r\n            <Grid templateColumns={{ sm: \"1fr\", lg: \"1fr 1fr\" }} gap=\"24px\">\r\n                {/* 左邊的撰寫區域 */}\r\n                <Card>\r\n                    <CardHeader p=\"6px 0px 22px 0px\">\r\n                        <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\r\n                            信件撰寫\r\n                        </Text>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        {/* 撰寫信件的 Textarea */}\r\n                        <Textarea\r\n                            placeholder=\"在這裡撰寫您的信件...\"\r\n                            value={emailContent}\r\n                            onChange={(e) => setEmailContent(e.target.value)}\r\n                            borderColor={borderColor}\r\n                            mb=\"6\"\r\n                            minH=\"200px\"\r\n                        />\r\n\r\n                        {/* 選擇信件長度 */}\r\n                        <Text fontWeight=\"bold\" mb=\"2\">信件長度</Text>\r\n                        <Stack direction=\"row\" spacing={4} mb=\"4\">\r\n                            {[\"短\", \"中等\", \"長\"].map((option) => (\r\n                                <Button\r\n                                    key={option}\r\n                                    colorScheme={length === option ? \"blue\" : \"gray\"}\r\n                                    onClick={() => setLength(option)}\r\n                                >\r\n                                    {option}\r\n                                </Button>\r\n                            ))}\r\n                        </Stack>\r\n\r\n                        {/* 選擇信件格式 */}\r\n                        <Text fontWeight=\"bold\" mb=\"2\">信件格式</Text>\r\n                        <Stack direction=\"row\" spacing={4} mb=\"4\">\r\n                            {[\"電子郵件\", \"訊息\", \"評論\", \"文章\", \"想法\"].map((option) => (\r\n                                <Button\r\n                                    key={option}\r\n                                    colorScheme={format === option ? \"blue\" : \"gray\"}\r\n                                    onClick={() => setFormat(option)}\r\n                                >\r\n                                    {option}\r\n                                </Button>\r\n                            ))}\r\n                        </Stack>\r\n\r\n                        {/* 選擇語氣 */}\r\n                        <Text fontWeight=\"bold\" mb=\"2\">語氣</Text>\r\n                        <Stack direction=\"row\" spacing={4} mb=\"4\">\r\n                            {[\"正式\", \"友善\", \"隨意\", \"專業\"].map((option) => (\r\n                                <Button\r\n                                    key={option}\r\n                                    colorScheme={tone === option ? \"blue\" : \"gray\"}\r\n                                    onClick={() => setTone(option)}\r\n                                >\r\n                                    {option}\r\n                                </Button>\r\n                            ))}\r\n                        </Stack>\r\n\r\n                        {/* 選擇輸出語言 */}\r\n                        <Text fontWeight=\"bold\" mb=\"2\">輸出語言</Text>\r\n                        <Stack direction=\"row\" spacing={4} mb=\"6\">\r\n                            {[\"中文\", \"英文\"].map((option) => (\r\n                                <Button\r\n                                    key={option}\r\n                                    colorScheme={language === option ? \"blue\" : \"gray\"}\r\n                                    onClick={() => setLanguage(option)}\r\n                                >\r\n                                    {option}\r\n                                </Button>\r\n                            ))}\r\n                        </Stack>\r\n\r\n                        {/* 生成信件按鈕放在右下方 */}\r\n                        <Flex justify=\"flex-end\">\r\n                            <Button colorScheme=\"blue\" onClick={generateEmail}>\r\n                                生成信件\r\n                            </Button>\r\n                        </Flex>\r\n                    </CardBody>\r\n                </Card>\r\n\r\n                {/* 右邊的信件預覽區域 */}\r\n                <Card>\r\n                    <CardHeader p=\"6px 0px 22px 0px\" display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                        <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\r\n                            信件預覽\r\n                        </Text>\r\n                        {/* 複製按鈕 */}\r\n                        <Button\r\n                            colorScheme=\"gray\" // 淺灰色\r\n                            onClick={handleCopyToClipboard}\r\n                            leftIcon={<Icon as={FiFile} />} // 添加文件圖示\r\n                        >\r\n                            {copyStatus} {/* 顯示複製狀態 */}\r\n                        </Button>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <Textarea\r\n                            value={generateEmail()} // 使用生成信件的函數\r\n                            readOnly // 設置為只讀\r\n                            borderColor={borderColor} // 邊框顏色\r\n                            minH=\"500px\" // 增加最小高度\r\n                            resize=\"vertical\" // 允許垂直調整大小\r\n                            overflowY=\"auto\" // 垂直溢出時顯示滾動條\r\n                        />\r\n                    </CardBody>\r\n                </Card>\r\n            </Grid>\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default AIWrite;\r\n","// Chakra imports\r\nimport {\r\n    Flex,\r\n    Box,\r\n    Grid,\r\n    Text,\r\n    Textarea,\r\n    Button,\r\n    Stack,\r\n    useColorModeValue,\r\n    Icon,\r\n    Menu,\r\n    MenuButton,\r\n    MenuList,\r\n    MenuItem,\r\n    MenuDivider,\r\n} from \"@chakra-ui/react\";\r\nimport { FiFile, FiChevronDown } from \"react-icons/fi\"; // 引入文件圖示和下箭頭圖示\r\n// Custom components\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction AITranslate() {\r\n    const textColor = useColorModeValue(\"gray.700\", \"white\");\r\n    const borderColor = useColorModeValue(\"gray.200\", \"gray.600\");\r\n\r\n    // State for the input text and language settings\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [translatedText, setTranslatedText] = useState(\"\");\r\n    const [detectedLanguage, setDetectedLanguage] = useState(\"中文\");\r\n    const [targetLanguage, setTargetLanguage] = useState(\"英文\");\r\n    const [copyStatus, setCopyStatus] = useState(\"複製文本\"); // 用於按鈕顯示文字\r\n\r\n    // Example function to simulate translation\r\n    const translateText = () => {\r\n        const translation = `翻譯結果：${inputText}（從${detectedLanguage}翻譯到${targetLanguage}）`;\r\n        setTranslatedText(translation);\r\n    };\r\n\r\n    // Function to copy the translated text to clipboard\r\n    const handleCopyToClipboard = () => {\r\n        navigator.clipboard.writeText(translatedText).then(() => {\r\n            setCopyStatus(\"已複製！\"); // 更新按鈕文字\r\n            setTimeout(() => setCopyStatus(\"複製文本\"), 2000); // 2秒後恢復原文字\r\n        }, (err) => {\r\n            console.error(\"複製失敗:\", err);\r\n        });\r\n    };\r\n\r\n    // 選擇的語言選項\r\n    const languageOptions = [\"日文\", \"韓文\", \"西班牙文\", \"法文\", \"德文\"];\r\n\r\n    return (\r\n        <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\r\n            <Grid templateColumns={{ sm: \"1fr\", lg: \"1fr 1fr\" }} gap=\"24px\">\r\n                {/* 左邊的翻譯區域 */}\r\n                <Card>\r\n                    <CardHeader p=\"6px 0px 22px 0px\">\r\n                        <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\r\n                            AI翻譯 - 輸入\r\n                        </Text>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        {/* 選擇來源語言的按鈕 */}\r\n                        <Stack direction=\"row\" spacing={0} mb=\"4\">\r\n                            {[\"偵測語言\", \"中文\", \"英文\"].map((option) => (\r\n                                <Button\r\n                                    key={option}\r\n                                    colorScheme={detectedLanguage === option ? \"blue\" : \"gray\"}\r\n                                    onClick={() => setDetectedLanguage(option)}\r\n                                    borderRadius={option === \"偵測語言\" ? \"8px 0 0 8px\" : option === \"英文\" ? \"0 8px 8px 0\" : \"0\"}\r\n                                >\r\n                                    {option}\r\n                                </Button>\r\n                            ))}\r\n                        </Stack>\r\n\r\n                        {/* 輸入文字框 */}\r\n                        <Textarea\r\n                            placeholder=\"在這裡輸入文本...\"\r\n                            value={inputText}\r\n                            onChange={(e) => setInputText(e.target.value)}\r\n                            borderColor={borderColor}\r\n                            mb=\"6\"\r\n                            minH=\"300px\" // 增加最小高度\r\n                        />\r\n\r\n                        {/* 翻譯按鈕 */}\r\n                        <Flex justify=\"flex-end\">\r\n                            <Button colorScheme=\"blue\" onClick={translateText}>\r\n                                翻譯\r\n                            </Button>\r\n                        </Flex>\r\n                    </CardBody>\r\n                </Card>\r\n\r\n                {/* 右邊的翻譯結果區域 */}\r\n                <Card>\r\n                    <CardHeader p=\"6px 0px 22px 0px\">\r\n                        <Flex justify=\"space-between\" alignItems=\"center\">\r\n                            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\r\n                                AI翻譯 - 結果\r\n                            </Text>\r\n                            {/* 複製按鈕 */}\r\n                            <Button\r\n                                colorScheme=\"gray\" // 淺灰色\r\n                                onClick={handleCopyToClipboard}\r\n                                leftIcon={<Icon as={FiFile} />}\r\n                                borderRadius=\"8px\" // 設置圓角\r\n                            >\r\n                                {copyStatus} {/* 顯示複製狀態 */}\r\n                            </Button>\r\n                        </Flex>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        {/* 語言選擇按鈕 */}\r\n                        <Stack direction=\"row\" spacing={0} mb=\"4\">\r\n                            {[\"中文\", \"英文\"].map((option) => (\r\n                                <Button\r\n                                    key={option}\r\n                                    colorScheme={targetLanguage === option ? \"blue\" : \"gray\"}\r\n                                    onClick={() => setTargetLanguage(option)}\r\n                                    borderRadius={option === \"中文\" ? \"8px 0 0 8px\" : \"0\"}\r\n                                >\r\n                                    {option}\r\n                                </Button>\r\n                            ))}\r\n                            {/* 下拉選單按鈕 */}\r\n                            <Menu>\r\n                                <MenuButton\r\n                                    as={Button}\r\n                                    rightIcon={<Icon as={FiChevronDown} />}\r\n                                    colorScheme=\"gray\"\r\n                                    borderRadius=\"0 8px 8px 0\" // 設置圓角\r\n                                >\r\n                                    選擇語言\r\n                                </MenuButton>\r\n                                <MenuList>\r\n                                    {languageOptions.map((language) => (\r\n                                        <MenuItem key={language} onClick={() => setTargetLanguage(language)}>\r\n                                            {language}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </MenuList>\r\n                            </Menu>\r\n                        </Stack>\r\n\r\n                        {/* 使用 Textarea 顯示翻譯結果 */}\r\n                        <Textarea\r\n                            value={translatedText}\r\n                            readOnly\r\n                            borderColor={borderColor}\r\n                            minH=\"300px\" // 增加最小高度\r\n                            overflowY=\"auto\"\r\n                        />\r\n                    </CardBody>\r\n                </Card>\r\n            </Grid>\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default AITranslate;\r\n","import {\r\n    Flex,\r\n    Grid,\r\n    Text,\r\n    Button,\r\n    Stack,\r\n    Icon,\r\n    useColorModeValue,\r\n    Box,\r\n    Tabs,\r\n    TabList,\r\n    Tab,\r\n    TabPanels,\r\n    TabPanel\r\n} from \"@chakra-ui/react\";\r\nimport { FiPlus, FiCopy, FiDownload } from \"react-icons/fi\"; // 引入加號、複製和下載圖示\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction MeetSure() {\r\n    const textColor = useColorModeValue(\"gray.700\", \"white\");\r\n    const borderColor = useColorModeValue(\"gray.200\", \"gray.600\");\r\n\r\n    // 假設的逐字稿內容和秒數\r\n    const transcript = [\r\n        { speaker: \"演講者A\", text: \"大家好，今天我們來討論人工智能（AI）在現代科技中的應用。AI 已經逐漸成為我們生活中不可或缺的一部分。\", time: \"00:05\" },\r\n        { speaker: \"演講者B\", text: \"是的，尤其是機器學習和自然語言處理技術的發展，讓許多傳統行業也開始採用 AI 來提升效率。\", time: \"00:10\" },\r\n        { speaker: \"演講者A\", text: \"像是在醫療領域，我們已經看到了 AI 幫助診斷疾病、分析醫療數據的成功案例。\", time: \"00:20\" },\r\n        { speaker: \"演講者B\", text: \"不僅如此，AI 在自動駕駛、語音識別、甚至是在創意產業中也有許多創新的應用。\", time: \"00:30\" },\r\n        { speaker: \"演講者A\", text: \"AI 還可以自動生成文本和圖像，這對於創意工作者來說也是一大助力。\", time: \"00:45\" },\r\n        { speaker: \"演講者B\", text: \"未來 AI 的應用範圍會越來越廣，我們可能會看到更多令人驚艷的突破。\", time: \"01:00\" },\r\n        { speaker: \"演講者A\", text: \"我們的生活方式也會隨著這些技術的發展而發生根本性的變化。\", time: \"01:15\" },\r\n        { speaker: \"演講者B\", text: \"是的，AI 已經改變了我們的溝通方式，像語音助手就是一個很好的例子。\", time: \"01:30\" },\r\n        { speaker: \"演講者A\", text: \"沒錯，AI 幫助我們自動化了很多日常工作，提升了生產力。\", time: \"01:45\" },\r\n        { speaker: \"演講者B\", text: \"總而言之，未來我們可以期待 AI 帶來更多便捷與創新。\", time: \"02:00\" },\r\n    ];\r\n\r\n    // 狀態管理 - 複製按鈕文字\r\n    const [copyText, setCopyText] = useState(\"複製文本\");\r\n\r\n    // 複製文本到剪貼簿\r\n    const handleCopy = () => {\r\n        const allText = transcript.map(entry => `${entry.speaker}: ${entry.text} (${entry.time})`).join(\"\\n\");\r\n        navigator.clipboard.writeText(allText);\r\n        setCopyText(\"已複製！\"); // 更改按鈕文字\r\n        setTimeout(() => setCopyText(\"複製文本\"), 2000); // 2 秒後恢復原始文字\r\n    };\r\n\r\n    // 下載文本文件\r\n    const handleDownload = () => {\r\n        const allText = transcript.map(entry => `${entry.speaker}: ${entry.text} (${entry.time})`).join(\"\\n\");\r\n        const blob = new Blob([allText], { type: \"text/plain\" });\r\n        const link = document.createElement(\"a\");\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = \"transcript.txt\";\r\n        link.click();\r\n    };\r\n\r\n    return (\r\n        <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\r\n            {/* 上方的單一 Card */}\r\n            <Grid templateColumns=\"1fr\" gap=\"24px\" mb=\"24px\">\r\n                <Card>\r\n                    <CardHeader p=\"6px 0px 22px 0px\">\r\n                        <Flex justify=\"space-between\" alignItems=\"center\">\r\n                            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\r\n                                新增會議影音連接\r\n                            </Text>\r\n                            {/* +號按鈕 */}\r\n                            <Button colorScheme=\"blue\" leftIcon={<Icon as={FiPlus} />}>\r\n                                新增連接\r\n                            </Button>\r\n                        </Flex>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <Text>點擊上方按鈕新增會議影音連接。</Text>\r\n                    </CardBody>\r\n                </Card>\r\n            </Grid>\r\n\r\n            {/* 下方並排的兩個 Card */}\r\n            <Grid templateColumns={{ sm: \"1fr\", lg: \"1fr 1fr\" }} gap=\"24px\">\r\n                {/* 左邊的逐字稿 Card */}\r\n                <Card>\r\n                    <CardHeader p=\"6px 0px 22px 0px\">\r\n                        <Flex justify=\"space-between\" alignItems=\"center\">\r\n                            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\r\n                                逐字稿\r\n                            </Text>\r\n                            {/* 複製文本和下載按鈕 */}\r\n                            <Stack direction=\"row\" spacing={4}>\r\n                                <Button\r\n                                    onClick={handleCopy}\r\n                                    leftIcon={<Icon as={FiCopy} />}\r\n                                    backgroundColor=\"gray.200\" // 灰色背景\r\n                                    color=\"black\" // 黑色文字\r\n                                    _hover={{ bg: \"gray.300\" }} // 滑鼠懸停效果\r\n                                    variant=\"solid\"\r\n                                >\r\n                                    {copyText}\r\n                                </Button>\r\n                                <Button\r\n                                    onClick={handleDownload}\r\n                                    leftIcon={<Icon as={FiDownload} />}\r\n                                    backgroundColor=\"gray.200\" // 灰色背景\r\n                                    color=\"black\" // 黑色文字\r\n                                    _hover={{ bg: \"gray.300\" }} // 滑鼠懸停效果\r\n                                    variant=\"solid\"\r\n                                >\r\n                                    下載.txt\r\n                                </Button>\r\n                            </Stack>\r\n                        </Flex>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        {/* 限制高度並允許滾動，自定義滾動條 */}\r\n                        <Box\r\n                            maxH=\"500px\" // 最大高度\r\n                            overflowY=\"auto\" // 垂直滾動\r\n                            border=\"1px solid\"\r\n                            borderColor={borderColor}\r\n                            borderRadius=\"md\"\r\n                            p=\"4\"\r\n                            css={{\r\n                                \"&::-webkit-scrollbar\": {\r\n                                    width: \"8px\",\r\n                                },\r\n                                \"&::-webkit-scrollbar-thumb\": {\r\n                                    background: \"#888\",\r\n                                    borderRadius: \"10px\",\r\n                                },\r\n                                \"&::-webkit-scrollbar-thumb:hover\": {\r\n                                    background: \"#555\",\r\n                                },\r\n                            }}\r\n                        >\r\n                            {transcript.map((entry, index) => (\r\n                                <Flex key={index} mb=\"4\">\r\n                                    {/* 左邊的藍色垂直線 */}\r\n                                    <Box\r\n                                        width=\"4px\"\r\n                                        bg=\"blue.500\"\r\n                                        borderRadius=\"full\"\r\n                                        mr=\"4\"\r\n                                    ></Box>\r\n                                    {/* 右邊的文字部分 */}\r\n                                    <Flex direction=\"column\" width=\"100%\">\r\n                                        <Flex justify=\"space-between\" mb=\"1\">\r\n                                            {/* 演講者和時間戳 */}\r\n                                            <Text fontWeight=\"bold\" color={textColor}>\r\n                                                {entry.speaker}\r\n                                            </Text>\r\n                                            <Text color=\"gray.500\">{entry.time}</Text>\r\n                                        </Flex>\r\n                                        {/* 逐字稿內容 */}\r\n                                        <Text>{entry.text}</Text>\r\n                                    </Flex>\r\n                                </Flex>\r\n                            ))}\r\n                        </Box>\r\n                    </CardBody>\r\n                </Card>\r\n\r\n                {/* 右邊的AI分析 Card */}\r\n                <Card>\r\n                    <CardHeader p=\"6px 0px 22px 0px\">\r\n                        <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\r\n                            AI分析\r\n                        </Text>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        {/* 使用 Tabs 組件分成三個 Tab */}\r\n                        <Tabs variant=\"enclosed\">\r\n                            <TabList>\r\n                                <Tab>摘要</Tab>\r\n                                <Tab>代辦事項</Tab>\r\n                                <Tab>主題</Tab>\r\n                            </TabList>\r\n                            <TabPanels>\r\n                                <TabPanel>\r\n                                    <Text>\r\n                                        本次討論主要集中在 AI 技術的發展及其應用，包括醫療、教育和自動駕駛等領域。隨著技術的進步，未來的可能性無限。\r\n                                    </Text>\r\n                                </TabPanel>\r\n                                <TabPanel>\r\n                                    <Text>\r\n                                        - [ ] 確認 AI 技術的應用案例\r\n                                        <br />\r\n                                        - [ ] 探討未來的發展方向\r\n                                        <br />\r\n                                        - [ ] 研究 AI 在各行業的影響\r\n                                    </Text>\r\n                                </TabPanel>\r\n                                <TabPanel>\r\n                                    <Text>\r\n                                        - 人工智能\r\n                                        <br />\r\n                                        - 機器學習\r\n                                        <br />\r\n                                        - 自然語言處理\r\n                                        <br />\r\n                                        - 自動駕駛\r\n                                        <br />\r\n                                        - 創意產業\r\n                                    </Text>\r\n                                </TabPanel>\r\n                            </TabPanels>\r\n                        </Tabs>\r\n                    </CardBody>\r\n                </Card>\r\n            </Grid>\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default MeetSure;\r\n","// import\r\nimport React, { Component } from 'react';\r\nimport Dashboard from \"views/Dashboard/Dashboard.js\";\r\nimport Tables from \"views/Dashboard/Tables.js\";\r\nimport Billing from \"views/Dashboard/Billing.js\";\r\nimport RTLPage from \"views/RTL/RTLPage.js\";\r\nimport Profile from \"views/Dashboard/Profile.js\";\r\nimport SignIn from \"views/Pages/SignIn.js\";\r\nimport SignUp from \"views/Pages/SignUp.js\";\r\nimport AIChat from \"views/Dashboard/AIChat.js\";\r\nimport AIWrite from \"views/Dashboard/AIWrite.js\";\r\nimport AITranslate from \"views/Dashboard/AITranslate.js\";\r\nimport MeetSure from \"views/Dashboard/MeetSure.js\";\r\n\r\nimport {\r\n  HomeIcon,\r\n  StatsIcon,\r\n  CreditIcon,\r\n  PersonIcon,\r\n  DocumentIcon,\r\n  RocketIcon,\r\n  SupportIcon,\r\n  ChatIcon,\r\n  PenIcon,\r\n  GlobeIcon,\r\n} from \"components/Icons/Icons\";\r\n\r\nvar dashRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"主控版\",\r\n    rtlName: \"Dashboard\",\r\n    icon: <HomeIcon color='inherit' />,\r\n    component: Dashboard,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/meetsure\",\r\n    name: \"MeetSure\",\r\n    rtlName: \"MeetSure\",\r\n    icon: <DocumentIcon color='inherit' />,\r\n    component: MeetSure,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/tables\",\r\n    name: \"媒體庫\",\r\n    rtlName: \"لوحة القيادة\",\r\n    icon: <StatsIcon color='inherit' />,\r\n    component: Tables,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/profile\",\r\n    name: \"個人檔案\",\r\n    rtlName: \"Profile\",\r\n    icon: <PersonIcon color='inherit' />,\r\n    secondaryNavbar: true,\r\n    component: Profile,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/signin\",\r\n    name: \"Sign In\",\r\n    rtlName: \"لوحة القيادة\",\r\n    icon: <RocketIcon color='inherit' />,\r\n    component: SignIn,\r\n    layout: \"/auth\",\r\n  },\r\n  {\r\n    path: \"/signup\",\r\n    name: \"Sign Up\",\r\n    rtlName: \"لوحة القيادة\",\r\n    icon: <RocketIcon color='inherit' />,\r\n    component: SignUp,\r\n    layout: \"/auth\",\r\n  },\r\n  // {\r\n  //   path: \"/billing\",\r\n  //   name: \"Billing\",\r\n  //   rtlName: \"لوحة القيادة\",\r\n  //   icon: <CreditIcon color='inherit' />,\r\n  //   component: Billing,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/rtl-support-page\",\r\n  //   name: \"RTL\",\r\n  //   rtlName: \"آرتيإل\",\r\n  //   icon: <SupportIcon color='inherit' />,\r\n  //   component: RTLPage,\r\n  //   layout: \"/rtl\",\r\n  // },\r\n  {\r\n    name: \"AI TOOLS\",\r\n    category: \"account\",\r\n    rtlName: \"AI TOOLS\",\r\n    state: \"pageCollapse\",\r\n    views: [\r\n      {\r\n        path: \"/aiwrite\",\r\n        name: \"AI 寫作\",\r\n        rtlName: \"AI Write\",\r\n        icon: <PenIcon color='inherit' />,\r\n        component: AIWrite,\r\n        layout: \"/admin\",\r\n      },\r\n      {\r\n        path: \"/aichat\",\r\n        name: \"AI 聊天室\",\r\n        rtlName: \"AI Chat\",\r\n        icon: <ChatIcon color='inherit' />,\r\n        component: AIChat,\r\n        layout: \"/admin\",\r\n      },\r\n      {\r\n        path: \"/aitranslate\",\r\n        name: \"AI 翻譯\",\r\n        rtlName: \"AI Translate\",\r\n        icon: <GlobeIcon color='inherit' />,\r\n        component: AITranslate,\r\n        layout: \"/admin\",\r\n      },\r\n    ],\r\n  },\r\n];\r\nexport default dashRoutes;\r\n","// Chakra imports\r\nimport {\r\n  Avatar,\r\n  AvatarGroup,\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Grid,\r\n  Icon,\r\n  Image,\r\n  Progress,\r\n  SimpleGrid,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  Table,\r\n  Tbody,\r\n  Td,\r\n  Text,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n  useColorMode,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n// Custom components\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody\";\r\nimport CardHeader from \"components/Card/CardHeader\";\r\nimport BarChart from \"components/Charts/BarChart\";\r\nimport LineChart from \"components/Charts/LineChart\";\r\nimport IconBox from \"components/Icons/IconBox\";\r\n// Custom icons\r\nimport {\r\n  CartIcon,\r\n  DocumentIcon,\r\n  GlobeIcon,\r\n  WalletIcon,\r\n} from \"components/Icons/Icons.js\";\r\nimport React from \"react\";\r\n// Variables\r\nimport {\r\n  barChartData,\r\n  barChartOptions,\r\n  lineChartData,\r\n  lineChartOptions,\r\n} from \"variables/charts\";\r\nimport { pageVisits, socialTraffic } from \"variables/general\";\r\n\r\n// Assets\r\nimport avatar2 from \"assets/img/avatars/avatar2.png\";\r\nimport avatar3 from \"assets/img/avatars/avatar3.png\";\r\nimport avatar4 from \"assets/img/avatars/avatar4.png\";\r\nimport avatar5 from \"assets/img/avatars/avatar5.png\";\r\nimport avatar6 from \"assets/img/avatars/avatar6.png\";\r\nimport ImageArchitect1 from \"assets/img/ImageArchitect1.png\";\r\nimport ImageArchitect2 from \"assets/img/ImageArchitect2.png\";\r\nimport ImageArchitect3 from \"assets/img/ImageArchitect3.png\";\r\n\r\nimport {\r\n  FaPlus,\r\n} from \"react-icons/fa\";\r\nimport { IoDocumentsSharp } from \"react-icons/io5\";\r\n\r\nexport default function Dashboard() {\r\n  // Chakra Color Mode\r\n  const iconBlue = useColorModeValue(\"blue.500\", \"blue.500\");\r\n  const iconBoxInside = useColorModeValue(\"white\", \"white\");\r\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\r\n  const tableRowColor = useColorModeValue(\"#F7FAFC\", \"navy.900\");\r\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.600\");\r\n  const textTableColor = useColorModeValue(\"gray.500\", \"white\");\r\n\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Flex flexDirection='column' pt={{ base: \"120px\", md: \"75px\" }}>\r\n      <SimpleGrid columns={{ sm: 1, md: 2, xl: 4 }} spacing='24px' mb='20px'>\r\n        <Card minH='125px'>\r\n          <Flex direction='column'>\r\n            <Flex\r\n              flexDirection='row'\r\n              align='center'\r\n              justify='center'\r\n              w='100%'\r\n              mb='25px'>\r\n              <Stat me='auto'>\r\n                <StatLabel\r\n                  fontSize='xs'\r\n                  color='gray.400'\r\n                  fontWeight='bold'\r\n                  textTransform='uppercase'>\r\n                  Today's Money\r\n                </StatLabel>\r\n                <Flex>\r\n                  <StatNumber fontSize='lg' color={textColor} fontWeight='bold'>\r\n                    $53,897\r\n                  </StatNumber>\r\n                </Flex>\r\n              </Stat>\r\n              <IconBox\r\n                borderRadius='50%'\r\n                as='box'\r\n                h={\"45px\"}\r\n                w={\"45px\"}\r\n                bg={iconBlue}>\r\n                <WalletIcon h={\"24px\"} w={\"24px\"} color={iconBoxInside} />\r\n              </IconBox>\r\n            </Flex>\r\n            <Text color='gray.400' fontSize='sm'>\r\n              <Text as='span' color='green.400' fontWeight='bold'>\r\n                +3.48%{\" \"}\r\n              </Text>\r\n              Since last month\r\n            </Text>\r\n          </Flex>\r\n        </Card>\r\n        <Card minH='125px'>\r\n          <Flex direction='column'>\r\n            <Flex\r\n              flexDirection='row'\r\n              align='center'\r\n              justify='center'\r\n              w='100%'\r\n              mb='25px'>\r\n              <Stat me='auto'>\r\n                <StatLabel\r\n                  fontSize='xs'\r\n                  color='gray.400'\r\n                  fontWeight='bold'\r\n                  textTransform='uppercase'>\r\n                  Today's Users\r\n                </StatLabel>\r\n                <Flex>\r\n                  <StatNumber fontSize='lg' color={textColor} fontWeight='bold'>\r\n                    $3,200\r\n                  </StatNumber>\r\n                </Flex>\r\n              </Stat>\r\n              <IconBox\r\n                borderRadius='50%'\r\n                as='box'\r\n                h={\"45px\"}\r\n                w={\"45px\"}\r\n                bg={iconBlue}>\r\n                <GlobeIcon h={\"24px\"} w={\"24px\"} color={iconBoxInside} />\r\n              </IconBox>\r\n            </Flex>\r\n            <Text color='gray.400' fontSize='sm'>\r\n              <Text as='span' color='green.400' fontWeight='bold'>\r\n                +5.2%{\" \"}\r\n              </Text>\r\n              Since last month\r\n            </Text>\r\n          </Flex>\r\n        </Card>\r\n        <Card minH='125px'>\r\n          <Flex direction='column'>\r\n            <Flex\r\n              flexDirection='row'\r\n              align='center'\r\n              justify='center'\r\n              w='100%'\r\n              mb='25px'>\r\n              <Stat me='auto'>\r\n                <StatLabel\r\n                  fontSize='xs'\r\n                  color='gray.400'\r\n                  fontWeight='bold'\r\n                  textTransform='uppercase'>\r\n                  New Clients\r\n                </StatLabel>\r\n                <Flex>\r\n                  <StatNumber fontSize='lg' color={textColor} fontWeight='bold'>\r\n                    +2,503\r\n                  </StatNumber>\r\n                </Flex>\r\n              </Stat>\r\n              <IconBox\r\n                borderRadius='50%'\r\n                as='box'\r\n                h={\"45px\"}\r\n                w={\"45px\"}\r\n                bg={iconBlue}>\r\n                <DocumentIcon h={\"24px\"} w={\"24px\"} color={iconBoxInside} />\r\n              </IconBox>\r\n            </Flex>\r\n            <Text color='gray.400' fontSize='sm'>\r\n              <Text as='span' color='red.500' fontWeight='bold'>\r\n                -2.82%{\" \"}\r\n              </Text>\r\n              Since last month\r\n            </Text>\r\n          </Flex>\r\n        </Card>\r\n        <Card minH='125px'>\r\n          <Flex direction='column'>\r\n            <Flex\r\n              flexDirection='row'\r\n              align='center'\r\n              justify='center'\r\n              w='100%'\r\n              mb='25px'>\r\n              <Stat me='auto'>\r\n                <StatLabel\r\n                  fontSize='xs'\r\n                  color='gray.400'\r\n                  fontWeight='bold'\r\n                  textTransform='uppercase'>\r\n                  Total Sales\r\n                </StatLabel>\r\n                <Flex>\r\n                  <StatNumber fontSize='lg' color={textColor} fontWeight='bold'>\r\n                    $173,000\r\n                  </StatNumber>\r\n                </Flex>\r\n              </Stat>\r\n              <IconBox\r\n                borderRadius='50%'\r\n                as='box'\r\n                h={\"45px\"}\r\n                w={\"45px\"}\r\n                bg={iconBlue}>\r\n                <CartIcon h={\"24px\"} w={\"24px\"} color={iconBoxInside} />\r\n              </IconBox>\r\n            </Flex>\r\n            <Text color='gray.400' fontSize='sm'>\r\n              <Text as='span' color='green.400' fontWeight='bold'>\r\n                +8.12%{\" \"}\r\n              </Text>\r\n              Since last month\r\n            </Text>\r\n          </Flex>\r\n        </Card>\r\n      </SimpleGrid>\r\n\r\n      <Card p='16px' my='24px'>\r\n        <CardHeader p='12px 5px' mb='12px'>\r\n          <Flex direction='column'>\r\n            <Text fontSize='lg' color={textColor} fontWeight='bold'>\r\n              Projects\r\n            </Text>\r\n            <Text fontSize='sm' color='gray.400' fontWeight='400'>\r\n              正在進行分析的項目\r\n            </Text>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody px='5px'>\r\n          <Grid\r\n            templateColumns={{ sm: \"1fr\", md: \"1fr 1fr\", xl: \"repeat(4, 1fr)\" }}\r\n            templateRows={{ sm: \"1fr 1fr 1fr auto\", md: \"1fr 1fr\", xl: \"1fr\" }}\r\n            gap='24px'>\r\n            <Button\r\n              p='0px'\r\n              bg='transparent'\r\n              border='1px solid lightgray'\r\n              borderRadius='15px'\r\n              minHeight={{ sm: \"200px\", md: \"100%\" }}>\r\n              <Flex direction='column' justifyContent='center' align='center'>\r\n                <Icon as={FaPlus} color={textColor} fontSize='lg' mb='12px' />\r\n                <Text fontSize='lg' color={textColor} fontWeight='bold'>\r\n                  Create a New Project\r\n                </Text>\r\n              </Flex>\r\n            </Button>\r\n            <Flex direction='column'>\r\n              <Box mb='20px' position='relative' borderRadius='15px'>\r\n                <Image src={ImageArchitect1} borderRadius='15px' />\r\n                <Box\r\n                  w='100%'\r\n                  h='100%'\r\n                  position='absolute'\r\n                  top='0'\r\n                  borderRadius='15px'\r\n                  bg='linear-gradient(360deg, rgba(49, 56, 96, 0.16) 0%, rgba(21, 25, 40, 0.88) 100%)'></Box>\r\n              </Box>\r\n              <Flex direction='column'>\r\n                <Text fontSize='md' color='gray.400' fontWeight='600' mb='10px'>\r\n                  Project #1\r\n                </Text>\r\n                <Text\r\n                  fontSize='xl'\r\n                  color={textColor}\r\n                  fontWeight='bold'\r\n                  mb='10px'>\r\n                  Modern\r\n                </Text>\r\n                <Text fontSize='md' color='gray.400' fontWeight='400' mb='20px'>\r\n                  As Uber works through a huge amount of internal management\r\n                  turmoil.\r\n                </Text>\r\n                <Flex justifyContent='space-between'>\r\n                  <Button variant='dark' minW='110px' h='36px'>\r\n                    VIEW ALL\r\n                  </Button>\r\n                  <AvatarGroup size='xs'>\r\n                    <Avatar name='Ryan Florence' src={avatar6} />\r\n                    <Avatar name='Segun Adebayo' src={avatar2} />\r\n                    <Avatar name='Kent Dodds' src={avatar3} />\r\n                    <Avatar name='Prosper Otemuyiwa' src={avatar4} />\r\n                  </AvatarGroup>\r\n                </Flex>\r\n              </Flex>\r\n            </Flex>\r\n            <Flex direction='column'>\r\n              <Box mb='20px' position='relative' borderRadius='15px'>\r\n                <Image src={ImageArchitect2} borderRadius='15px' />\r\n                <Box\r\n                  w='100%'\r\n                  h='100%'\r\n                  position='absolute'\r\n                  top='0'\r\n                  borderRadius='15px'\r\n                  bg='linear-gradient(360deg, rgba(49, 56, 96, 0.16) 0%, rgba(21, 25, 40, 0.88) 100%)'></Box>\r\n              </Box>\r\n              <Flex direction='column'>\r\n                <Text fontSize='md' color='gray.400' fontWeight='600' mb='10px'>\r\n                  Project #2\r\n                </Text>\r\n                <Text\r\n                  fontSize='xl'\r\n                  color={textColor}\r\n                  fontWeight='bold'\r\n                  mb='10px'>\r\n                  Scandinavian\r\n                </Text>\r\n                <Text fontSize='md' color='gray.400' fontWeight='400' mb='20px'>\r\n                  Music is something that every person has his or her own\r\n                  specific opinion about.\r\n                </Text>\r\n                <Flex justifyContent='space-between'>\r\n                  <Button variant='dark' minW='110px' h='36px'>\r\n                    VIEW ALL\r\n                  </Button>\r\n                  <AvatarGroup size='xs'>\r\n                    <Avatar name='Ryan Florence' src={avatar6} />\r\n                    <Avatar name='Segun Adebayo' src={avatar2} />\r\n                    <Avatar name='Kent Dodds' src={avatar3} />\r\n                    <Avatar name='Prosper Otemuyiwa' src={avatar4} />\r\n                  </AvatarGroup>\r\n                </Flex>\r\n              </Flex>\r\n            </Flex>\r\n            <Flex direction='column'>\r\n              <Box mb='20px' position='relative' borderRadius='15px'>\r\n                <Image src={ImageArchitect3} borderRadius='15px' />\r\n                <Box\r\n                  w='100%'\r\n                  h='100%'\r\n                  position='absolute'\r\n                  top='0'\r\n                  borderRadius='15px'\r\n                  bg='linear-gradient(360deg, rgba(49, 56, 96, 0.16) 0%, rgba(21, 25, 40, 0.88) 100%)'></Box>\r\n              </Box>\r\n              <Flex direction='column'>\r\n                <Text fontSize='md' color='gray.400' fontWeight='600' mb='10px'>\r\n                  Project #3\r\n                </Text>\r\n                <Text\r\n                  fontSize='xl'\r\n                  color={textColor}\r\n                  fontWeight='bold'\r\n                  mb='10px'>\r\n                  Minimalist\r\n                </Text>\r\n                <Text fontSize='md' color='gray.400' fontWeight='400' mb='20px'>\r\n                  Different people have different taste, especially various\r\n                  types of music.\r\n                </Text>\r\n                <Flex justifyContent='space-between'>\r\n                  <Button variant='dark' minW='110px' h='36px'>\r\n                    VIEW ALL\r\n                  </Button>\r\n                  <AvatarGroup size='xs'>\r\n                    <Avatar name='Ryan Florence' src={avatar6} />\r\n                    <Avatar name='Segun Adebayo' src={avatar2} />\r\n                    <Avatar name='Kent Dodds' src={avatar3} />\r\n                    <Avatar name='Prosper Otemuyiwa' src={avatar4} />\r\n                  </AvatarGroup>\r\n                </Flex>\r\n              </Flex>\r\n            </Flex>\r\n          </Grid>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Grid\r\n        templateColumns={{ sm: \"1fr\", lg: \"2fr 1fr\" }}\r\n        templateRows={{ lg: \"repeat(2, auto)\" }}\r\n        gap='20px'>\r\n        <Card\r\n          bg={\r\n            colorMode === \"dark\"\r\n              ? \"navy.800\"\r\n              : \"linear-gradient(81.62deg, #313860 2.25%, #151928 79.87%)\"\r\n          }\r\n          p='0px'\r\n          maxW={{ sm: \"320px\", md: \"100%\" }}>\r\n          <Flex direction='column' mb='40px' p='28px 0px 0px 22px'>\r\n            <Text color='#fff' fontSize='lg' fontWeight='bold' mb='6px'>\r\n              Sales Overview\r\n            </Text>\r\n            <Text color='#fff' fontSize='sm'>\r\n              <Text as='span' color='green.400' fontWeight='bold'>\r\n                (+5) more{\" \"}\r\n              </Text>\r\n              in 2022\r\n            </Text>\r\n          </Flex>\r\n          <Box minH='300px'>\r\n            <LineChart\r\n              chartData={lineChartData}\r\n              chartOptions={lineChartOptions}\r\n            />\r\n          </Box>\r\n        </Card>\r\n        <Card p='0px' maxW={{ sm: \"320px\", md: \"100%\" }}>\r\n          <Flex direction='column' mb='40px' p='28px 0px 0px 22px'>\r\n            <Text color='gray.400' fontSize='sm' fontWeight='bold' mb='6px'>\r\n              PERFORMANCE\r\n            </Text>\r\n            <Text color={textColor} fontSize='lg' fontWeight='bold'>\r\n              Total orders\r\n            </Text>\r\n          </Flex>\r\n          <Box minH='300px'>\r\n            <BarChart chartData={barChartData} chartOptions={barChartOptions} />\r\n          </Box>\r\n        </Card>\r\n        <Card p='0px' maxW={{ sm: \"320px\", md: \"100%\" }}>\r\n          <Flex direction='column'>\r\n            <Flex align='center' justify='space-between' p='22px'>\r\n              <Text fontSize='lg' color={textColor} fontWeight='bold'>\r\n                Page visits\r\n              </Text>\r\n              <Button variant='primary' maxH='30px'>\r\n                SEE ALL\r\n              </Button>\r\n            </Flex>\r\n            <Box overflow={{ sm: \"scroll\", lg: \"hidden\" }}>\r\n              <Table>\r\n                <Thead>\r\n                  <Tr bg={tableRowColor}>\r\n                    <Th color='gray.400' borderColor={borderColor}>\r\n                      Page name\r\n                    </Th>\r\n                    <Th color='gray.400' borderColor={borderColor}>\r\n                      Visitors\r\n                    </Th>\r\n                    <Th color='gray.400' borderColor={borderColor}>\r\n                      Unique users\r\n                    </Th>\r\n                    <Th color='gray.400' borderColor={borderColor}>\r\n                      Bounce rate\r\n                    </Th>\r\n                  </Tr>\r\n                </Thead>\r\n                <Tbody>\r\n                  {pageVisits.map((el, index, arr) => {\r\n                    return (\r\n                      <Tr key={index}>\r\n                        <Td\r\n                          color={textTableColor}\r\n                          fontSize='sm'\r\n                          fontWeight='bold'\r\n                          borderColor={borderColor}\r\n                          border={index === arr.length - 1 ? \"none\" : null}>\r\n                          {el.pageName}\r\n                        </Td>\r\n                        <Td\r\n                          color={textTableColor}\r\n                          fontSize='sm'\r\n                          border={index === arr.length - 1 ? \"none\" : null}\r\n                          borderColor={borderColor}>\r\n                          {el.visitors}\r\n                        </Td>\r\n                        <Td\r\n                          color={textTableColor}\r\n                          fontSize='sm'\r\n                          border={index === arr.length - 1 ? \"none\" : null}\r\n                          borderColor={borderColor}>\r\n                          {el.uniqueUsers}\r\n                        </Td>\r\n                        <Td\r\n                          color={textTableColor}\r\n                          fontSize='sm'\r\n                          border={index === arr.length - 1 ? \"none\" : null}\r\n                          borderColor={borderColor}>\r\n                          {el.bounceRate}\r\n                        </Td>\r\n                      </Tr>\r\n                    );\r\n                  })}\r\n                </Tbody>\r\n              </Table>\r\n            </Box>\r\n          </Flex>\r\n        </Card>\r\n        <Card p='0px' maxW={{ sm: \"320px\", md: \"100%\" }}>\r\n          <Flex direction='column'>\r\n            <Flex align='center' justify='space-between' p='22px'>\r\n              <Text fontSize='lg' color={textColor} fontWeight='bold'>\r\n                Social traffic\r\n              </Text>\r\n              <Button variant='primary' maxH='30px'>\r\n                SEE ALL\r\n              </Button>\r\n            </Flex>\r\n          </Flex>\r\n          <Box overflow={{ sm: \"scroll\", lg: \"hidden\" }}>\r\n            <Table>\r\n              <Thead>\r\n                <Tr bg={tableRowColor}>\r\n                  <Th color='gray.400' borderColor={borderColor}>\r\n                    Referral\r\n                  </Th>\r\n                  <Th color='gray.400' borderColor={borderColor}>\r\n                    Visitors\r\n                  </Th>\r\n                  <Th color='gray.400' borderColor={borderColor}></Th>\r\n                </Tr>\r\n              </Thead>\r\n              <Tbody>\r\n                {socialTraffic.map((el, index, arr) => {\r\n                  return (\r\n                    <Tr key={index}>\r\n                      <Td\r\n                        color={textTableColor}\r\n                        fontSize='sm'\r\n                        fontWeight='bold'\r\n                        borderColor={borderColor}\r\n                        border={index === arr.length - 1 ? \"none\" : null}>\r\n                        {el.referral}\r\n                      </Td>\r\n                      <Td\r\n                        color={textTableColor}\r\n                        fontSize='sm'\r\n                        borderColor={borderColor}\r\n                        border={index === arr.length - 1 ? \"none\" : null}>\r\n                        {el.visitors}\r\n                      </Td>\r\n                      <Td\r\n                        color={textTableColor}\r\n                        fontSize='sm'\r\n                        borderColor={borderColor}\r\n                        border={index === arr.length - 1 ? \"none\" : null}>\r\n                        <Flex align='center'>\r\n                          <Text\r\n                            color={textTableColor}\r\n                            fontWeight='bold'\r\n                            fontSize='sm'\r\n                            me='12px'>{`${el.percentage}%`}</Text>\r\n                          <Progress\r\n                            size='xs'\r\n                            colorScheme={el.color}\r\n                            value={el.percentage}\r\n                            minW='120px'\r\n                          />\r\n                        </Flex>\r\n                      </Td>\r\n                    </Tr>\r\n                  );\r\n                })}\r\n              </Tbody>\r\n            </Table>\r\n          </Box>\r\n        </Card>\r\n      </Grid>\r\n    </Flex>\r\n  );\r\n}\r\n","// Chakra imports\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  HStack,\r\n  Link, Stack, Text, useColorMode, useColorModeValue\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  ArgonLogoDark,\r\n  ArgonLogoLight,\r\n  ChakraLogoBlue, ChakraLogoDark,\r\n  ChakraLogoLight, DocumentIcon,\r\n  HomeIcon,\r\n  PersonIcon,\r\n  RocketIcon\r\n} from \"components/Icons/Icons\";\r\nimport { SidebarResponsive } from \"components/Sidebar/Sidebar\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport routes from \"routes.js\";\r\nexport default function AuthNavbar(props) {\r\n  const { logo, logoText, secondary, ...rest } = props;\r\n  const { colorMode } = useColorMode();\r\n  // Chakra color mode\r\n  let mainText = \"white\";\r\n  let navbarIcon = \"white\";\r\n  let navbarBg = \"none\";\r\n  let navbarBorder = \"none\";\r\n  let navbarShadow = \"initial\";\r\n  let navbarFilter = \"initial\";\r\n  let navbarBackdrop = \"none\";\r\n  let bgButton = useColorModeValue(\"white\", \"navy.900\");\r\n  let colorButton = useColorModeValue(\"gray.700\", \"white\");\r\n  let navbarPosition = \"absolute\";\r\n  let hamburgerColor = {\r\n    base: useColorModeValue(\"gray.700\", \"white\"),\r\n    md: \"white\",\r\n  };\r\n  let brand = (\r\n    <Link\r\n      href={`${process.env.PUBLIC_URL}/#/`}\r\n      target=\"_blank\"\r\n      display=\"flex\"\r\n      lineHeight=\"100%\"\r\n      fontWeight=\"bold\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      color={mainText}\r\n    >\r\n      <Stack direction=\"row\" spacing=\"12px\" align=\"center\" justify=\"center\">\r\n        <ArgonLogoLight w=\"74px\" h=\"27px\" />\r\n        <Box w=\"1px\" h=\"20px\" bg={\"white\"} />\r\n        <ChakraLogoBlue w=\"82px\" h=\"21px\" />\r\n      </Stack>\r\n      <Text fontsize=\"sm\" mt=\"3px\">\r\n        {logoText}\r\n      </Text>\r\n    </Link>\r\n  );\r\n  hamburgerColor = { base: \"white\" };\r\n  var linksAuth = (\r\n    <HStack display={{ sm: \"none\", lg: \"flex\" }}>\r\n      <NavLink to=\"/admin/dashboard\">\r\n        <Button\r\n          fontSize=\"sm\"\r\n          ms=\"0px\"\r\n          me=\"0px\"\r\n          px=\"0px\"\r\n          me={{ sm: \"2px\", md: \"16px\" }}\r\n          color={navbarIcon}\r\n          variant=\"no-effects\"\r\n          leftIcon={<HomeIcon color={navbarIcon} w=\"12px\" h=\"12px\" me=\"0px\" />}\r\n        >\r\n          <Text>Dashboard</Text>\r\n        </Button>\r\n      </NavLink>\r\n      <NavLink to=\"/admin/profile\">\r\n        <Button\r\n          fontSize=\"sm\"\r\n          ms=\"0px\"\r\n          me=\"0px\"\r\n          px=\"0px\"\r\n          me={{ sm: \"2px\", md: \"16px\" }}\r\n          color={navbarIcon}\r\n          variant=\"no-effects\"\r\n          leftIcon={\r\n            <PersonIcon color={navbarIcon} w=\"12px\" h=\"12px\" me=\"0px\" />\r\n          }\r\n        >\r\n          <Text>Profile</Text>\r\n        </Button>\r\n      </NavLink>\r\n      <NavLink to=\"/auth/signup\">\r\n        <Button\r\n          fontSize=\"sm\"\r\n          ms=\"0px\"\r\n          me=\"0px\"\r\n          px=\"0px\"\r\n          me={{ sm: \"2px\", md: \"16px\" }}\r\n          color={navbarIcon}\r\n          variant=\"no-effects\"\r\n          leftIcon={\r\n            <RocketIcon color={navbarIcon} w=\"12px\" h=\"12px\" me=\"0px\" />\r\n          }\r\n        >\r\n          <Text>Sign Up</Text>\r\n        </Button>\r\n      </NavLink>\r\n      <NavLink to=\"/auth/signin\">\r\n        <Button\r\n          fontSize=\"sm\"\r\n          ms=\"0px\"\r\n          px=\"0px\"\r\n          me={{ sm: \"2px\", md: \"16px\" }}\r\n          color={navbarIcon}\r\n          variant=\"no-effects\"\r\n          leftIcon={\r\n            <DocumentIcon color={navbarIcon} w=\"12px\" h=\"12px\" me=\"0px\" />\r\n          }\r\n        >\r\n          <Text>Sign In</Text>\r\n        </Button>\r\n      </NavLink>\r\n    </HStack>\r\n  );\r\n  return (\r\n    <Flex\r\n      position={navbarPosition}\r\n      top=\"16px\"\r\n      left=\"50%\"\r\n      transform=\"translate(-50%, 0px)\"\r\n      background={navbarBg}\r\n      border={navbarBorder}\r\n      boxShadow={navbarShadow}\r\n      filter={navbarFilter}\r\n      backdropFilter={navbarBackdrop}\r\n      borderRadius=\"15px\"\r\n      px=\"16px\"\r\n      py=\"22px\"\r\n      mx=\"auto\"\r\n      width=\"1044px\"\r\n      maxW=\"90%\"\r\n      alignItems=\"center\"\r\n      zIndex=\"3\"\r\n    >\r\n      <Flex w=\"100%\" justifyContent={{ sm: \"start\", lg: \"space-between\" }}>\r\n        {brand}\r\n        <Box\r\n          ms={{ base: \"auto\", lg: \"0px\" }}\r\n          display={{ base: \"flex\", lg: \"none\" }}\r\n        >\r\n          <SidebarResponsive\r\n            hamburgerColor={hamburgerColor}\r\n            logoText={props.logoText}\r\n            secondary={props.secondary}\r\n            routes={routes}\r\n            logo={\r\n              <Stack\r\n                direction=\"row\"\r\n                spacing=\"12px\"\r\n                align=\"center\"\r\n                justify=\"center\"\r\n              >\r\n                {colorMode === \"dark\" ? (\r\n                  <ArgonLogoLight w=\"74px\" h=\"27px\" />\r\n                ) : (\r\n                  <ArgonLogoDark w=\"74px\" h=\"27px\" />\r\n                )}\r\n                <Box\r\n                  w=\"1px\"\r\n                  h=\"20px\"\r\n                  bg={colorMode === \"dark\" ? \"white\" : \"gray.700\"}\r\n                />\r\n                {colorMode === \"dark\" ? (\r\n                  <ChakraLogoLight w=\"82px\" h=\"21px\" />\r\n                ) : (\r\n                  <ChakraLogoDark w=\"82px\" h=\"21px\" />\r\n                )}\r\n              </Stack>\r\n            }\r\n            {...rest}\r\n          />\r\n        </Box>\r\n        {linksAuth}\r\n        <Link href=\"https://creative-tim.com/product/argon-dashboard-chakra\">\r\n          <Button\r\n            bg={bgButton}\r\n            color={colorButton}\r\n            fontSize=\"xs\"\r\n            variant=\"no-hover\"\r\n            px=\"30px\"\r\n            display={{\r\n              sm: \"none\",\r\n              lg: \"flex\",\r\n            }}\r\n          >\r\n            Free Download\r\n          </Button>\r\n        </Link>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n","// Chakra Imports\r\nimport {\r\n  Box,\r\n  Button,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerCloseButton,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  Flex, Link,\r\n  Switch,\r\n  Text,\r\n  useColorMode,\r\n  useColorModeValue\r\n} from \"@chakra-ui/react\";\r\nimport { HSeparator } from \"components/Separator/Separator\";\r\nimport React, { useState } from \"react\";\r\nimport GitHubButton from \"react-github-btn\";\r\nimport { FaFacebook, FaTwitter } from \"react-icons/fa\";\r\n\r\nexport default function Configurator(props) {\r\n  const {\r\n    sidebarVariant,\r\n    setSidebarVariant,\r\n    secondary,\r\n    isOpen,\r\n    onClose,\r\n    fixed,\r\n    ...rest\r\n  } = props;\r\n  const [switched, setSwitched] = useState(props.isChecked);\r\n\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  let bgButton = useColorModeValue(\r\n    \"linear-gradient(81.62deg, #313860 2.25%, #151928 79.87%)\",\r\n    \"white\"\r\n  );\r\n  let colorButton = useColorModeValue(\"white\", \"gray.700\");\r\n  const secondaryButtonBg = useColorModeValue(\"white\", \"transparent\");\r\n  const secondaryButtonBorder = useColorModeValue(\"gray.700\", \"white\");\r\n  const secondaryButtonColor = useColorModeValue(\"gray.700\", \"white\");\r\n  const bgDrawer = useColorModeValue(\"white\", \"navy.800\");\r\n  const settingsRef = React.useRef();\r\n  return (\r\n    <>\r\n      <Drawer\r\n        isOpen={props.isOpen}\r\n        onClose={props.onClose}\r\n        placement={document.documentElement.dir === \"rtl\" ? \"left\" : \"right\"}\r\n        finalFocusRef={settingsRef}\r\n        blockScrollOnMount={false}\r\n      >\r\n        <DrawerContent bg={bgDrawer}>\r\n          <DrawerHeader pt=\"24px\" px=\"24px\">\r\n            <DrawerCloseButton />\r\n            <Text fontSize=\"xl\" fontWeight=\"bold\" mt=\"16px\">\r\n              Argon Chakra Configurator\r\n            </Text>\r\n            <Text fontSize=\"md\" mb=\"16px\">\r\n              See your dashboard options.\r\n            </Text>\r\n            <HSeparator />\r\n          </DrawerHeader>\r\n          <DrawerBody w=\"340px\" ps=\"24px\" pe=\"40px\">\r\n            <Flex flexDirection=\"column\">\r\n              <Flex justifyContent=\"space-between \" mb=\"16px\">\r\n                <Text fontSize=\"md\" fontWeight=\"600\" mb=\"4px\">\r\n                  Navbar Fixed\r\n                </Text>\r\n                <Switch\r\n                  colorScheme=\"blue\"\r\n                  isChecked={switched}\r\n                  onChange={() => {\r\n                    if (switched === true) {\r\n                      props.onSwitch(false);\r\n                      setSwitched(false);\r\n                    } else {\r\n                      props.onSwitch(true);\r\n                      setSwitched(true);\r\n                    }\r\n                  }}\r\n                />\r\n              </Flex>\r\n              <Flex\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                mb=\"24px\"\r\n              >\r\n                <Text fontSize=\"md\" fontWeight=\"600\" mb=\"4px\">\r\n                  Dark/Light\r\n                </Text>\r\n                <Button\r\n                  onClick={toggleColorMode}\r\n                  color={colorMode === \"light\" ? \"Dark\" : \"Light\"}\r\n                >\r\n                  Toggle {colorMode === \"light\" ? \"Dark\" : \"Light\"}\r\n                </Button>\r\n              </Flex>\r\n\r\n              <HSeparator />\r\n              <Box mt=\"24px\">\r\n                <Box>\r\n                  <Link\r\n                    href=\"https://www.creative-tim.com/product/argon-dashboard-chakra?ref=creativetim-pud\"\r\n                    w=\"100%\"\r\n                    mb=\"16px\"\r\n                  >\r\n                    <Button\r\n                      w=\"100%\"\r\n                      mb=\"16px\"\r\n                      bg={bgButton}\r\n                      color={colorButton}\r\n                      fontSize=\"xs\"\r\n                      variant=\"no-effects\"\r\n                      px=\"30px\"\r\n                    >\r\n                      Free Download\r\n                    </Button>\r\n                  </Link>\r\n                  <Link\r\n                    href=\"https://demos.creative-tim.com/docs-argon-dashboard-chakra/?ref=creativetim-pud\"\r\n                    w=\"100%\"\r\n                  >\r\n                    <Button\r\n                      w=\"100%\"\r\n                      bg={secondaryButtonBg}\r\n                      border=\"1px solid\"\r\n                      borderColor={secondaryButtonBorder}\r\n                      color={secondaryButtonColor}\r\n                      fontSize=\"xs\"\r\n                      variant=\"no-effects\"\r\n                      px=\"20px\"\r\n                      mb=\"16px\"\r\n                    >\r\n                      <Text textDecorationColor=\"none\">Documentation</Text>\r\n                    </Button>\r\n                  </Link>\r\n                </Box>\r\n                <Flex\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  w=\"100%\"\r\n                  mb=\"16px\"\r\n                >\r\n                  <GitHubButton\r\n                    href=\"https://github.com/creativetimofficial/argon-dashboard-chakra\"\r\n                    data-icon=\"octicon-star\"\r\n                    data-show-count=\"true\"\r\n                    aria-label=\"Star creativetimofficial/argon-dashboard-chakra on GitHub\"\r\n                  >\r\n                    Star\r\n                  </GitHubButton>\r\n                </Flex>\r\n                <Box w=\"100%\">\r\n                  <Text mb=\"6px\" textAlign=\"center\">\r\n                    Thank you for sharing!\r\n                  </Text>\r\n                  <Flex justifyContent=\"center\" alignContent=\"center\">\r\n                    <Link\r\n                      isExternal=\"true\"\r\n                      href=\"https://twitter.com/intent/tweet?url=https://www.creative-tim.com/product/argon-dashboard-chakra/&text=Check%20Argon%20Dashboard%20Chakra%20made%20by%20@simmmple_web%20and%20@CreativeTim\"\r\n                    >\r\n                      <Button\r\n                        colorScheme=\"twitter\"\r\n                        leftIcon={<FaTwitter />}\r\n                        me=\"10px\"\r\n                      >\r\n                        <Text>Tweet</Text>\r\n                      </Button>\r\n                    </Link>\r\n                    <Link\r\n                      isExternal=\"true\"\r\n                      href=\"https://www.facebook.com/sharer/sharer.php?u=https://www.creative-tim.com/product/argon-dashboard-chakra/\"\r\n                    >\r\n                      <Button colorScheme=\"facebook\" leftIcon={<FaFacebook />}>\r\n                        <Text>Share</Text>\r\n                      </Button>\r\n                    </Link>\r\n                  </Flex>\r\n                </Box>\r\n              </Box>\r\n            </Flex>\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","// chakra imports\r\nimport { Avatar, Flex, Text, useColorModeValue } from \"@chakra-ui/react\";\r\nimport { ClockIcon } from \"components/Icons/Icons\";\r\nimport React from \"react\";\r\n\r\nexport function ItemContent(props) {\r\n  const navbarIcon = useColorModeValue(\"gray.500\", \"gray.200\");\r\n  const notificationColor = useColorModeValue(\"gray.700\", \"white\");\r\n  const spacing = \" \";\r\n  return (\r\n    <>\r\n      <Avatar\r\n        name={props.aName}\r\n        src={props.aSrc}\r\n        borderRadius=\"12px\"\r\n        me=\"16px\"\r\n      />\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"14px\" mb=\"5px\" color={notificationColor}>\r\n          <Text fontWeight=\"bold\" fontSize=\"14px\" as=\"span\">\r\n            {props.boldInfo}\r\n            {spacing}\r\n          </Text>\r\n          {props.info}\r\n        </Text>\r\n        <Flex alignItems=\"center\">\r\n          <ClockIcon color={navbarIcon} w=\"13px\" h=\"13px\" me=\"3px\" />\r\n          <Text fontSize=\"xs\" lineHeight=\"100%\" color={navbarIcon}>\r\n            {props.time}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nexport function SearchBar(props) {\r\n  // Pass the computed styles into the `__css` prop\r\n  const { variant, children, ...rest } = props;\r\n  // Chakra Color Mode\r\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\r\n  const inputBg = useColorModeValue(\"white\", \"navy.800\");\r\n  return (\r\n    <InputGroup borderRadius='8px' w='200px' {...rest}>\r\n      <InputLeftElement\r\n        children={\r\n          <IconButton\r\n            bg='inherit'\r\n            borderRadius='inherit'\r\n            _hover='none'\r\n            _active={{\r\n              bg: \"inherit\",\r\n              transform: \"none\",\r\n              borderColor: \"transparent\",\r\n            }}\r\n            _focus={{\r\n              boxShadow: \"none\",\r\n            }}\r\n            icon={\r\n              <SearchIcon color={searchIconColor} w='15px' h='15px' />\r\n            }></IconButton>\r\n        }\r\n      />\r\n      <Input\r\n        variant='search'\r\n        fontSize='xs'\r\n        bg={inputBg}\r\n        placeholder='Type here...'\r\n      />\r\n    </InputGroup>\r\n  );\r\n}\r\n","// Chakra Icons\r\nimport { BellIcon } from \"@chakra-ui/icons\";\r\n// Chakra Imports\r\nimport {\r\n  Box, Button,\r\n  Flex,\r\n  Menu,\r\n  MenuButton,\r\n  MenuItem,\r\n  MenuList, Stack, Text, useColorMode,\r\n  useColorModeValue\r\n} from \"@chakra-ui/react\";\r\n// Assets\r\nimport avatar1 from \"assets/img/avatars/avatar1.png\";\r\nimport avatar2 from \"assets/img/avatars/avatar2.png\";\r\nimport avatar3 from \"assets/img/avatars/avatar3.png\";\r\n// Custom Icons\r\nimport { ArgonLogoDark, ArgonLogoLight, ChakraLogoDark, ChakraLogoLight, ProfileIcon, SettingsIcon } from \"components/Icons/Icons\";\r\n// Custom Components\r\nimport { ItemContent } from \"components/Menu/ItemContent\";\r\nimport { SearchBar } from \"components/Navbars/SearchBar/SearchBar\";\r\nimport { SidebarResponsive } from \"components/Sidebar/Sidebar\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport routes from \"routes.js\";\r\n\r\nexport default function HeaderLinks(props) {\r\n  const {\r\n    variant,\r\n    children,\r\n    fixed,\r\n    scrolled,\r\n    secondary,\r\n    onOpen,\r\n    ...rest\r\n  } = props;\r\n\r\n  const { colorMode } = useColorMode();\r\n\r\n  // Chakra Color Mode\r\n  const navbarIconWhenFixedAndScrolled = useColorModeValue(\"gray.700\", \"gray.200\");\r\n  const navbarIconDefault = useColorModeValue(\"white\", \"gray.200\");\r\n  const menuBg = useColorModeValue(\"white\", \"navy.800\");\r\n\r\n  // 設置樣式變量\r\n  let navbarIcon = fixed && scrolled ? navbarIconWhenFixedAndScrolled : navbarIconDefault;\r\n  if (secondary) {\r\n    navbarIcon = \"white\";\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      pe={{ sm: \"0px\", md: \"16px\" }}\r\n      w={{ sm: \"100%\", md: \"auto\" }}\r\n      alignItems='center'\r\n      flexDirection='row'>\r\n      <SearchBar me='18px' />\r\n      <NavLink to='/auth/signin'>\r\n        <Button\r\n          ms='0px'\r\n          px='0px'\r\n          me={{ sm: \"2px\", md: \"16px\" }}\r\n          color={navbarIcon}\r\n          variant='no-effects'\r\n          rightIcon={\r\n            document.documentElement.dir ? (\r\n              \"\"\r\n            ) : (\r\n              <ProfileIcon color={navbarIcon} w='22px' h='22px' me='0px' />\r\n            )\r\n          }\r\n          leftIcon={\r\n            document.documentElement.dir ? (\r\n              <ProfileIcon color={navbarIcon} w='22px' h='22px' me='0px' />\r\n            ) : (\r\n              \"\"\r\n            )\r\n          }>\r\n          <Text display={{ sm: \"none\", md: \"flex\" }}>Sign In</Text>\r\n        </Button>\r\n      </NavLink>\r\n      <SidebarResponsive\r\n        hamburgerColor={\"white\"}\r\n        logo={\r\n          <Stack direction='row' spacing='12px' align='center' justify='center'>\r\n            {colorMode === \"dark\" ? (\r\n              <ArgonLogoLight w='74px' h='27px' />\r\n            ) : (\r\n              <ArgonLogoDark w='74px' h='27px' />\r\n            )}\r\n            <Box\r\n              w='1px'\r\n              h='20px'\r\n              bg={colorMode === \"dark\" ? \"white\" : \"gray.700\"}\r\n            />\r\n            {colorMode === \"dark\" ? (\r\n              <ChakraLogoLight w='82px' h='21px' />\r\n            ) : (\r\n              <ChakraLogoDark w='82px' h='21px' />\r\n            )}\r\n          </Stack>\r\n        }\r\n        colorMode={colorMode}\r\n        secondary={props.secondary}\r\n        routes={routes}\r\n        {...rest}\r\n      />\r\n      <SettingsIcon\r\n        cursor='pointer'\r\n        ms={{ base: \"16px\", xl: \"0px\" }}\r\n        me='16px'\r\n        onClick={props.onOpen}\r\n        color={navbarIcon}\r\n        w='18px'\r\n        h='18px'\r\n      />\r\n      <Menu>\r\n        <MenuButton>\r\n          <BellIcon color={navbarIcon} w='18px' h='18px' />\r\n        </MenuButton>\r\n        <MenuList p='16px 8px' bg={menuBg}>\r\n          <Flex flexDirection='column'>\r\n            <MenuItem borderRadius='8px' mb='10px'>\r\n              <ItemContent\r\n                time='13 minutes ago'\r\n                info='from Alicia'\r\n                boldInfo='New Message'\r\n                aName='Alicia'\r\n                aSrc={avatar1}\r\n              />\r\n            </MenuItem>\r\n            <MenuItem borderRadius='8px' mb='10px'>\r\n              <ItemContent\r\n                time='2 days ago'\r\n                info='by Josh Henry'\r\n                boldInfo='New Album'\r\n                aName='Josh Henry'\r\n                aSrc={avatar2}\r\n              />\r\n            </MenuItem>\r\n            <MenuItem borderRadius='8px'>\r\n              <ItemContent\r\n                time='3 days ago'\r\n                info='Payment succesfully completed!'\r\n                boldInfo=''\r\n                aName='Kara'\r\n                aSrc={avatar3}\r\n              />\r\n            </MenuItem>\r\n          </Flex>\r\n        </MenuList>\r\n      </Menu>\r\n    </Flex>\r\n  );\r\n}\r\n","// Import React and necessary hooks\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n// Import Chakra UI components\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Link,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\n// Import custom components if any\r\nimport AdminNavbarLinks from \"./AdminNavbarLinks\"; // 假设这个路径是正确的\r\n\r\nexport default function AdminNavbar(props) {\r\n  const [scrolled, setScrolled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", changeNavbar);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", changeNavbar);\r\n    };\r\n  });\r\n\r\n  const {\r\n    variant,\r\n    children,\r\n    fixed,\r\n    secondary,\r\n    brandText,\r\n    onOpen,\r\n    ...rest\r\n  } = props;\r\n\r\n  // Use useColorModeValue hooks outside of any conditionals\r\n  const gray700orGray200 = useColorModeValue(\"gray.700\", \"gray.200\");\r\n  const whiteOrGray200 = useColorModeValue(\"white\", \"gray.200\");\r\n  const boxShadowLight = useColorModeValue(\"0px 7px 23px rgba(0, 0, 0, 0.05)\", \"none\");\r\n  const backgroundLight = useColorModeValue(\r\n    \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.82) 0%, rgba(255, 255, 255, 0.8) 110.84%)\",\r\n    \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.21) 0%, rgba(255, 255, 255, 0) 110.84%)\"\r\n  );\r\n  const borderLight = useColorModeValue(\"#FFFFFF\", \"rgba(255, 255, 255, 0.31)\");\r\n  const dropShadowDark = useColorModeValue(\r\n    \"none\",\r\n    \"drop-shadow(0px 7px 23px rgba(0, 0, 0, 0.05))\"\r\n  );\r\n\r\n  // Conditional values based on state or props\r\n  let mainText = fixed && scrolled ? gray700orGray200 : whiteOrGray200;\r\n  let secondaryText = fixed && scrolled ? gray700orGray200 : whiteOrGray200;\r\n  let navbarPosition = \"absolute\";\r\n  let navbarFilter = \"none\";\r\n  let navbarBackdrop = \"none\";\r\n  let navbarShadow = \"none\";\r\n  let navbarBg = \"none\";\r\n  let navbarBorder = \"transparent\";\r\n  let secondaryMargin = \"0px\";\r\n  let paddingX = \"15px\";\r\n\r\n  if (fixed === true && scrolled === true) {\r\n    navbarPosition = \"fixed\";\r\n    navbarShadow = boxShadowLight;\r\n    navbarBg = backgroundLight;\r\n    navbarBorder = borderLight;\r\n    navbarFilter = dropShadowDark;\r\n  }\r\n\r\n  if (props.secondary) {\r\n    navbarBackdrop = \"none\";\r\n    navbarPosition = \"absolute\";\r\n    mainText = \"white\";\r\n    secondaryText = \"white\";\r\n    secondaryMargin = \"22px\";\r\n    paddingX = \"30px\";\r\n  }\r\n\r\n  const changeNavbar = () => {\r\n    if (window.scrollY > 1) {\r\n      setScrolled(true);\r\n    } else {\r\n      setScrolled(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      position={navbarPosition}\r\n      boxShadow={navbarShadow}\r\n      bg={navbarBg}\r\n      borderColor={navbarBorder}\r\n      filter={navbarFilter}\r\n      backdropFilter={navbarBackdrop}\r\n      borderWidth=\"1.5px\"\r\n      borderStyle=\"solid\"\r\n      transitionDelay=\"0s, 0s, 0s, 0s\"\r\n      transitionDuration=\"0.25s, 0.25s, 0.25s, 0s\"\r\n      transition-property=\"box-shadow, background-color, filter, border\"\r\n      transitionTimingFunction=\"linear, linear, linear, linear\"\r\n      alignItems={{ xl: \"center\" }}\r\n      borderRadius=\"16px\"\r\n      display=\"flex\"\r\n      minH=\"75px\"\r\n      justifyContent={{ xl: \"center\" }}\r\n      lineHeight=\"25.6px\"\r\n      mx=\"auto\"\r\n      mt={secondaryMargin}\r\n      pb=\"8px\"\r\n      left={document.documentElement.dir === \"rtl\" ? \"30px\" : \"\"}\r\n      right={document.documentElement.dir === \"rtl\" ? \"\" : \"30px\"}\r\n      px={{\r\n        sm: paddingX,\r\n        md: \"30px\",\r\n      }}\r\n      ps={{\r\n        xl: \"12px\",\r\n      }}\r\n      pt=\"8px\"\r\n      top=\"18px\"\r\n      w={{ sm: \"calc(100vw - 30px)\", xl: \"calc(100vw - 75px - 275px)\" }}\r\n    >\r\n      <Flex\r\n        w=\"100%\"\r\n        flexDirection={{\r\n          sm: \"column\",\r\n          md: \"row\",\r\n        }}\r\n        alignItems={{ xl: \"center\" }}\r\n      >\r\n        <Box mb={{ sm: \"8px\", md: \"0px\" }}>\r\n          <Breadcrumb>\r\n            <BreadcrumbItem color={mainText}>\r\n              <BreadcrumbLink href=\"#\" color={secondaryText}>\r\n                Pages\r\n              </BreadcrumbLink>\r\n            </BreadcrumbItem>\r\n\r\n            <BreadcrumbItem color={mainText}>\r\n              <BreadcrumbLink href=\"#\" color={mainText}>\r\n                {brandText}\r\n              </BreadcrumbLink>\r\n            </BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <Link\r\n            color={mainText}\r\n            href=\"#\"\r\n            bg=\"inherit\"\r\n            borderRadius=\"inherit\"\r\n            fontWeight=\"bold\"\r\n            _hover={{ color: mainText }}\r\n            _active={{\r\n              bg: \"inherit\",\r\n              transform: \"none\",\r\n              borderColor: \"transparent\",\r\n            }}\r\n            _focus={{\r\n              boxShadow: \"none\",\r\n            }}\r\n          >\r\n            {brandText}\r\n          </Link>\r\n        </Box>\r\n        <Box ms=\"auto\" w={{ sm: \"100%\", md: \"unset\" }}>\r\n          <AdminNavbarLinks\r\n            onOpen={props.onOpen}\r\n            logoText={props.logoText}\r\n            secondary={props.secondary}\r\n            fixed={props.fixed}\r\n            scrolled={scrolled}\r\n          />\r\n        </Box>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n","// Chakra Imports\r\nimport { Button, useColorModeValue } from \"@chakra-ui/react\";\r\n// Custom Icons\r\nimport { SettingsIcon } from \"components/Icons/Icons\";\r\nimport React from \"react\";\r\n\r\nexport default function FixedPlugin(props) {\r\n  const { secondary, onChange, onSwitch, fixed, ...rest } = props;\r\n  // Chakra Color Mode\r\n  let navbarIcon = useColorModeValue(\"gray.500\", \"gray.200\");\r\n  let bgButton = useColorModeValue(\"white\", \"gray.600\");\r\n  let fixedDisplay = \"flex\";\r\n  if (props.secondary) {\r\n    fixedDisplay = \"none\";\r\n  }\r\n\r\n  const settingsRef = React.useRef();\r\n  return (\r\n    <>\r\n      <Button\r\n        h=\"52px\"\r\n        w=\"52px\"\r\n        onClick={props.onOpen}\r\n        bg={bgButton}\r\n        position=\"fixed\"\r\n        variant=\"no-hover\"\r\n        left={document.documentElement.dir === \"rtl\" ? \"35px\" : \"\"}\r\n        right={document.documentElement.dir === \"rtl\" ? \"\" : \"35px\"}\r\n        bottom=\"30px\"\r\n        borderRadius=\"50px\"\r\n        boxShadow=\"0 2px 12px 0 rgb(0 0 0 / 16%)\"\r\n      >\r\n        <SettingsIcon\r\n          cursor=\"pointer\"\r\n          ref={settingsRef}\r\n          color={navbarIcon}\r\n          w=\"20px\"\r\n          h=\"20px\"\r\n        />\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nimport React, { Component }  from 'react';\r\nfunction MainPanel(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"MainPanel\", { variant });\r\n  // Pass the computed styles into the `__css` prop\r\n  return (\r\n    <Box __css={styles} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MainPanel;\r\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nimport React, { Component }  from 'react';\r\nfunction PanelContainer(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"PanelContainer\", { variant });\r\n  // Pass the computed styles into the `__css` prop\r\n  return (\r\n    <Box __css={styles} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default PanelContainer;\r\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nimport React, { Component }  from 'react';\r\nfunction PanelContent(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"PanelContent\", { variant });\r\n  // Pass the computed styles into the `__css` prop\r\n  return (\r\n    <Box __css={styles} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default PanelContent;\r\n","import { CacheProvider } from \"@emotion/react\";\r\nimport React, { Component }  from 'react';\r\nimport createCache from \"@emotion/cache\";\r\nimport rtl from \"stylis-plugin-rtl\";\r\n// NB: A unique `key` is important for it to work!\r\nconst options = {\r\n  rtl: { key: \"css-ar\", stylisPlugins: [rtl] },\r\n  ltr: { key: \"css-en\" },\r\n};\r\nexport function RtlProvider({ children }) {\r\n  const dir = document.documentElement.dir == \"ar\" ? \"rtl\" : \"ltr\";\r\n  const cache = createCache(options[dir]);\r\n  return <CacheProvider value={cache} children={children} />;\r\n}\r\n","import { mode } from \"@chakra-ui/theme-tools\";\r\n\r\nexport const globalStyles = {\r\n  colors: {\r\n    gray: {\r\n      700: \"#1f2733\",\r\n    },\r\n    navy: {\r\n      50: \"#d0dcfb\",\r\n      100: \"#aac0fe\",\r\n      200: \"#a3b9f8\",\r\n      300: \"#728fea\",\r\n      400: \"#3652ba\",\r\n      500: \"#1b3bbb\",\r\n      600: \"#24388a\",\r\n      600: \"#24388a\",\r\n      700: \"#1b254b\",\r\n      800: \"#111c44\",\r\n      900: \"#0b1437\",\r\n    },\r\n  },\r\n  styles: {\r\n    global: (props) => ({\r\n      body: {\r\n        overflowX: \"hidden\",\r\n        bg: mode(\"gray.50\", \"#1B254B\")(props),\r\n        fontFamily: \"Helvetica, sans-serif\",\r\n      },\r\n      html: {\r\n        fontFamily: \"Helvetica, sans-serif\",\r\n      },\r\n    }),\r\n  },\r\n};\r\n","// 1. Import the utilities\r\nimport { createBreakpoints } from \"@chakra-ui/theme-tools\";\r\n// 2. Update the breakpoints as key-value pairs\r\nexport const breakpoints = createBreakpoints({\r\n  sm: \"375px\",\r\n  md: \"768px\",\r\n  lg: \"1024px\",\r\n  xl: \"1440px\",\r\n  \"2xl\": \"1680px\",\r\n});\r\n","import { mode } from \"@chakra-ui/theme-tools\";\r\nexport const buttonStyles = {\r\n  components: {\r\n    Button: {\r\n      variants: {\r\n        primary: {\r\n          fontSize: \"10px\",\r\n          bg: \"blue.400\",\r\n          color: \"#fff\",\r\n          _hover: { bg: \"blue.300\" },\r\n          _focus: { bg: \"blue.300\" },\r\n          _active: { bg: \"blue.300\" },\r\n        },\r\n        navy: {\r\n          fontSize: \"10px\",\r\n          bg: \"navy.900\",\r\n          color: \"#fff\",\r\n          _hover: { bg: \"navy.900\" },\r\n          _focus: { bg: \"navy.900\" },\r\n          _active: { bg: \"navy.900\" },\r\n        },\r\n        \"no-effects\": {\r\n          _hover: \"none\",\r\n          _active: \"none\",\r\n          _focus: \"none\",\r\n        },\r\n        danger: () => ({\r\n          color: \"white\",\r\n          bg: \"red.500\",\r\n          fontSize: \"10px\",\r\n          _hover: \"red.400\",\r\n          _focus: \"red.400\",\r\n          _active: \"red.400\",\r\n        }),\r\n        outlined: (props) => ({\r\n          color: mode(\"blue.400\", \"white\")(props),\r\n          bg: \"transparent\",\r\n          fontSize: \"10px\",\r\n          border: \"1px solid\",\r\n          borderColor: { bg: mode(\"blue.400\", \"white\")(props)},\r\n          _hover: { bg: mode(\"blue.50\", \"transparent\")(props) },\r\n          _focus: { bg: mode(\"blue.50\", \"transparent\")(props) },\r\n          _active: { bg: mode(\"blue.50\", \"transparent\")(props) },\r\n        }),\r\n        dark: (props) => ({\r\n          color: \"white\",\r\n          bg: mode(\"gray.700\", \"blue.500\")(props),\r\n          fontSize: \"10px\",\r\n          _hover: { bg: mode(\"gray.700\", \"blue.500\")(props) },\r\n          _focus: { bg: mode(\"gray.700\", \"blue.600\")(props) },\r\n          _active: { bg: mode(\"gray.700\", \"blue.400\")(props) },\r\n        }),\r\n        light: (props) => ({\r\n          color: mode(\"gray.700\", \"gray.700\")(props),\r\n          bg: mode(\"gray.100\", \"white\")(props),\r\n          fontSize: \"10px\",\r\n          _hover: { bg: mode(\"gray.50\", \"white\")(props) },\r\n          _focus: { bg: mode(\"gray.50\", \"white\")(props) },\r\n          _active: { bg: mode(\"gray.50\", \"white\")(props) },\r\n        }),\r\n      },\r\n      baseStyle: {\r\n        fontWeight: \"bold\",\r\n        borderRadius: \"8px\",\r\n        fontSize: \"10px\",\r\n      },\r\n    },\r\n  },\r\n};","import { mode } from \"@chakra-ui/theme-tools\";\r\nexport const inputStyles = {\r\n  components: {\r\n    Input: {\r\n      baseStyle: {\r\n        field: {\r\n          fontWeight: 400,\r\n        },\r\n      },\r\n\r\n      variants: {\r\n        auth: (props) => ({\r\n          field: {\r\n            bg: mode(\"white\", \"navy.700\")(props),\r\n            border: \"1px solid\",\r\n            borderColor: mode(\"gray.200\", \"transparent\")(props),\r\n            _placeholder: { color: mode(\"gray.300\", \"gray.400\")(props) },\r\n          },\r\n        }),\r\n        search: (props) => ({\r\n          field: {\r\n            border: \"none\",\r\n            py: \"11px\",\r\n            borderRadius: \"inherit\",\r\n            _placeholder: { color: mode(\"gray.300\", \"gray.400\")(props) },\r\n          },\r\n        }),\r\n      },\r\n    },\r\n  },\r\n};\r\n","const Card = {\r\n  baseStyle: {\r\n    p: \"22px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n    boxShadow: \"0px 5px 14px rgba(0, 0, 0, 0.05)\",\r\n    borderRadius: \"20px\",\r\n    position: \"relative\",\r\n    wordWrap: \"break-word\",\r\n    backgroundClip: \"border-box\",\r\n  },\r\n  variants: {\r\n    panel: (props) => ({\r\n      bg: props.colorMode === \"dark\" ? \"#111C44\" : \"white\",\r\n    }),\r\n  },\r\n  defaultProps: {\r\n    variant: \"panel\",\r\n  },\r\n};\r\n\r\nexport const CardComponent = {\r\n  components: {\r\n    Card,\r\n  },\r\n};\r\n","const MainPanel = {\r\n  baseStyle: {\r\n    float: \"right\",\r\n    maxWidth: \"100%\",\r\n    overflow: \"auto\",\r\n    position: \"relative\",\r\n    maxHeight: \"100%\",\r\n    transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\",\r\n    transitionDuration: \".2s, .2s, .35s\",\r\n    transitionProperty: \"top, bottom, width\",\r\n    transitionTimingFunction: \"linear, linear, ease\",\r\n  },\r\n  variants: {\r\n    main: (props) => ({\r\n      float: \"right\",\r\n    }),\r\n    rtl: (props) => ({\r\n      float: \"left\",\r\n    }),\r\n  },\r\n  defaultProps: {\r\n    variant: \"main\",\r\n  },\r\n};\r\n\r\nexport const MainPanelComponent = {\r\n  components: {\r\n    MainPanel,\r\n  },\r\n};\r\n","const PanelContent = {\r\n  baseStyle: {\r\n    ms: \"auto\",\r\n    me: \"auto\",\r\n    ps: \"15px\",\r\n    pe: \"15px\",\r\n  },\r\n};\r\n\r\nexport const PanelContentComponent = {\r\n  components: {\r\n    PanelContent,\r\n  },\r\n};\r\n","const PanelContainer = {\r\n  baseStyle: {\r\n    p: \"30px 15px\",\r\n    minHeight: \"calc(100vh - 123px)\",\r\n  },\r\n};\r\n\r\nexport const PanelContainerComponent = {\r\n  components: {\r\n    PanelContainer,\r\n  },\r\n};\r\n","import { extendTheme } from \"@chakra-ui/react\";\r\nimport { globalStyles } from \"./styles\";\r\nimport { breakpoints } from \"./foundations/breakpoints\";\r\nimport { buttonStyles } from \"./components/button\";\r\nimport { badgeStyles } from \"./components/badge\";\r\nimport { linkStyles } from \"./components/link\";\r\nimport { inputStyles } from \"./components/input\";\r\nimport { CardComponent } from \"./additions/card/Card\";\r\nimport { MainPanelComponent } from \"./additions/layout/MainPanel\";\r\nimport { PanelContentComponent } from \"./additions/layout/PanelContent\";\r\nimport { PanelContainerComponent } from \"./additions/layout/PanelContainer\";\r\n// import { mode } from \"@chakra-ui/theme-tools\";\r\nexport default extendTheme(\r\n  { breakpoints }, // Breakpoints\r\n  globalStyles,\r\n  buttonStyles, // Button styles\r\n  badgeStyles, // Badge styles\r\n  linkStyles, // Link styles\r\n  inputStyles, // Input styles\r\n  CardComponent, // Card component\r\n  MainPanelComponent, // Main Panel component\r\n  PanelContentComponent, // Panel Content component\r\n  PanelContainerComponent // Panel Container component\r\n);\r\n","export const badgeStyles = {\r\n    components: {\r\n        Badge: {\r\n            sizes: {\r\n                md: {\r\n                    width: \"65px\",\r\n                    height: \"25px\"\r\n                }\r\n            },\r\n            baseStyle: {\r\n                textTransform: \"capitalize\"\r\n            }\r\n\r\n        }\r\n    }\r\n}","export const linkStyles = {\r\n  components: {\r\n    Link: {\r\n      // 3. We can add a new visual variant\r\n      decoration: \"none\",\r\n      baseStyle: {\r\n        _hover: {\r\n          textDecoration: \"none\",\r\n        },\r\n        _focus: {\r\n          boxShadow: \"none\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard Chakra - v1.0.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-chakra\r\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-chakra/blob/master/LICENSE.md)\r\n\r\n* Design and Coded by Simmmple & Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport AuthLayout from \"layouts/Auth.js\";\r\nimport AdminLayout from \"layouts/Admin.js\";\r\nimport RTLLayout from \"layouts/RTL.js\"; // Chakra imports\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\n// Custom Chakra theme\r\nimport theme from \"theme/theme.js\";\r\n\r\nReactDOM.render(\r\n  <ChakraProvider theme={theme} resetCss={false} position=\"relative\">\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path={`/auth`} component={AuthLayout} />\r\n        <Route path={`/admin`} component={AdminLayout} />\r\n        <Route path={`/rtl`} component={RTLLayout} />\r\n        <Redirect from={`/`} to=\"/admin/dashboard\" />\r\n      </Switch>\r\n    </HashRouter>\r\n  </ChakraProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// chakra imports\r\nimport { Box, ChakraProvider, Portal } from \"@chakra-ui/react\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\n// core components\r\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\r\nimport React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport routes from \"routes.js\";\r\n\r\nexport default function Pages(props) {\r\n  const { ...rest } = props;\r\n  // ref for the wrapper div\r\n  const wrapper = React.createRef();\r\n  React.useEffect(() => {\r\n    document.body.style.overflow = \"unset\";\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {};\r\n  });\r\n  const getActiveRoute = (routes) => {\r\n    let activeRoute = \"Default Brand Text\";\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (routes[i].collapse) {\r\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\r\n        if (collapseActiveRoute !== activeRoute) {\r\n          return collapseActiveRoute;\r\n        }\r\n      } else if (routes[i].category) {\r\n        let categoryActiveRoute = getActiveRoute(routes[i].views);\r\n        if (categoryActiveRoute !== activeRoute) {\r\n          return categoryActiveRoute;\r\n        }\r\n      } else {\r\n        if (\r\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\r\n        ) {\r\n          return routes[i].name;\r\n        }\r\n      }\r\n    }\r\n    return activeRoute;\r\n  };\r\n  const getActiveNavbar = (routes) => {\r\n    let activeNavbar = false;\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (routes[i].category) {\r\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\r\n        if (categoryActiveNavbar !== activeNavbar) {\r\n          return categoryActiveNavbar;\r\n        }\r\n      } else {\r\n        if (\r\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\r\n        ) {\r\n          if (routes[i].secondaryNavbar) {\r\n            return routes[i].secondaryNavbar;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return activeNavbar;\r\n  };\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        return getRoutes(prop.views);\r\n      }\r\n      if (prop.category === \"account\") {\r\n        return getRoutes(prop.views);\r\n      }\r\n      if (prop.layout === \"/auth\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  const navRef = React.useRef();\r\n  document.documentElement.dir = \"ltr\";\r\n  return (\r\n    <Box ref={navRef} w='100%'>\r\n      <Portal containerRef={navRef}>\r\n        <AuthNavbar secondary={getActiveNavbar(routes)} logoText='' />\r\n      </Portal>\r\n      <Box w='100%'>\r\n        <Box ref={wrapper} w='100%'>\r\n          <Switch>\r\n            {getRoutes(routes)}\r\n            <Redirect from='/auth' to='/auth/login-page' />\r\n          </Switch>\r\n        </Box>\r\n      </Box>\r\n      <Box px='24px' mx='auto' width='1044px' maxW='100%' mt='60px'>\r\n        <Footer />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","// Chakra imports\r\nimport {\r\n  Portal,\r\n  useDisclosure,\r\n  Stack,\r\n  Box,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\nimport Configurator from \"components/Configurator/Configurator\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\nimport {\r\n  ArgonLogoDark,\r\n  ArgonLogoLight,\r\n  ChakraLogoDark,\r\n  ChakraLogoLight,\r\n} from \"components/Icons/Icons\";\r\n// Layout components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport React, { useState } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport routes from \"routes.js\";\r\n// Custom Chakra theme\r\nimport FixedPlugin from \"../components/FixedPlugin/FixedPlugin\";\r\n// Custom components\r\nimport MainPanel from \"../components/Layout/MainPanel\";\r\nimport PanelContainer from \"../components/Layout/PanelContainer\";\r\nimport PanelContent from \"../components/Layout/PanelContent\";\r\nimport bgAdmin from \"assets/img/admin-background.png\";\r\n\r\nexport default function Dashboard(props) {\r\n  const { ...rest } = props;\r\n  // states and functions\r\n  const [fixed, setFixed] = useState(false);\r\n  const { colorMode } = useColorMode();\r\n  // functions for changing the states from components\r\n  const getRoute = () => {\r\n    return window.location.pathname !== \"/admin/full-screen-maps\";\r\n  };\r\n  const getActiveRoute = (routes) => {\r\n    let activeRoute = \"Default Brand Text\";\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (routes[i].collapse) {\r\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\r\n        if (collapseActiveRoute !== activeRoute) {\r\n          return collapseActiveRoute;\r\n        }\r\n      } else if (routes[i].category) {\r\n        let categoryActiveRoute = getActiveRoute(routes[i].views);\r\n        if (categoryActiveRoute !== activeRoute) {\r\n          return categoryActiveRoute;\r\n        }\r\n      } else {\r\n        if (\r\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\r\n        ) {\r\n          return routes[i].name;\r\n        }\r\n      }\r\n    }\r\n    return activeRoute;\r\n  };\r\n  // This changes navbar state(fixed or not)\r\n  const getActiveNavbar = (routes) => {\r\n    let activeNavbar = false;\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (routes[i].category) {\r\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\r\n        if (categoryActiveNavbar !== activeNavbar) {\r\n          return categoryActiveNavbar;\r\n        }\r\n      } else {\r\n        if (\r\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\r\n        ) {\r\n          if (routes[i].secondaryNavbar) {\r\n            return routes[i].secondaryNavbar;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return activeNavbar;\r\n  };\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        return getRoutes(prop.views);\r\n      }\r\n      if (prop.category === \"account\") {\r\n        return getRoutes(prop.views);\r\n      }\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  document.documentElement.dir = \"ltr\";\r\n  // Chakra Color Mode\r\n  return (\r\n    <Box>\r\n      <Box\r\n        minH='40vh'\r\n        w='100%'\r\n        position='absolute'\r\n        bgImage={colorMode === \"light\" ? bgAdmin : \"none\"}\r\n        bg={colorMode === \"light\" ? bgAdmin : \"navy.900\"}\r\n        bgSize='cover'\r\n        top='0'\r\n      />\r\n      <Sidebar\r\n        routes={routes}\r\n        logo={\r\n          <Stack direction='row' spacing='12px' align='center' justify='center'>\r\n            {colorMode === \"dark\" ? (\r\n              <ArgonLogoLight w='74px' h='27px' />\r\n            ) : (\r\n              <ArgonLogoDark w='74px' h='27px' />\r\n            )}\r\n            <Box\r\n              w='1px'\r\n              h='20px'\r\n              bg={colorMode === \"dark\" ? \"white\" : \"gray.700\"}\r\n            />\r\n            {colorMode === \"dark\" ? (\r\n              <ChakraLogoLight w='82px' h='21px' />\r\n            ) : (\r\n              <ChakraLogoDark w='82px' h='21px' />\r\n            )}\r\n          </Stack>\r\n        }\r\n        display='none'\r\n        {...rest}\r\n      />\r\n      <MainPanel\r\n        w={{\r\n          base: \"100%\",\r\n          xl: \"calc(100% - 275px)\",\r\n        }}>\r\n        <Portal>\r\n          <AdminNavbar\r\n            onOpen={onOpen}\r\n            brandText={getActiveRoute(routes)}\r\n            secondary={getActiveNavbar(routes)}\r\n            fixed={fixed}\r\n            {...rest}\r\n          />\r\n        </Portal>\r\n        {getRoute() ? (\r\n          <PanelContent>\r\n            <PanelContainer>\r\n              <Switch>\r\n                {getRoutes(routes)}\r\n                <Redirect from='/admin' to='/admin/dashboard' />\r\n              </Switch>\r\n            </PanelContainer>\r\n          </PanelContent>\r\n        ) : null}\r\n        <Footer />\r\n        <Portal>\r\n          <FixedPlugin\r\n            secondary={getActiveNavbar(routes)}\r\n            fixed={fixed}\r\n            onOpen={onOpen}\r\n          />\r\n        </Portal>\r\n        <Configurator\r\n          secondary={getActiveNavbar(routes)}\r\n          isOpen={isOpen}\r\n          onClose={onClose}\r\n          isChecked={fixed}\r\n          onSwitch={(value) => {\r\n            setFixed(value);\r\n          }}\r\n        />\r\n      </MainPanel>\r\n    </Box>\r\n  );\r\n}\r\n","// Chakra imports\r\nimport {\r\n  Portal,\r\n  useDisclosure,\r\n  useColorMode,\r\n  Stack,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport { RtlProvider } from \"components/RTLProvider/RTLProvider\";\r\nimport Configurator from \"components/Configurator/Configurator\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\n// Layout components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport React, { useState } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport routes from \"routes.js\";\r\nimport FixedPlugin from \"../components/FixedPlugin/FixedPlugin\";\r\n// Custom components\r\nimport MainPanel from \"../components/Layout/MainPanel\";\r\nimport PanelContainer from \"../components/Layout/PanelContainer\";\r\nimport PanelContent from \"../components/Layout/PanelContent\";\r\nimport {\r\n  ArgonLogoDark,\r\n  ArgonLogoLight,\r\n  ChakraLogoDark,\r\n  ChakraLogoLight,\r\n} from \"components/Icons/Icons\";\r\nimport bgAdmin from \"assets/img/admin-background.png\";\r\nexport default function Dashboard(props) {\r\n  const { ...rest } = props;\r\n  // states and functions\r\n  const [sidebarVariant, setSidebarVariant] = useState(\"transparent\");\r\n  const [fixed, setFixed] = useState(false);\r\n  // ref for main panel div\r\n  const mainPanel = React.createRef();\r\n  const getRoute = () => {\r\n    return window.location.pathname !== \"/admin/full-screen-maps\";\r\n  };\r\n  const getActiveRoute = (routes) => {\r\n    let activeRoute = \"Default Brand Text\";\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (routes[i].collapse) {\r\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\r\n        if (collapseActiveRoute !== activeRoute) {\r\n          return collapseActiveRoute;\r\n        }\r\n      } else if (routes[i].category) {\r\n        let categoryActiveRoute = getActiveRoute(routes[i].views);\r\n        if (categoryActiveRoute !== activeRoute) {\r\n          return categoryActiveRoute;\r\n        }\r\n      } else {\r\n        if (\r\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\r\n        ) {\r\n          return routes[i].name;\r\n        }\r\n      }\r\n    }\r\n    return activeRoute;\r\n  };\r\n  // This changes navbar state(fixed or not)\r\n  const getActiveNavbar = (routes) => {\r\n    let activeNavbar = false;\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (routes[i].category) {\r\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\r\n        if (categoryActiveNavbar !== activeNavbar) {\r\n          return categoryActiveNavbar;\r\n        }\r\n      } else {\r\n        if (\r\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\r\n        ) {\r\n          if (routes[i].secondaryNavbar) {\r\n            return routes[i].secondaryNavbar;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return activeNavbar;\r\n  };\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        return getRoutes(prop.views);\r\n      }\r\n      if (prop.category === \"account\") {\r\n        return getRoutes(prop.views);\r\n      }\r\n      if (prop.layout === \"/rtl\" || prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  const { colorMode } = useColorMode();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  document.documentElement.dir = \"rtl\";\r\n  // Chakra Color Mode\r\n  return (\r\n    <RtlProvider>\r\n      <Box\r\n        minH='40vh'\r\n        w='100%'\r\n        position='absolute'\r\n        bgImage={colorMode === \"light\" ? bgAdmin : \"none\"}\r\n        bg={colorMode === \"light\" ? bgAdmin : \"navy.900\"}\r\n        bgSize='cover'\r\n        top='0'\r\n      />\r\n      <Sidebar\r\n        routes={routes}\r\n        logo={\r\n          <Stack direction='row' spacing='12px' align='center' justify='center'>\r\n            {colorMode === \"dark\" ? (\r\n              <ArgonLogoLight w='74px' h='27px' />\r\n            ) : (\r\n              <ArgonLogoDark w='74px' h='27px' />\r\n            )}\r\n            <Box\r\n              w='1px'\r\n              h='20px'\r\n              bg={colorMode === \"dark\" ? \"white\" : \"gray.700\"}\r\n            />\r\n            {colorMode === \"dark\" ? (\r\n              <ChakraLogoLight w='82px' h='21px' />\r\n            ) : (\r\n              <ChakraLogoDark w='82px' h='21px' />\r\n            )}\r\n          </Stack>\r\n        }\r\n        display='none'\r\n        sidebarVariant={sidebarVariant}\r\n        {...rest}\r\n      />\r\n      <MainPanel\r\n        variant='rtl'\r\n        ref={mainPanel}\r\n        w={{\r\n          base: \"100%\",\r\n          xl: \"calc(100% - 275px)\",\r\n        }}>\r\n        <Portal>\r\n          <AdminNavbar\r\n            onOpen={onOpen}\r\n            logoText={\"ARGON DASHBOARD CHAKRA\"}\r\n            brandText={getActiveRoute(routes)}\r\n            secondary={getActiveNavbar(routes)}\r\n            fixed={fixed}\r\n            {...rest}\r\n          />\r\n        </Portal>\r\n        {getRoute() ? (\r\n          <PanelContent>\r\n            <PanelContainer>\r\n              <Switch>\r\n                {getRoutes(routes)}\r\n                <Redirect from='/rtl' to='/rtl/rtl-support-page' />\r\n              </Switch>\r\n            </PanelContainer>\r\n          </PanelContent>\r\n        ) : null}\r\n        <Footer />\r\n        <Portal>\r\n          <FixedPlugin\r\n            secondary={getActiveNavbar(routes)}\r\n            fixed={fixed}\r\n            onOpen={onOpen}\r\n          />\r\n        </Portal>\r\n        <Configurator\r\n          secondary={getActiveNavbar(routes)}\r\n          isOpen={isOpen}\r\n          onClose={onClose}\r\n          isChecked={fixed}\r\n          onSwitch={(value) => {\r\n            setFixed(value);\r\n          }}\r\n          onOpaque={() => setSidebarVariant(\"opaque\")}\r\n          onTransparent={() => setSidebarVariant(\"transparent\")}\r\n        />\r\n      </MainPanel>\r\n    </RtlProvider>\r\n  );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/avatar2.180efe65.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar3.63a024bc.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar4.542d9684.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar5.b7bd4038.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar1.98f8cfc6.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar6.7050133d.png\";","module.exports = __webpack_public_path__ + \"static/media/admin-background.d07ced08.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar7.8eea6d05.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar8.06114e16.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar10.552b0802.png\";","module.exports = __webpack_public_path__ + \"static/media/ImageArchitect1.8375bb9e.png\";","module.exports = __webpack_public_path__ + \"static/media/ImageArchitect2.6975d9f0.png\";","module.exports = __webpack_public_path__ + \"static/media/ImageArchitect3.10848834.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar9.8aecf004.png\";"],"sourceRoot":""}